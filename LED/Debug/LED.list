
LED.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001e4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000066d4  080001e8  080001e8  000101e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004c4  080068c0  080068c0  000168c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006d84  08006d84  000201e0  2**0
                  CONTENTS
  4 .ARM          00000000  08006d84  08006d84  000201e0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006d84  08006d84  000201e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006d84  08006d84  00016d84  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006d88  08006d88  00016d88  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e0  20000000  08006d8c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  200001e0  08006f6c  000201e0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000214  08006f6c  00020214  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201e0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000037b3  00000000  00000000  00020209  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001257  00000000  00000000  000239bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000004d0  00000000  00000000  00024c18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000408  00000000  00000000  000250e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019443  00000000  00000000  000254f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00005f43  00000000  00000000  0003e933  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008f428  00000000  00000000  00044876  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000d3c9e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000025cc  00000000  00000000  000d3cf0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e8 <__do_global_dtors_aux>:
 80001e8:	b510      	push	{r4, lr}
 80001ea:	4c05      	ldr	r4, [pc, #20]	; (8000200 <__do_global_dtors_aux+0x18>)
 80001ec:	7823      	ldrb	r3, [r4, #0]
 80001ee:	b933      	cbnz	r3, 80001fe <__do_global_dtors_aux+0x16>
 80001f0:	4b04      	ldr	r3, [pc, #16]	; (8000204 <__do_global_dtors_aux+0x1c>)
 80001f2:	b113      	cbz	r3, 80001fa <__do_global_dtors_aux+0x12>
 80001f4:	4804      	ldr	r0, [pc, #16]	; (8000208 <__do_global_dtors_aux+0x20>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	2301      	movs	r3, #1
 80001fc:	7023      	strb	r3, [r4, #0]
 80001fe:	bd10      	pop	{r4, pc}
 8000200:	200001e0 	.word	0x200001e0
 8000204:	00000000 	.word	0x00000000
 8000208:	080068a4 	.word	0x080068a4

0800020c <frame_dummy>:
 800020c:	b508      	push	{r3, lr}
 800020e:	4b03      	ldr	r3, [pc, #12]	; (800021c <frame_dummy+0x10>)
 8000210:	b11b      	cbz	r3, 800021a <frame_dummy+0xe>
 8000212:	4903      	ldr	r1, [pc, #12]	; (8000220 <frame_dummy+0x14>)
 8000214:	4803      	ldr	r0, [pc, #12]	; (8000224 <frame_dummy+0x18>)
 8000216:	f3af 8000 	nop.w
 800021a:	bd08      	pop	{r3, pc}
 800021c:	00000000 	.word	0x00000000
 8000220:	200001e4 	.word	0x200001e4
 8000224:	080068a4 	.word	0x080068a4

08000228 <strlen>:
 8000228:	4603      	mov	r3, r0
 800022a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800022e:	2a00      	cmp	r2, #0
 8000230:	d1fb      	bne.n	800022a <strlen+0x2>
 8000232:	1a18      	subs	r0, r3, r0
 8000234:	3801      	subs	r0, #1
 8000236:	4770      	bx	lr

08000238 <__aeabi_drsub>:
 8000238:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 800023c:	e002      	b.n	8000244 <__adddf3>
 800023e:	bf00      	nop

08000240 <__aeabi_dsub>:
 8000240:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000244 <__adddf3>:
 8000244:	b530      	push	{r4, r5, lr}
 8000246:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800024a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800024e:	ea94 0f05 	teq	r4, r5
 8000252:	bf08      	it	eq
 8000254:	ea90 0f02 	teqeq	r0, r2
 8000258:	bf1f      	itttt	ne
 800025a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800025e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000262:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000266:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800026a:	f000 80e2 	beq.w	8000432 <__adddf3+0x1ee>
 800026e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000272:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000276:	bfb8      	it	lt
 8000278:	426d      	neglt	r5, r5
 800027a:	dd0c      	ble.n	8000296 <__adddf3+0x52>
 800027c:	442c      	add	r4, r5
 800027e:	ea80 0202 	eor.w	r2, r0, r2
 8000282:	ea81 0303 	eor.w	r3, r1, r3
 8000286:	ea82 0000 	eor.w	r0, r2, r0
 800028a:	ea83 0101 	eor.w	r1, r3, r1
 800028e:	ea80 0202 	eor.w	r2, r0, r2
 8000292:	ea81 0303 	eor.w	r3, r1, r3
 8000296:	2d36      	cmp	r5, #54	; 0x36
 8000298:	bf88      	it	hi
 800029a:	bd30      	pophi	{r4, r5, pc}
 800029c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002a0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002a4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002a8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002ac:	d002      	beq.n	80002b4 <__adddf3+0x70>
 80002ae:	4240      	negs	r0, r0
 80002b0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002b4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80002b8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002bc:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002c0:	d002      	beq.n	80002c8 <__adddf3+0x84>
 80002c2:	4252      	negs	r2, r2
 80002c4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002c8:	ea94 0f05 	teq	r4, r5
 80002cc:	f000 80a7 	beq.w	800041e <__adddf3+0x1da>
 80002d0:	f1a4 0401 	sub.w	r4, r4, #1
 80002d4:	f1d5 0e20 	rsbs	lr, r5, #32
 80002d8:	db0d      	blt.n	80002f6 <__adddf3+0xb2>
 80002da:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002de:	fa22 f205 	lsr.w	r2, r2, r5
 80002e2:	1880      	adds	r0, r0, r2
 80002e4:	f141 0100 	adc.w	r1, r1, #0
 80002e8:	fa03 f20e 	lsl.w	r2, r3, lr
 80002ec:	1880      	adds	r0, r0, r2
 80002ee:	fa43 f305 	asr.w	r3, r3, r5
 80002f2:	4159      	adcs	r1, r3
 80002f4:	e00e      	b.n	8000314 <__adddf3+0xd0>
 80002f6:	f1a5 0520 	sub.w	r5, r5, #32
 80002fa:	f10e 0e20 	add.w	lr, lr, #32
 80002fe:	2a01      	cmp	r2, #1
 8000300:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000304:	bf28      	it	cs
 8000306:	f04c 0c02 	orrcs.w	ip, ip, #2
 800030a:	fa43 f305 	asr.w	r3, r3, r5
 800030e:	18c0      	adds	r0, r0, r3
 8000310:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000314:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000318:	d507      	bpl.n	800032a <__adddf3+0xe6>
 800031a:	f04f 0e00 	mov.w	lr, #0
 800031e:	f1dc 0c00 	rsbs	ip, ip, #0
 8000322:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000326:	eb6e 0101 	sbc.w	r1, lr, r1
 800032a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800032e:	d31b      	bcc.n	8000368 <__adddf3+0x124>
 8000330:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000334:	d30c      	bcc.n	8000350 <__adddf3+0x10c>
 8000336:	0849      	lsrs	r1, r1, #1
 8000338:	ea5f 0030 	movs.w	r0, r0, rrx
 800033c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000340:	f104 0401 	add.w	r4, r4, #1
 8000344:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000348:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 800034c:	f080 809a 	bcs.w	8000484 <__adddf3+0x240>
 8000350:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000354:	bf08      	it	eq
 8000356:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800035a:	f150 0000 	adcs.w	r0, r0, #0
 800035e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000362:	ea41 0105 	orr.w	r1, r1, r5
 8000366:	bd30      	pop	{r4, r5, pc}
 8000368:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800036c:	4140      	adcs	r0, r0
 800036e:	eb41 0101 	adc.w	r1, r1, r1
 8000372:	3c01      	subs	r4, #1
 8000374:	bf28      	it	cs
 8000376:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800037a:	d2e9      	bcs.n	8000350 <__adddf3+0x10c>
 800037c:	f091 0f00 	teq	r1, #0
 8000380:	bf04      	itt	eq
 8000382:	4601      	moveq	r1, r0
 8000384:	2000      	moveq	r0, #0
 8000386:	fab1 f381 	clz	r3, r1
 800038a:	bf08      	it	eq
 800038c:	3320      	addeq	r3, #32
 800038e:	f1a3 030b 	sub.w	r3, r3, #11
 8000392:	f1b3 0220 	subs.w	r2, r3, #32
 8000396:	da0c      	bge.n	80003b2 <__adddf3+0x16e>
 8000398:	320c      	adds	r2, #12
 800039a:	dd08      	ble.n	80003ae <__adddf3+0x16a>
 800039c:	f102 0c14 	add.w	ip, r2, #20
 80003a0:	f1c2 020c 	rsb	r2, r2, #12
 80003a4:	fa01 f00c 	lsl.w	r0, r1, ip
 80003a8:	fa21 f102 	lsr.w	r1, r1, r2
 80003ac:	e00c      	b.n	80003c8 <__adddf3+0x184>
 80003ae:	f102 0214 	add.w	r2, r2, #20
 80003b2:	bfd8      	it	le
 80003b4:	f1c2 0c20 	rsble	ip, r2, #32
 80003b8:	fa01 f102 	lsl.w	r1, r1, r2
 80003bc:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003c0:	bfdc      	itt	le
 80003c2:	ea41 010c 	orrle.w	r1, r1, ip
 80003c6:	4090      	lslle	r0, r2
 80003c8:	1ae4      	subs	r4, r4, r3
 80003ca:	bfa2      	ittt	ge
 80003cc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003d0:	4329      	orrge	r1, r5
 80003d2:	bd30      	popge	{r4, r5, pc}
 80003d4:	ea6f 0404 	mvn.w	r4, r4
 80003d8:	3c1f      	subs	r4, #31
 80003da:	da1c      	bge.n	8000416 <__adddf3+0x1d2>
 80003dc:	340c      	adds	r4, #12
 80003de:	dc0e      	bgt.n	80003fe <__adddf3+0x1ba>
 80003e0:	f104 0414 	add.w	r4, r4, #20
 80003e4:	f1c4 0220 	rsb	r2, r4, #32
 80003e8:	fa20 f004 	lsr.w	r0, r0, r4
 80003ec:	fa01 f302 	lsl.w	r3, r1, r2
 80003f0:	ea40 0003 	orr.w	r0, r0, r3
 80003f4:	fa21 f304 	lsr.w	r3, r1, r4
 80003f8:	ea45 0103 	orr.w	r1, r5, r3
 80003fc:	bd30      	pop	{r4, r5, pc}
 80003fe:	f1c4 040c 	rsb	r4, r4, #12
 8000402:	f1c4 0220 	rsb	r2, r4, #32
 8000406:	fa20 f002 	lsr.w	r0, r0, r2
 800040a:	fa01 f304 	lsl.w	r3, r1, r4
 800040e:	ea40 0003 	orr.w	r0, r0, r3
 8000412:	4629      	mov	r1, r5
 8000414:	bd30      	pop	{r4, r5, pc}
 8000416:	fa21 f004 	lsr.w	r0, r1, r4
 800041a:	4629      	mov	r1, r5
 800041c:	bd30      	pop	{r4, r5, pc}
 800041e:	f094 0f00 	teq	r4, #0
 8000422:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000426:	bf06      	itte	eq
 8000428:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 800042c:	3401      	addeq	r4, #1
 800042e:	3d01      	subne	r5, #1
 8000430:	e74e      	b.n	80002d0 <__adddf3+0x8c>
 8000432:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000436:	bf18      	it	ne
 8000438:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800043c:	d029      	beq.n	8000492 <__adddf3+0x24e>
 800043e:	ea94 0f05 	teq	r4, r5
 8000442:	bf08      	it	eq
 8000444:	ea90 0f02 	teqeq	r0, r2
 8000448:	d005      	beq.n	8000456 <__adddf3+0x212>
 800044a:	ea54 0c00 	orrs.w	ip, r4, r0
 800044e:	bf04      	itt	eq
 8000450:	4619      	moveq	r1, r3
 8000452:	4610      	moveq	r0, r2
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	ea91 0f03 	teq	r1, r3
 800045a:	bf1e      	ittt	ne
 800045c:	2100      	movne	r1, #0
 800045e:	2000      	movne	r0, #0
 8000460:	bd30      	popne	{r4, r5, pc}
 8000462:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000466:	d105      	bne.n	8000474 <__adddf3+0x230>
 8000468:	0040      	lsls	r0, r0, #1
 800046a:	4149      	adcs	r1, r1
 800046c:	bf28      	it	cs
 800046e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000472:	bd30      	pop	{r4, r5, pc}
 8000474:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000478:	bf3c      	itt	cc
 800047a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800047e:	bd30      	popcc	{r4, r5, pc}
 8000480:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000484:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000488:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800048c:	f04f 0000 	mov.w	r0, #0
 8000490:	bd30      	pop	{r4, r5, pc}
 8000492:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000496:	bf1a      	itte	ne
 8000498:	4619      	movne	r1, r3
 800049a:	4610      	movne	r0, r2
 800049c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004a0:	bf1c      	itt	ne
 80004a2:	460b      	movne	r3, r1
 80004a4:	4602      	movne	r2, r0
 80004a6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004aa:	bf06      	itte	eq
 80004ac:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004b0:	ea91 0f03 	teqeq	r1, r3
 80004b4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80004b8:	bd30      	pop	{r4, r5, pc}
 80004ba:	bf00      	nop

080004bc <__aeabi_ui2d>:
 80004bc:	f090 0f00 	teq	r0, #0
 80004c0:	bf04      	itt	eq
 80004c2:	2100      	moveq	r1, #0
 80004c4:	4770      	bxeq	lr
 80004c6:	b530      	push	{r4, r5, lr}
 80004c8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004cc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004d0:	f04f 0500 	mov.w	r5, #0
 80004d4:	f04f 0100 	mov.w	r1, #0
 80004d8:	e750      	b.n	800037c <__adddf3+0x138>
 80004da:	bf00      	nop

080004dc <__aeabi_i2d>:
 80004dc:	f090 0f00 	teq	r0, #0
 80004e0:	bf04      	itt	eq
 80004e2:	2100      	moveq	r1, #0
 80004e4:	4770      	bxeq	lr
 80004e6:	b530      	push	{r4, r5, lr}
 80004e8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004ec:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004f0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004f4:	bf48      	it	mi
 80004f6:	4240      	negmi	r0, r0
 80004f8:	f04f 0100 	mov.w	r1, #0
 80004fc:	e73e      	b.n	800037c <__adddf3+0x138>
 80004fe:	bf00      	nop

08000500 <__aeabi_f2d>:
 8000500:	0042      	lsls	r2, r0, #1
 8000502:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000506:	ea4f 0131 	mov.w	r1, r1, rrx
 800050a:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800050e:	bf1f      	itttt	ne
 8000510:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000514:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000518:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 800051c:	4770      	bxne	lr
 800051e:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8000522:	bf08      	it	eq
 8000524:	4770      	bxeq	lr
 8000526:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 800052a:	bf04      	itt	eq
 800052c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000530:	4770      	bxeq	lr
 8000532:	b530      	push	{r4, r5, lr}
 8000534:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000538:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800053c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000540:	e71c      	b.n	800037c <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_ul2d>:
 8000544:	ea50 0201 	orrs.w	r2, r0, r1
 8000548:	bf08      	it	eq
 800054a:	4770      	bxeq	lr
 800054c:	b530      	push	{r4, r5, lr}
 800054e:	f04f 0500 	mov.w	r5, #0
 8000552:	e00a      	b.n	800056a <__aeabi_l2d+0x16>

08000554 <__aeabi_l2d>:
 8000554:	ea50 0201 	orrs.w	r2, r0, r1
 8000558:	bf08      	it	eq
 800055a:	4770      	bxeq	lr
 800055c:	b530      	push	{r4, r5, lr}
 800055e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000562:	d502      	bpl.n	800056a <__aeabi_l2d+0x16>
 8000564:	4240      	negs	r0, r0
 8000566:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800056a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800056e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000572:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000576:	f43f aed8 	beq.w	800032a <__adddf3+0xe6>
 800057a:	f04f 0203 	mov.w	r2, #3
 800057e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000582:	bf18      	it	ne
 8000584:	3203      	addne	r2, #3
 8000586:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800058a:	bf18      	it	ne
 800058c:	3203      	addne	r2, #3
 800058e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000592:	f1c2 0320 	rsb	r3, r2, #32
 8000596:	fa00 fc03 	lsl.w	ip, r0, r3
 800059a:	fa20 f002 	lsr.w	r0, r0, r2
 800059e:	fa01 fe03 	lsl.w	lr, r1, r3
 80005a2:	ea40 000e 	orr.w	r0, r0, lr
 80005a6:	fa21 f102 	lsr.w	r1, r1, r2
 80005aa:	4414      	add	r4, r2
 80005ac:	e6bd      	b.n	800032a <__adddf3+0xe6>
 80005ae:	bf00      	nop

080005b0 <__aeabi_dmul>:
 80005b0:	b570      	push	{r4, r5, r6, lr}
 80005b2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005b6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80005ba:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005be:	bf1d      	ittte	ne
 80005c0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005c4:	ea94 0f0c 	teqne	r4, ip
 80005c8:	ea95 0f0c 	teqne	r5, ip
 80005cc:	f000 f8de 	bleq	800078c <__aeabi_dmul+0x1dc>
 80005d0:	442c      	add	r4, r5
 80005d2:	ea81 0603 	eor.w	r6, r1, r3
 80005d6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005da:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005de:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005e2:	bf18      	it	ne
 80005e4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005ec:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005f0:	d038      	beq.n	8000664 <__aeabi_dmul+0xb4>
 80005f2:	fba0 ce02 	umull	ip, lr, r0, r2
 80005f6:	f04f 0500 	mov.w	r5, #0
 80005fa:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005fe:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000602:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000606:	f04f 0600 	mov.w	r6, #0
 800060a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800060e:	f09c 0f00 	teq	ip, #0
 8000612:	bf18      	it	ne
 8000614:	f04e 0e01 	orrne.w	lr, lr, #1
 8000618:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800061c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000620:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000624:	d204      	bcs.n	8000630 <__aeabi_dmul+0x80>
 8000626:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800062a:	416d      	adcs	r5, r5
 800062c:	eb46 0606 	adc.w	r6, r6, r6
 8000630:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000634:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000638:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800063c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000640:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000644:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000648:	bf88      	it	hi
 800064a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800064e:	d81e      	bhi.n	800068e <__aeabi_dmul+0xde>
 8000650:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000654:	bf08      	it	eq
 8000656:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800065a:	f150 0000 	adcs.w	r0, r0, #0
 800065e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000662:	bd70      	pop	{r4, r5, r6, pc}
 8000664:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000668:	ea46 0101 	orr.w	r1, r6, r1
 800066c:	ea40 0002 	orr.w	r0, r0, r2
 8000670:	ea81 0103 	eor.w	r1, r1, r3
 8000674:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000678:	bfc2      	ittt	gt
 800067a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800067e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000682:	bd70      	popgt	{r4, r5, r6, pc}
 8000684:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000688:	f04f 0e00 	mov.w	lr, #0
 800068c:	3c01      	subs	r4, #1
 800068e:	f300 80ab 	bgt.w	80007e8 <__aeabi_dmul+0x238>
 8000692:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000696:	bfde      	ittt	le
 8000698:	2000      	movle	r0, #0
 800069a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800069e:	bd70      	pople	{r4, r5, r6, pc}
 80006a0:	f1c4 0400 	rsb	r4, r4, #0
 80006a4:	3c20      	subs	r4, #32
 80006a6:	da35      	bge.n	8000714 <__aeabi_dmul+0x164>
 80006a8:	340c      	adds	r4, #12
 80006aa:	dc1b      	bgt.n	80006e4 <__aeabi_dmul+0x134>
 80006ac:	f104 0414 	add.w	r4, r4, #20
 80006b0:	f1c4 0520 	rsb	r5, r4, #32
 80006b4:	fa00 f305 	lsl.w	r3, r0, r5
 80006b8:	fa20 f004 	lsr.w	r0, r0, r4
 80006bc:	fa01 f205 	lsl.w	r2, r1, r5
 80006c0:	ea40 0002 	orr.w	r0, r0, r2
 80006c4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80006c8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006cc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006d0:	fa21 f604 	lsr.w	r6, r1, r4
 80006d4:	eb42 0106 	adc.w	r1, r2, r6
 80006d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006dc:	bf08      	it	eq
 80006de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	f1c4 040c 	rsb	r4, r4, #12
 80006e8:	f1c4 0520 	rsb	r5, r4, #32
 80006ec:	fa00 f304 	lsl.w	r3, r0, r4
 80006f0:	fa20 f005 	lsr.w	r0, r0, r5
 80006f4:	fa01 f204 	lsl.w	r2, r1, r4
 80006f8:	ea40 0002 	orr.w	r0, r0, r2
 80006fc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000700:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000704:	f141 0100 	adc.w	r1, r1, #0
 8000708:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800070c:	bf08      	it	eq
 800070e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000712:	bd70      	pop	{r4, r5, r6, pc}
 8000714:	f1c4 0520 	rsb	r5, r4, #32
 8000718:	fa00 f205 	lsl.w	r2, r0, r5
 800071c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000720:	fa20 f304 	lsr.w	r3, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea43 0302 	orr.w	r3, r3, r2
 800072c:	fa21 f004 	lsr.w	r0, r1, r4
 8000730:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000734:	fa21 f204 	lsr.w	r2, r1, r4
 8000738:	ea20 0002 	bic.w	r0, r0, r2
 800073c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f094 0f00 	teq	r4, #0
 8000750:	d10f      	bne.n	8000772 <__aeabi_dmul+0x1c2>
 8000752:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000756:	0040      	lsls	r0, r0, #1
 8000758:	eb41 0101 	adc.w	r1, r1, r1
 800075c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000760:	bf08      	it	eq
 8000762:	3c01      	subeq	r4, #1
 8000764:	d0f7      	beq.n	8000756 <__aeabi_dmul+0x1a6>
 8000766:	ea41 0106 	orr.w	r1, r1, r6
 800076a:	f095 0f00 	teq	r5, #0
 800076e:	bf18      	it	ne
 8000770:	4770      	bxne	lr
 8000772:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000776:	0052      	lsls	r2, r2, #1
 8000778:	eb43 0303 	adc.w	r3, r3, r3
 800077c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000780:	bf08      	it	eq
 8000782:	3d01      	subeq	r5, #1
 8000784:	d0f7      	beq.n	8000776 <__aeabi_dmul+0x1c6>
 8000786:	ea43 0306 	orr.w	r3, r3, r6
 800078a:	4770      	bx	lr
 800078c:	ea94 0f0c 	teq	r4, ip
 8000790:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000794:	bf18      	it	ne
 8000796:	ea95 0f0c 	teqne	r5, ip
 800079a:	d00c      	beq.n	80007b6 <__aeabi_dmul+0x206>
 800079c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007a0:	bf18      	it	ne
 80007a2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007a6:	d1d1      	bne.n	800074c <__aeabi_dmul+0x19c>
 80007a8:	ea81 0103 	eor.w	r1, r1, r3
 80007ac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007b0:	f04f 0000 	mov.w	r0, #0
 80007b4:	bd70      	pop	{r4, r5, r6, pc}
 80007b6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007ba:	bf06      	itte	eq
 80007bc:	4610      	moveq	r0, r2
 80007be:	4619      	moveq	r1, r3
 80007c0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007c4:	d019      	beq.n	80007fa <__aeabi_dmul+0x24a>
 80007c6:	ea94 0f0c 	teq	r4, ip
 80007ca:	d102      	bne.n	80007d2 <__aeabi_dmul+0x222>
 80007cc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007d0:	d113      	bne.n	80007fa <__aeabi_dmul+0x24a>
 80007d2:	ea95 0f0c 	teq	r5, ip
 80007d6:	d105      	bne.n	80007e4 <__aeabi_dmul+0x234>
 80007d8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007dc:	bf1c      	itt	ne
 80007de:	4610      	movne	r0, r2
 80007e0:	4619      	movne	r1, r3
 80007e2:	d10a      	bne.n	80007fa <__aeabi_dmul+0x24a>
 80007e4:	ea81 0103 	eor.w	r1, r1, r3
 80007e8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007ec:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f4:	f04f 0000 	mov.w	r0, #0
 80007f8:	bd70      	pop	{r4, r5, r6, pc}
 80007fa:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007fe:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000802:	bd70      	pop	{r4, r5, r6, pc}

08000804 <__aeabi_ddiv>:
 8000804:	b570      	push	{r4, r5, r6, lr}
 8000806:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800080a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800080e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000812:	bf1d      	ittte	ne
 8000814:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000818:	ea94 0f0c 	teqne	r4, ip
 800081c:	ea95 0f0c 	teqne	r5, ip
 8000820:	f000 f8a7 	bleq	8000972 <__aeabi_ddiv+0x16e>
 8000824:	eba4 0405 	sub.w	r4, r4, r5
 8000828:	ea81 0e03 	eor.w	lr, r1, r3
 800082c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000830:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000834:	f000 8088 	beq.w	8000948 <__aeabi_ddiv+0x144>
 8000838:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800083c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000840:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000844:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000848:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800084c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000850:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000854:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000858:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 800085c:	429d      	cmp	r5, r3
 800085e:	bf08      	it	eq
 8000860:	4296      	cmpeq	r6, r2
 8000862:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000866:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800086a:	d202      	bcs.n	8000872 <__aeabi_ddiv+0x6e>
 800086c:	085b      	lsrs	r3, r3, #1
 800086e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000872:	1ab6      	subs	r6, r6, r2
 8000874:	eb65 0503 	sbc.w	r5, r5, r3
 8000878:	085b      	lsrs	r3, r3, #1
 800087a:	ea4f 0232 	mov.w	r2, r2, rrx
 800087e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000882:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000886:	ebb6 0e02 	subs.w	lr, r6, r2
 800088a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800088e:	bf22      	ittt	cs
 8000890:	1ab6      	subcs	r6, r6, r2
 8000892:	4675      	movcs	r5, lr
 8000894:	ea40 000c 	orrcs.w	r0, r0, ip
 8000898:	085b      	lsrs	r3, r3, #1
 800089a:	ea4f 0232 	mov.w	r2, r2, rrx
 800089e:	ebb6 0e02 	subs.w	lr, r6, r2
 80008a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008a6:	bf22      	ittt	cs
 80008a8:	1ab6      	subcs	r6, r6, r2
 80008aa:	4675      	movcs	r5, lr
 80008ac:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008b0:	085b      	lsrs	r3, r3, #1
 80008b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008b6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ba:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008be:	bf22      	ittt	cs
 80008c0:	1ab6      	subcs	r6, r6, r2
 80008c2:	4675      	movcs	r5, lr
 80008c4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008c8:	085b      	lsrs	r3, r3, #1
 80008ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008e0:	ea55 0e06 	orrs.w	lr, r5, r6
 80008e4:	d018      	beq.n	8000918 <__aeabi_ddiv+0x114>
 80008e6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008ea:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008ee:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008f2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008f6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008fa:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008fe:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000902:	d1c0      	bne.n	8000886 <__aeabi_ddiv+0x82>
 8000904:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000908:	d10b      	bne.n	8000922 <__aeabi_ddiv+0x11e>
 800090a:	ea41 0100 	orr.w	r1, r1, r0
 800090e:	f04f 0000 	mov.w	r0, #0
 8000912:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000916:	e7b6      	b.n	8000886 <__aeabi_ddiv+0x82>
 8000918:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800091c:	bf04      	itt	eq
 800091e:	4301      	orreq	r1, r0
 8000920:	2000      	moveq	r0, #0
 8000922:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000926:	bf88      	it	hi
 8000928:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800092c:	f63f aeaf 	bhi.w	800068e <__aeabi_dmul+0xde>
 8000930:	ebb5 0c03 	subs.w	ip, r5, r3
 8000934:	bf04      	itt	eq
 8000936:	ebb6 0c02 	subseq.w	ip, r6, r2
 800093a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800093e:	f150 0000 	adcs.w	r0, r0, #0
 8000942:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000946:	bd70      	pop	{r4, r5, r6, pc}
 8000948:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 800094c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000950:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000954:	bfc2      	ittt	gt
 8000956:	ebd4 050c 	rsbsgt	r5, r4, ip
 800095a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800095e:	bd70      	popgt	{r4, r5, r6, pc}
 8000960:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000964:	f04f 0e00 	mov.w	lr, #0
 8000968:	3c01      	subs	r4, #1
 800096a:	e690      	b.n	800068e <__aeabi_dmul+0xde>
 800096c:	ea45 0e06 	orr.w	lr, r5, r6
 8000970:	e68d      	b.n	800068e <__aeabi_dmul+0xde>
 8000972:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000976:	ea94 0f0c 	teq	r4, ip
 800097a:	bf08      	it	eq
 800097c:	ea95 0f0c 	teqeq	r5, ip
 8000980:	f43f af3b 	beq.w	80007fa <__aeabi_dmul+0x24a>
 8000984:	ea94 0f0c 	teq	r4, ip
 8000988:	d10a      	bne.n	80009a0 <__aeabi_ddiv+0x19c>
 800098a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800098e:	f47f af34 	bne.w	80007fa <__aeabi_dmul+0x24a>
 8000992:	ea95 0f0c 	teq	r5, ip
 8000996:	f47f af25 	bne.w	80007e4 <__aeabi_dmul+0x234>
 800099a:	4610      	mov	r0, r2
 800099c:	4619      	mov	r1, r3
 800099e:	e72c      	b.n	80007fa <__aeabi_dmul+0x24a>
 80009a0:	ea95 0f0c 	teq	r5, ip
 80009a4:	d106      	bne.n	80009b4 <__aeabi_ddiv+0x1b0>
 80009a6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009aa:	f43f aefd 	beq.w	80007a8 <__aeabi_dmul+0x1f8>
 80009ae:	4610      	mov	r0, r2
 80009b0:	4619      	mov	r1, r3
 80009b2:	e722      	b.n	80007fa <__aeabi_dmul+0x24a>
 80009b4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009b8:	bf18      	it	ne
 80009ba:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009be:	f47f aec5 	bne.w	800074c <__aeabi_dmul+0x19c>
 80009c2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009c6:	f47f af0d 	bne.w	80007e4 <__aeabi_dmul+0x234>
 80009ca:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009ce:	f47f aeeb 	bne.w	80007a8 <__aeabi_dmul+0x1f8>
 80009d2:	e712      	b.n	80007fa <__aeabi_dmul+0x24a>

080009d4 <__gedf2>:
 80009d4:	f04f 3cff 	mov.w	ip, #4294967295
 80009d8:	e006      	b.n	80009e8 <__cmpdf2+0x4>
 80009da:	bf00      	nop

080009dc <__ledf2>:
 80009dc:	f04f 0c01 	mov.w	ip, #1
 80009e0:	e002      	b.n	80009e8 <__cmpdf2+0x4>
 80009e2:	bf00      	nop

080009e4 <__cmpdf2>:
 80009e4:	f04f 0c01 	mov.w	ip, #1
 80009e8:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009ec:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009f0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009f4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009f8:	bf18      	it	ne
 80009fa:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009fe:	d01b      	beq.n	8000a38 <__cmpdf2+0x54>
 8000a00:	b001      	add	sp, #4
 8000a02:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a06:	bf0c      	ite	eq
 8000a08:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a0c:	ea91 0f03 	teqne	r1, r3
 8000a10:	bf02      	ittt	eq
 8000a12:	ea90 0f02 	teqeq	r0, r2
 8000a16:	2000      	moveq	r0, #0
 8000a18:	4770      	bxeq	lr
 8000a1a:	f110 0f00 	cmn.w	r0, #0
 8000a1e:	ea91 0f03 	teq	r1, r3
 8000a22:	bf58      	it	pl
 8000a24:	4299      	cmppl	r1, r3
 8000a26:	bf08      	it	eq
 8000a28:	4290      	cmpeq	r0, r2
 8000a2a:	bf2c      	ite	cs
 8000a2c:	17d8      	asrcs	r0, r3, #31
 8000a2e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a32:	f040 0001 	orr.w	r0, r0, #1
 8000a36:	4770      	bx	lr
 8000a38:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a3c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a40:	d102      	bne.n	8000a48 <__cmpdf2+0x64>
 8000a42:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a46:	d107      	bne.n	8000a58 <__cmpdf2+0x74>
 8000a48:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a4c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a50:	d1d6      	bne.n	8000a00 <__cmpdf2+0x1c>
 8000a52:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a56:	d0d3      	beq.n	8000a00 <__cmpdf2+0x1c>
 8000a58:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a5c:	4770      	bx	lr
 8000a5e:	bf00      	nop

08000a60 <__aeabi_cdrcmple>:
 8000a60:	4684      	mov	ip, r0
 8000a62:	4610      	mov	r0, r2
 8000a64:	4662      	mov	r2, ip
 8000a66:	468c      	mov	ip, r1
 8000a68:	4619      	mov	r1, r3
 8000a6a:	4663      	mov	r3, ip
 8000a6c:	e000      	b.n	8000a70 <__aeabi_cdcmpeq>
 8000a6e:	bf00      	nop

08000a70 <__aeabi_cdcmpeq>:
 8000a70:	b501      	push	{r0, lr}
 8000a72:	f7ff ffb7 	bl	80009e4 <__cmpdf2>
 8000a76:	2800      	cmp	r0, #0
 8000a78:	bf48      	it	mi
 8000a7a:	f110 0f00 	cmnmi.w	r0, #0
 8000a7e:	bd01      	pop	{r0, pc}

08000a80 <__aeabi_dcmpeq>:
 8000a80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a84:	f7ff fff4 	bl	8000a70 <__aeabi_cdcmpeq>
 8000a88:	bf0c      	ite	eq
 8000a8a:	2001      	moveq	r0, #1
 8000a8c:	2000      	movne	r0, #0
 8000a8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a92:	bf00      	nop

08000a94 <__aeabi_dcmplt>:
 8000a94:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a98:	f7ff ffea 	bl	8000a70 <__aeabi_cdcmpeq>
 8000a9c:	bf34      	ite	cc
 8000a9e:	2001      	movcc	r0, #1
 8000aa0:	2000      	movcs	r0, #0
 8000aa2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_dcmple>:
 8000aa8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aac:	f7ff ffe0 	bl	8000a70 <__aeabi_cdcmpeq>
 8000ab0:	bf94      	ite	ls
 8000ab2:	2001      	movls	r0, #1
 8000ab4:	2000      	movhi	r0, #0
 8000ab6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aba:	bf00      	nop

08000abc <__aeabi_dcmpge>:
 8000abc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ac0:	f7ff ffce 	bl	8000a60 <__aeabi_cdrcmple>
 8000ac4:	bf94      	ite	ls
 8000ac6:	2001      	movls	r0, #1
 8000ac8:	2000      	movhi	r0, #0
 8000aca:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ace:	bf00      	nop

08000ad0 <__aeabi_dcmpgt>:
 8000ad0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ad4:	f7ff ffc4 	bl	8000a60 <__aeabi_cdrcmple>
 8000ad8:	bf34      	ite	cc
 8000ada:	2001      	movcc	r0, #1
 8000adc:	2000      	movcs	r0, #0
 8000ade:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ae2:	bf00      	nop

08000ae4 <__aeabi_dcmpun>:
 8000ae4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ae8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aec:	d102      	bne.n	8000af4 <__aeabi_dcmpun+0x10>
 8000aee:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000af2:	d10a      	bne.n	8000b0a <__aeabi_dcmpun+0x26>
 8000af4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000af8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000afc:	d102      	bne.n	8000b04 <__aeabi_dcmpun+0x20>
 8000afe:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b02:	d102      	bne.n	8000b0a <__aeabi_dcmpun+0x26>
 8000b04:	f04f 0000 	mov.w	r0, #0
 8000b08:	4770      	bx	lr
 8000b0a:	f04f 0001 	mov.w	r0, #1
 8000b0e:	4770      	bx	lr

08000b10 <__aeabi_d2iz>:
 8000b10:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b14:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b18:	d215      	bcs.n	8000b46 <__aeabi_d2iz+0x36>
 8000b1a:	d511      	bpl.n	8000b40 <__aeabi_d2iz+0x30>
 8000b1c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b20:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b24:	d912      	bls.n	8000b4c <__aeabi_d2iz+0x3c>
 8000b26:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b2a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b2e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b32:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b36:	fa23 f002 	lsr.w	r0, r3, r2
 8000b3a:	bf18      	it	ne
 8000b3c:	4240      	negne	r0, r0
 8000b3e:	4770      	bx	lr
 8000b40:	f04f 0000 	mov.w	r0, #0
 8000b44:	4770      	bx	lr
 8000b46:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b4a:	d105      	bne.n	8000b58 <__aeabi_d2iz+0x48>
 8000b4c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b50:	bf08      	it	eq
 8000b52:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b56:	4770      	bx	lr
 8000b58:	f04f 0000 	mov.w	r0, #0
 8000b5c:	4770      	bx	lr
 8000b5e:	bf00      	nop

08000b60 <__aeabi_d2uiz>:
 8000b60:	004a      	lsls	r2, r1, #1
 8000b62:	d211      	bcs.n	8000b88 <__aeabi_d2uiz+0x28>
 8000b64:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b68:	d211      	bcs.n	8000b8e <__aeabi_d2uiz+0x2e>
 8000b6a:	d50d      	bpl.n	8000b88 <__aeabi_d2uiz+0x28>
 8000b6c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b70:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b74:	d40e      	bmi.n	8000b94 <__aeabi_d2uiz+0x34>
 8000b76:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b7a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b7e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b82:	fa23 f002 	lsr.w	r0, r3, r2
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d102      	bne.n	8000b9a <__aeabi_d2uiz+0x3a>
 8000b94:	f04f 30ff 	mov.w	r0, #4294967295
 8000b98:	4770      	bx	lr
 8000b9a:	f04f 0000 	mov.w	r0, #0
 8000b9e:	4770      	bx	lr

08000ba0 <__aeabi_d2f>:
 8000ba0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ba4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000ba8:	bf24      	itt	cs
 8000baa:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bae:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bb2:	d90d      	bls.n	8000bd0 <__aeabi_d2f+0x30>
 8000bb4:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000bb8:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bbc:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bc0:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000bc4:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bc8:	bf08      	it	eq
 8000bca:	f020 0001 	biceq.w	r0, r0, #1
 8000bce:	4770      	bx	lr
 8000bd0:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000bd4:	d121      	bne.n	8000c1a <__aeabi_d2f+0x7a>
 8000bd6:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000bda:	bfbc      	itt	lt
 8000bdc:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000be0:	4770      	bxlt	lr
 8000be2:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000be6:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bea:	f1c2 0218 	rsb	r2, r2, #24
 8000bee:	f1c2 0c20 	rsb	ip, r2, #32
 8000bf2:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bf6:	fa20 f002 	lsr.w	r0, r0, r2
 8000bfa:	bf18      	it	ne
 8000bfc:	f040 0001 	orrne.w	r0, r0, #1
 8000c00:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c04:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c08:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c0c:	ea40 000c 	orr.w	r0, r0, ip
 8000c10:	fa23 f302 	lsr.w	r3, r3, r2
 8000c14:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c18:	e7cc      	b.n	8000bb4 <__aeabi_d2f+0x14>
 8000c1a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c1e:	d107      	bne.n	8000c30 <__aeabi_d2f+0x90>
 8000c20:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c24:	bf1e      	ittt	ne
 8000c26:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c2a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c2e:	4770      	bxne	lr
 8000c30:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c34:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c38:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c3c:	4770      	bx	lr
 8000c3e:	bf00      	nop

08000c40 <__aeabi_d2lz>:
 8000c40:	b538      	push	{r3, r4, r5, lr}
 8000c42:	4605      	mov	r5, r0
 8000c44:	460c      	mov	r4, r1
 8000c46:	2200      	movs	r2, #0
 8000c48:	2300      	movs	r3, #0
 8000c4a:	4628      	mov	r0, r5
 8000c4c:	4621      	mov	r1, r4
 8000c4e:	f7ff ff21 	bl	8000a94 <__aeabi_dcmplt>
 8000c52:	b928      	cbnz	r0, 8000c60 <__aeabi_d2lz+0x20>
 8000c54:	4628      	mov	r0, r5
 8000c56:	4621      	mov	r1, r4
 8000c58:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c5c:	f000 b80a 	b.w	8000c74 <__aeabi_d2ulz>
 8000c60:	4628      	mov	r0, r5
 8000c62:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 8000c66:	f000 f805 	bl	8000c74 <__aeabi_d2ulz>
 8000c6a:	4240      	negs	r0, r0
 8000c6c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c70:	bd38      	pop	{r3, r4, r5, pc}
 8000c72:	bf00      	nop

08000c74 <__aeabi_d2ulz>:
 8000c74:	b5d0      	push	{r4, r6, r7, lr}
 8000c76:	2200      	movs	r2, #0
 8000c78:	4b0b      	ldr	r3, [pc, #44]	; (8000ca8 <__aeabi_d2ulz+0x34>)
 8000c7a:	4606      	mov	r6, r0
 8000c7c:	460f      	mov	r7, r1
 8000c7e:	f7ff fc97 	bl	80005b0 <__aeabi_dmul>
 8000c82:	f7ff ff6d 	bl	8000b60 <__aeabi_d2uiz>
 8000c86:	4604      	mov	r4, r0
 8000c88:	f7ff fc18 	bl	80004bc <__aeabi_ui2d>
 8000c8c:	2200      	movs	r2, #0
 8000c8e:	4b07      	ldr	r3, [pc, #28]	; (8000cac <__aeabi_d2ulz+0x38>)
 8000c90:	f7ff fc8e 	bl	80005b0 <__aeabi_dmul>
 8000c94:	4602      	mov	r2, r0
 8000c96:	460b      	mov	r3, r1
 8000c98:	4630      	mov	r0, r6
 8000c9a:	4639      	mov	r1, r7
 8000c9c:	f7ff fad0 	bl	8000240 <__aeabi_dsub>
 8000ca0:	f7ff ff5e 	bl	8000b60 <__aeabi_d2uiz>
 8000ca4:	4621      	mov	r1, r4
 8000ca6:	bdd0      	pop	{r4, r6, r7, pc}
 8000ca8:	3df00000 	.word	0x3df00000
 8000cac:	41f00000 	.word	0x41f00000

08000cb0 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000cb0:	b580      	push	{r7, lr}
 8000cb2:	b088      	sub	sp, #32
 8000cb4:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000cb6:	f107 0310 	add.w	r3, r7, #16
 8000cba:	2200      	movs	r2, #0
 8000cbc:	601a      	str	r2, [r3, #0]
 8000cbe:	605a      	str	r2, [r3, #4]
 8000cc0:	609a      	str	r2, [r3, #8]
 8000cc2:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000cc4:	4b30      	ldr	r3, [pc, #192]	; (8000d88 <MX_GPIO_Init+0xd8>)
 8000cc6:	699b      	ldr	r3, [r3, #24]
 8000cc8:	4a2f      	ldr	r2, [pc, #188]	; (8000d88 <MX_GPIO_Init+0xd8>)
 8000cca:	f043 0310 	orr.w	r3, r3, #16
 8000cce:	6193      	str	r3, [r2, #24]
 8000cd0:	4b2d      	ldr	r3, [pc, #180]	; (8000d88 <MX_GPIO_Init+0xd8>)
 8000cd2:	699b      	ldr	r3, [r3, #24]
 8000cd4:	f003 0310 	and.w	r3, r3, #16
 8000cd8:	60fb      	str	r3, [r7, #12]
 8000cda:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000cdc:	4b2a      	ldr	r3, [pc, #168]	; (8000d88 <MX_GPIO_Init+0xd8>)
 8000cde:	699b      	ldr	r3, [r3, #24]
 8000ce0:	4a29      	ldr	r2, [pc, #164]	; (8000d88 <MX_GPIO_Init+0xd8>)
 8000ce2:	f043 0320 	orr.w	r3, r3, #32
 8000ce6:	6193      	str	r3, [r2, #24]
 8000ce8:	4b27      	ldr	r3, [pc, #156]	; (8000d88 <MX_GPIO_Init+0xd8>)
 8000cea:	699b      	ldr	r3, [r3, #24]
 8000cec:	f003 0320 	and.w	r3, r3, #32
 8000cf0:	60bb      	str	r3, [r7, #8]
 8000cf2:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000cf4:	4b24      	ldr	r3, [pc, #144]	; (8000d88 <MX_GPIO_Init+0xd8>)
 8000cf6:	699b      	ldr	r3, [r3, #24]
 8000cf8:	4a23      	ldr	r2, [pc, #140]	; (8000d88 <MX_GPIO_Init+0xd8>)
 8000cfa:	f043 0304 	orr.w	r3, r3, #4
 8000cfe:	6193      	str	r3, [r2, #24]
 8000d00:	4b21      	ldr	r3, [pc, #132]	; (8000d88 <MX_GPIO_Init+0xd8>)
 8000d02:	699b      	ldr	r3, [r3, #24]
 8000d04:	f003 0304 	and.w	r3, r3, #4
 8000d08:	607b      	str	r3, [r7, #4]
 8000d0a:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000d0c:	4b1e      	ldr	r3, [pc, #120]	; (8000d88 <MX_GPIO_Init+0xd8>)
 8000d0e:	699b      	ldr	r3, [r3, #24]
 8000d10:	4a1d      	ldr	r2, [pc, #116]	; (8000d88 <MX_GPIO_Init+0xd8>)
 8000d12:	f043 0308 	orr.w	r3, r3, #8
 8000d16:	6193      	str	r3, [r2, #24]
 8000d18:	4b1b      	ldr	r3, [pc, #108]	; (8000d88 <MX_GPIO_Init+0xd8>)
 8000d1a:	699b      	ldr	r3, [r3, #24]
 8000d1c:	f003 0308 	and.w	r3, r3, #8
 8000d20:	603b      	str	r3, [r7, #0]
 8000d22:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LED0_Pin|LED1_Pin, GPIO_PIN_SET);
 8000d24:	2201      	movs	r2, #1
 8000d26:	f44f 7140 	mov.w	r1, #768	; 0x300
 8000d2a:	4818      	ldr	r0, [pc, #96]	; (8000d8c <MX_GPIO_Init+0xdc>)
 8000d2c:	f000 fd3f 	bl	80017ae <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PCPin PCPin */
  GPIO_InitStruct.Pin = KEY1_Pin|KEY0_Pin;
 8000d30:	f242 0302 	movw	r3, #8194	; 0x2002
 8000d34:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000d36:	2300      	movs	r3, #0
 8000d38:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000d3a:	2301      	movs	r3, #1
 8000d3c:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d3e:	f107 0310 	add.w	r3, r7, #16
 8000d42:	4619      	mov	r1, r3
 8000d44:	4812      	ldr	r0, [pc, #72]	; (8000d90 <MX_GPIO_Init+0xe0>)
 8000d46:	f000 fb87 	bl	8001458 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = WK_UP_Pin;
 8000d4a:	2301      	movs	r3, #1
 8000d4c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000d4e:	2300      	movs	r3, #0
 8000d50:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8000d52:	2302      	movs	r3, #2
 8000d54:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(WK_UP_GPIO_Port, &GPIO_InitStruct);
 8000d56:	f107 0310 	add.w	r3, r7, #16
 8000d5a:	4619      	mov	r1, r3
 8000d5c:	480b      	ldr	r0, [pc, #44]	; (8000d8c <MX_GPIO_Init+0xdc>)
 8000d5e:	f000 fb7b 	bl	8001458 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin */
  GPIO_InitStruct.Pin = LED0_Pin|LED1_Pin;
 8000d62:	f44f 7340 	mov.w	r3, #768	; 0x300
 8000d66:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000d68:	2301      	movs	r3, #1
 8000d6a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000d6c:	2301      	movs	r3, #1
 8000d6e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000d70:	2303      	movs	r3, #3
 8000d72:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d74:	f107 0310 	add.w	r3, r7, #16
 8000d78:	4619      	mov	r1, r3
 8000d7a:	4804      	ldr	r0, [pc, #16]	; (8000d8c <MX_GPIO_Init+0xdc>)
 8000d7c:	f000 fb6c 	bl	8001458 <HAL_GPIO_Init>

}
 8000d80:	bf00      	nop
 8000d82:	3720      	adds	r7, #32
 8000d84:	46bd      	mov	sp, r7
 8000d86:	bd80      	pop	{r7, pc}
 8000d88:	40021000 	.word	0x40021000
 8000d8c:	40010800 	.word	0x40010800
 8000d90:	40011000 	.word	0x40011000

08000d94 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000d94:	b580      	push	{r7, lr}
 8000d96:	b082      	sub	sp, #8
 8000d98:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000d9a:	f000 f9f3 	bl	8001184 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000d9e:	f000 f81b 	bl	8000dd8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000da2:	f7ff ff85 	bl	8000cb0 <MX_GPIO_Init>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
      int keyVal = KeyScan();
 8000da6:	f000 f9a7 	bl	80010f8 <KeyScan>
 8000daa:	6078      	str	r0, [r7, #4]
      switch (keyVal) {
 8000dac:	687b      	ldr	r3, [r7, #4]
 8000dae:	2b01      	cmp	r3, #1
 8000db0:	d003      	beq.n	8000dba <main+0x26>
 8000db2:	687b      	ldr	r3, [r7, #4]
 8000db4:	2b02      	cmp	r3, #2
 8000db6:	d006      	beq.n	8000dc6 <main+0x32>
 8000db8:	e00b      	b.n	8000dd2 <main+0x3e>
          case KEY0_PRES:
              LED0_INV();
 8000dba:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000dbe:	4805      	ldr	r0, [pc, #20]	; (8000dd4 <main+0x40>)
 8000dc0:	f000 fd0d 	bl	80017de <HAL_GPIO_TogglePin>
              break;
 8000dc4:	e005      	b.n	8000dd2 <main+0x3e>
          case KEY1_PRES:
              LED1_INV();
 8000dc6:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000dca:	4802      	ldr	r0, [pc, #8]	; (8000dd4 <main+0x40>)
 8000dcc:	f000 fd07 	bl	80017de <HAL_GPIO_TogglePin>
              break;
 8000dd0:	bf00      	nop
  {
 8000dd2:	e7e8      	b.n	8000da6 <main+0x12>
 8000dd4:	40010800 	.word	0x40010800

08000dd8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000dd8:	b580      	push	{r7, lr}
 8000dda:	b090      	sub	sp, #64	; 0x40
 8000ddc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000dde:	f107 0318 	add.w	r3, r7, #24
 8000de2:	2228      	movs	r2, #40	; 0x28
 8000de4:	2100      	movs	r1, #0
 8000de6:	4618      	mov	r0, r3
 8000de8:	f001 f924 	bl	8002034 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000dec:	1d3b      	adds	r3, r7, #4
 8000dee:	2200      	movs	r2, #0
 8000df0:	601a      	str	r2, [r3, #0]
 8000df2:	605a      	str	r2, [r3, #4]
 8000df4:	609a      	str	r2, [r3, #8]
 8000df6:	60da      	str	r2, [r3, #12]
 8000df8:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000dfa:	2301      	movs	r3, #1
 8000dfc:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000dfe:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000e02:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 8000e04:	2300      	movs	r3, #0
 8000e06:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000e08:	2301      	movs	r3, #1
 8000e0a:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000e0c:	2302      	movs	r3, #2
 8000e0e:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000e10:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000e14:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8000e16:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 8000e1a:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000e1c:	f107 0318 	add.w	r3, r7, #24
 8000e20:	4618      	mov	r0, r3
 8000e22:	f000 fcf5 	bl	8001810 <HAL_RCC_OscConfig>
 8000e26:	4603      	mov	r3, r0
 8000e28:	2b00      	cmp	r3, #0
 8000e2a:	d001      	beq.n	8000e30 <SystemClock_Config+0x58>
  {
    Error_Handler();
 8000e2c:	f000 f819 	bl	8000e62 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000e30:	230f      	movs	r3, #15
 8000e32:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000e34:	2302      	movs	r3, #2
 8000e36:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000e38:	2300      	movs	r3, #0
 8000e3a:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000e3c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000e40:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000e42:	2300      	movs	r3, #0
 8000e44:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000e46:	1d3b      	adds	r3, r7, #4
 8000e48:	2102      	movs	r1, #2
 8000e4a:	4618      	mov	r0, r3
 8000e4c:	f000 ff62 	bl	8001d14 <HAL_RCC_ClockConfig>
 8000e50:	4603      	mov	r3, r0
 8000e52:	2b00      	cmp	r3, #0
 8000e54:	d001      	beq.n	8000e5a <SystemClock_Config+0x82>
  {
    Error_Handler();
 8000e56:	f000 f804 	bl	8000e62 <Error_Handler>
  }
}
 8000e5a:	bf00      	nop
 8000e5c:	3740      	adds	r7, #64	; 0x40
 8000e5e:	46bd      	mov	sp, r7
 8000e60:	bd80      	pop	{r7, pc}

08000e62 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000e62:	b480      	push	{r7}
 8000e64:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000e66:	b672      	cpsid	i
}
 8000e68:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000e6a:	e7fe      	b.n	8000e6a <Error_Handler+0x8>

08000e6c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000e6c:	b480      	push	{r7}
 8000e6e:	b085      	sub	sp, #20
 8000e70:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000e72:	4b15      	ldr	r3, [pc, #84]	; (8000ec8 <HAL_MspInit+0x5c>)
 8000e74:	699b      	ldr	r3, [r3, #24]
 8000e76:	4a14      	ldr	r2, [pc, #80]	; (8000ec8 <HAL_MspInit+0x5c>)
 8000e78:	f043 0301 	orr.w	r3, r3, #1
 8000e7c:	6193      	str	r3, [r2, #24]
 8000e7e:	4b12      	ldr	r3, [pc, #72]	; (8000ec8 <HAL_MspInit+0x5c>)
 8000e80:	699b      	ldr	r3, [r3, #24]
 8000e82:	f003 0301 	and.w	r3, r3, #1
 8000e86:	60bb      	str	r3, [r7, #8]
 8000e88:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000e8a:	4b0f      	ldr	r3, [pc, #60]	; (8000ec8 <HAL_MspInit+0x5c>)
 8000e8c:	69db      	ldr	r3, [r3, #28]
 8000e8e:	4a0e      	ldr	r2, [pc, #56]	; (8000ec8 <HAL_MspInit+0x5c>)
 8000e90:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000e94:	61d3      	str	r3, [r2, #28]
 8000e96:	4b0c      	ldr	r3, [pc, #48]	; (8000ec8 <HAL_MspInit+0x5c>)
 8000e98:	69db      	ldr	r3, [r3, #28]
 8000e9a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000e9e:	607b      	str	r3, [r7, #4]
 8000ea0:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000ea2:	4b0a      	ldr	r3, [pc, #40]	; (8000ecc <HAL_MspInit+0x60>)
 8000ea4:	685b      	ldr	r3, [r3, #4]
 8000ea6:	60fb      	str	r3, [r7, #12]
 8000ea8:	68fb      	ldr	r3, [r7, #12]
 8000eaa:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000eae:	60fb      	str	r3, [r7, #12]
 8000eb0:	68fb      	ldr	r3, [r7, #12]
 8000eb2:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000eb6:	60fb      	str	r3, [r7, #12]
 8000eb8:	4a04      	ldr	r2, [pc, #16]	; (8000ecc <HAL_MspInit+0x60>)
 8000eba:	68fb      	ldr	r3, [r7, #12]
 8000ebc:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000ebe:	bf00      	nop
 8000ec0:	3714      	adds	r7, #20
 8000ec2:	46bd      	mov	sp, r7
 8000ec4:	bc80      	pop	{r7}
 8000ec6:	4770      	bx	lr
 8000ec8:	40021000 	.word	0x40021000
 8000ecc:	40010000 	.word	0x40010000

08000ed0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000ed0:	b480      	push	{r7}
 8000ed2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000ed4:	e7fe      	b.n	8000ed4 <NMI_Handler+0x4>

08000ed6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000ed6:	b480      	push	{r7}
 8000ed8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000eda:	e7fe      	b.n	8000eda <HardFault_Handler+0x4>

08000edc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000edc:	b480      	push	{r7}
 8000ede:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000ee0:	e7fe      	b.n	8000ee0 <MemManage_Handler+0x4>

08000ee2 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000ee2:	b480      	push	{r7}
 8000ee4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000ee6:	e7fe      	b.n	8000ee6 <BusFault_Handler+0x4>

08000ee8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000ee8:	b480      	push	{r7}
 8000eea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000eec:	e7fe      	b.n	8000eec <UsageFault_Handler+0x4>

08000eee <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000eee:	b480      	push	{r7}
 8000ef0:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000ef2:	bf00      	nop
 8000ef4:	46bd      	mov	sp, r7
 8000ef6:	bc80      	pop	{r7}
 8000ef8:	4770      	bx	lr

08000efa <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000efa:	b480      	push	{r7}
 8000efc:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000efe:	bf00      	nop
 8000f00:	46bd      	mov	sp, r7
 8000f02:	bc80      	pop	{r7}
 8000f04:	4770      	bx	lr

08000f06 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000f06:	b480      	push	{r7}
 8000f08:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000f0a:	bf00      	nop
 8000f0c:	46bd      	mov	sp, r7
 8000f0e:	bc80      	pop	{r7}
 8000f10:	4770      	bx	lr

08000f12 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000f12:	b580      	push	{r7, lr}
 8000f14:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000f16:	f000 f97b 	bl	8001210 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000f1a:	bf00      	nop
 8000f1c:	bd80      	pop	{r7, pc}

08000f1e <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8000f1e:	b480      	push	{r7}
 8000f20:	af00      	add	r7, sp, #0
  return 1;
 8000f22:	2301      	movs	r3, #1
}
 8000f24:	4618      	mov	r0, r3
 8000f26:	46bd      	mov	sp, r7
 8000f28:	bc80      	pop	{r7}
 8000f2a:	4770      	bx	lr

08000f2c <_kill>:

int _kill(int pid, int sig)
{
 8000f2c:	b580      	push	{r7, lr}
 8000f2e:	b082      	sub	sp, #8
 8000f30:	af00      	add	r7, sp, #0
 8000f32:	6078      	str	r0, [r7, #4]
 8000f34:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8000f36:	f001 f853 	bl	8001fe0 <__errno>
 8000f3a:	4603      	mov	r3, r0
 8000f3c:	2216      	movs	r2, #22
 8000f3e:	601a      	str	r2, [r3, #0]
  return -1;
 8000f40:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000f44:	4618      	mov	r0, r3
 8000f46:	3708      	adds	r7, #8
 8000f48:	46bd      	mov	sp, r7
 8000f4a:	bd80      	pop	{r7, pc}

08000f4c <_exit>:

void _exit (int status)
{
 8000f4c:	b580      	push	{r7, lr}
 8000f4e:	b082      	sub	sp, #8
 8000f50:	af00      	add	r7, sp, #0
 8000f52:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8000f54:	f04f 31ff 	mov.w	r1, #4294967295
 8000f58:	6878      	ldr	r0, [r7, #4]
 8000f5a:	f7ff ffe7 	bl	8000f2c <_kill>
  while (1) {}    /* Make sure we hang here */
 8000f5e:	e7fe      	b.n	8000f5e <_exit+0x12>

08000f60 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000f60:	b580      	push	{r7, lr}
 8000f62:	b086      	sub	sp, #24
 8000f64:	af00      	add	r7, sp, #0
 8000f66:	60f8      	str	r0, [r7, #12]
 8000f68:	60b9      	str	r1, [r7, #8]
 8000f6a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000f6c:	2300      	movs	r3, #0
 8000f6e:	617b      	str	r3, [r7, #20]
 8000f70:	e00a      	b.n	8000f88 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000f72:	f3af 8000 	nop.w
 8000f76:	4601      	mov	r1, r0
 8000f78:	68bb      	ldr	r3, [r7, #8]
 8000f7a:	1c5a      	adds	r2, r3, #1
 8000f7c:	60ba      	str	r2, [r7, #8]
 8000f7e:	b2ca      	uxtb	r2, r1
 8000f80:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000f82:	697b      	ldr	r3, [r7, #20]
 8000f84:	3301      	adds	r3, #1
 8000f86:	617b      	str	r3, [r7, #20]
 8000f88:	697a      	ldr	r2, [r7, #20]
 8000f8a:	687b      	ldr	r3, [r7, #4]
 8000f8c:	429a      	cmp	r2, r3
 8000f8e:	dbf0      	blt.n	8000f72 <_read+0x12>
  }

  return len;
 8000f90:	687b      	ldr	r3, [r7, #4]
}
 8000f92:	4618      	mov	r0, r3
 8000f94:	3718      	adds	r7, #24
 8000f96:	46bd      	mov	sp, r7
 8000f98:	bd80      	pop	{r7, pc}

08000f9a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000f9a:	b580      	push	{r7, lr}
 8000f9c:	b086      	sub	sp, #24
 8000f9e:	af00      	add	r7, sp, #0
 8000fa0:	60f8      	str	r0, [r7, #12]
 8000fa2:	60b9      	str	r1, [r7, #8]
 8000fa4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000fa6:	2300      	movs	r3, #0
 8000fa8:	617b      	str	r3, [r7, #20]
 8000faa:	e009      	b.n	8000fc0 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000fac:	68bb      	ldr	r3, [r7, #8]
 8000fae:	1c5a      	adds	r2, r3, #1
 8000fb0:	60ba      	str	r2, [r7, #8]
 8000fb2:	781b      	ldrb	r3, [r3, #0]
 8000fb4:	4618      	mov	r0, r3
 8000fb6:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000fba:	697b      	ldr	r3, [r7, #20]
 8000fbc:	3301      	adds	r3, #1
 8000fbe:	617b      	str	r3, [r7, #20]
 8000fc0:	697a      	ldr	r2, [r7, #20]
 8000fc2:	687b      	ldr	r3, [r7, #4]
 8000fc4:	429a      	cmp	r2, r3
 8000fc6:	dbf1      	blt.n	8000fac <_write+0x12>
  }
  return len;
 8000fc8:	687b      	ldr	r3, [r7, #4]
}
 8000fca:	4618      	mov	r0, r3
 8000fcc:	3718      	adds	r7, #24
 8000fce:	46bd      	mov	sp, r7
 8000fd0:	bd80      	pop	{r7, pc}

08000fd2 <_close>:

int _close(int file)
{
 8000fd2:	b480      	push	{r7}
 8000fd4:	b083      	sub	sp, #12
 8000fd6:	af00      	add	r7, sp, #0
 8000fd8:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000fda:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000fde:	4618      	mov	r0, r3
 8000fe0:	370c      	adds	r7, #12
 8000fe2:	46bd      	mov	sp, r7
 8000fe4:	bc80      	pop	{r7}
 8000fe6:	4770      	bx	lr

08000fe8 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000fe8:	b480      	push	{r7}
 8000fea:	b083      	sub	sp, #12
 8000fec:	af00      	add	r7, sp, #0
 8000fee:	6078      	str	r0, [r7, #4]
 8000ff0:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000ff2:	683b      	ldr	r3, [r7, #0]
 8000ff4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000ff8:	605a      	str	r2, [r3, #4]
  return 0;
 8000ffa:	2300      	movs	r3, #0
}
 8000ffc:	4618      	mov	r0, r3
 8000ffe:	370c      	adds	r7, #12
 8001000:	46bd      	mov	sp, r7
 8001002:	bc80      	pop	{r7}
 8001004:	4770      	bx	lr

08001006 <_isatty>:

int _isatty(int file)
{
 8001006:	b480      	push	{r7}
 8001008:	b083      	sub	sp, #12
 800100a:	af00      	add	r7, sp, #0
 800100c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800100e:	2301      	movs	r3, #1
}
 8001010:	4618      	mov	r0, r3
 8001012:	370c      	adds	r7, #12
 8001014:	46bd      	mov	sp, r7
 8001016:	bc80      	pop	{r7}
 8001018:	4770      	bx	lr

0800101a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800101a:	b480      	push	{r7}
 800101c:	b085      	sub	sp, #20
 800101e:	af00      	add	r7, sp, #0
 8001020:	60f8      	str	r0, [r7, #12]
 8001022:	60b9      	str	r1, [r7, #8]
 8001024:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001026:	2300      	movs	r3, #0
}
 8001028:	4618      	mov	r0, r3
 800102a:	3714      	adds	r7, #20
 800102c:	46bd      	mov	sp, r7
 800102e:	bc80      	pop	{r7}
 8001030:	4770      	bx	lr
	...

08001034 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001034:	b580      	push	{r7, lr}
 8001036:	b086      	sub	sp, #24
 8001038:	af00      	add	r7, sp, #0
 800103a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800103c:	4a14      	ldr	r2, [pc, #80]	; (8001090 <_sbrk+0x5c>)
 800103e:	4b15      	ldr	r3, [pc, #84]	; (8001094 <_sbrk+0x60>)
 8001040:	1ad3      	subs	r3, r2, r3
 8001042:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001044:	697b      	ldr	r3, [r7, #20]
 8001046:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001048:	4b13      	ldr	r3, [pc, #76]	; (8001098 <_sbrk+0x64>)
 800104a:	681b      	ldr	r3, [r3, #0]
 800104c:	2b00      	cmp	r3, #0
 800104e:	d102      	bne.n	8001056 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001050:	4b11      	ldr	r3, [pc, #68]	; (8001098 <_sbrk+0x64>)
 8001052:	4a12      	ldr	r2, [pc, #72]	; (800109c <_sbrk+0x68>)
 8001054:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001056:	4b10      	ldr	r3, [pc, #64]	; (8001098 <_sbrk+0x64>)
 8001058:	681a      	ldr	r2, [r3, #0]
 800105a:	687b      	ldr	r3, [r7, #4]
 800105c:	4413      	add	r3, r2
 800105e:	693a      	ldr	r2, [r7, #16]
 8001060:	429a      	cmp	r2, r3
 8001062:	d207      	bcs.n	8001074 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001064:	f000 ffbc 	bl	8001fe0 <__errno>
 8001068:	4603      	mov	r3, r0
 800106a:	220c      	movs	r2, #12
 800106c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800106e:	f04f 33ff 	mov.w	r3, #4294967295
 8001072:	e009      	b.n	8001088 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001074:	4b08      	ldr	r3, [pc, #32]	; (8001098 <_sbrk+0x64>)
 8001076:	681b      	ldr	r3, [r3, #0]
 8001078:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800107a:	4b07      	ldr	r3, [pc, #28]	; (8001098 <_sbrk+0x64>)
 800107c:	681a      	ldr	r2, [r3, #0]
 800107e:	687b      	ldr	r3, [r7, #4]
 8001080:	4413      	add	r3, r2
 8001082:	4a05      	ldr	r2, [pc, #20]	; (8001098 <_sbrk+0x64>)
 8001084:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001086:	68fb      	ldr	r3, [r7, #12]
}
 8001088:	4618      	mov	r0, r3
 800108a:	3718      	adds	r7, #24
 800108c:	46bd      	mov	sp, r7
 800108e:	bd80      	pop	{r7, pc}
 8001090:	2000c000 	.word	0x2000c000
 8001094:	00000400 	.word	0x00000400
 8001098:	200001fc 	.word	0x200001fc
 800109c:	20000218 	.word	0x20000218

080010a0 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80010a0:	b480      	push	{r7}
 80010a2:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80010a4:	bf00      	nop
 80010a6:	46bd      	mov	sp, r7
 80010a8:	bc80      	pop	{r7}
 80010aa:	4770      	bx	lr

080010ac <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80010ac:	480c      	ldr	r0, [pc, #48]	; (80010e0 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 80010ae:	490d      	ldr	r1, [pc, #52]	; (80010e4 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 80010b0:	4a0d      	ldr	r2, [pc, #52]	; (80010e8 <LoopFillZerobss+0x1a>)
  movs r3, #0
 80010b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80010b4:	e002      	b.n	80010bc <LoopCopyDataInit>

080010b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80010b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80010b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80010ba:	3304      	adds	r3, #4

080010bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80010bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80010be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80010c0:	d3f9      	bcc.n	80010b6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80010c2:	4a0a      	ldr	r2, [pc, #40]	; (80010ec <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 80010c4:	4c0a      	ldr	r4, [pc, #40]	; (80010f0 <LoopFillZerobss+0x22>)
  movs r3, #0
 80010c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80010c8:	e001      	b.n	80010ce <LoopFillZerobss>

080010ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80010ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80010cc:	3204      	adds	r2, #4

080010ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80010ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80010d0:	d3fb      	bcc.n	80010ca <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 80010d2:	f7ff ffe5 	bl	80010a0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80010d6:	f000 ff89 	bl	8001fec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80010da:	f7ff fe5b 	bl	8000d94 <main>
  bx lr
 80010de:	4770      	bx	lr
  ldr r0, =_sdata
 80010e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80010e4:	200001e0 	.word	0x200001e0
  ldr r2, =_sidata
 80010e8:	08006d8c 	.word	0x08006d8c
  ldr r2, =_sbss
 80010ec:	200001e0 	.word	0x200001e0
  ldr r4, =_ebss
 80010f0:	20000214 	.word	0x20000214

080010f4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80010f4:	e7fe      	b.n	80010f4 <ADC1_2_IRQHandler>
	...

080010f8 <KeyScan>:
 */

#include "key.h"
#include "main.h"

int KeyScan() {
 80010f8:	b580      	push	{r7, lr}
 80010fa:	b082      	sub	sp, #8
 80010fc:	af00      	add	r7, sp, #0
    int key = 0;
 80010fe:	2300      	movs	r3, #0
 8001100:	607b      	str	r3, [r7, #4]
    if (!HAL_GPIO_ReadPin(KEY0_GPIO_Port, KEY0_Pin) ||
 8001102:	2102      	movs	r1, #2
 8001104:	481d      	ldr	r0, [pc, #116]	; (800117c <KeyScan+0x84>)
 8001106:	f000 fb3b 	bl	8001780 <HAL_GPIO_ReadPin>
 800110a:	4603      	mov	r3, r0
 800110c:	2b00      	cmp	r3, #0
 800110e:	d00e      	beq.n	800112e <KeyScan+0x36>
    !HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) ||
 8001110:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001114:	4819      	ldr	r0, [pc, #100]	; (800117c <KeyScan+0x84>)
 8001116:	f000 fb33 	bl	8001780 <HAL_GPIO_ReadPin>
 800111a:	4603      	mov	r3, r0
    if (!HAL_GPIO_ReadPin(KEY0_GPIO_Port, KEY0_Pin) ||
 800111c:	2b00      	cmp	r3, #0
 800111e:	d006      	beq.n	800112e <KeyScan+0x36>
            HAL_GPIO_ReadPin(WK_UP_GPIO_Port, WK_UP_Pin)){
 8001120:	2101      	movs	r1, #1
 8001122:	4817      	ldr	r0, [pc, #92]	; (8001180 <KeyScan+0x88>)
 8001124:	f000 fb2c 	bl	8001780 <HAL_GPIO_ReadPin>
 8001128:	4603      	mov	r3, r0
    !HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin) ||
 800112a:	2b00      	cmp	r3, #0
 800112c:	d020      	beq.n	8001170 <KeyScan+0x78>
        HAL_Delay(10);
 800112e:	200a      	movs	r0, #10
 8001130:	f000 f88a 	bl	8001248 <HAL_Delay>
        if (!HAL_GPIO_ReadPin(KEY0_GPIO_Port, KEY0_Pin)){
 8001134:	2102      	movs	r1, #2
 8001136:	4811      	ldr	r0, [pc, #68]	; (800117c <KeyScan+0x84>)
 8001138:	f000 fb22 	bl	8001780 <HAL_GPIO_ReadPin>
 800113c:	4603      	mov	r3, r0
 800113e:	2b00      	cmp	r3, #0
 8001140:	d102      	bne.n	8001148 <KeyScan+0x50>
            key = KEY0_PRES;
 8001142:	2301      	movs	r3, #1
 8001144:	607b      	str	r3, [r7, #4]
 8001146:	e013      	b.n	8001170 <KeyScan+0x78>
        }else if (!HAL_GPIO_ReadPin(KEY1_GPIO_Port, KEY1_Pin)){
 8001148:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800114c:	480b      	ldr	r0, [pc, #44]	; (800117c <KeyScan+0x84>)
 800114e:	f000 fb17 	bl	8001780 <HAL_GPIO_ReadPin>
 8001152:	4603      	mov	r3, r0
 8001154:	2b00      	cmp	r3, #0
 8001156:	d102      	bne.n	800115e <KeyScan+0x66>
            key = KEY1_PRES;
 8001158:	2302      	movs	r3, #2
 800115a:	607b      	str	r3, [r7, #4]
 800115c:	e008      	b.n	8001170 <KeyScan+0x78>
        }else if (HAL_GPIO_ReadPin(WK_UP_GPIO_Port, WK_UP_Pin)){
 800115e:	2101      	movs	r1, #1
 8001160:	4807      	ldr	r0, [pc, #28]	; (8001180 <KeyScan+0x88>)
 8001162:	f000 fb0d 	bl	8001780 <HAL_GPIO_ReadPin>
 8001166:	4603      	mov	r3, r0
 8001168:	2b00      	cmp	r3, #0
 800116a:	d001      	beq.n	8001170 <KeyScan+0x78>
            key = WK_UP_PRES;
 800116c:	2303      	movs	r3, #3
 800116e:	607b      	str	r3, [r7, #4]
        }
    }
    return key;
 8001170:	687b      	ldr	r3, [r7, #4]
}
 8001172:	4618      	mov	r0, r3
 8001174:	3708      	adds	r7, #8
 8001176:	46bd      	mov	sp, r7
 8001178:	bd80      	pop	{r7, pc}
 800117a:	bf00      	nop
 800117c:	40011000 	.word	0x40011000
 8001180:	40010800 	.word	0x40010800

08001184 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001184:	b580      	push	{r7, lr}
 8001186:	af00      	add	r7, sp, #0
    defined(STM32F102x6) || defined(STM32F102xB) || \
    defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) || \
    defined(STM32F105xC) || defined(STM32F107xC)

  /* Prefetch buffer is not available on value line devices */
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001188:	4b08      	ldr	r3, [pc, #32]	; (80011ac <HAL_Init+0x28>)
 800118a:	681b      	ldr	r3, [r3, #0]
 800118c:	4a07      	ldr	r2, [pc, #28]	; (80011ac <HAL_Init+0x28>)
 800118e:	f043 0310 	orr.w	r3, r3, #16
 8001192:	6013      	str	r3, [r2, #0]
#endif
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001194:	2003      	movs	r0, #3
 8001196:	f000 f92b 	bl	80013f0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800119a:	200f      	movs	r0, #15
 800119c:	f000 f808 	bl	80011b0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80011a0:	f7ff fe64 	bl	8000e6c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80011a4:	2300      	movs	r3, #0
}
 80011a6:	4618      	mov	r0, r3
 80011a8:	bd80      	pop	{r7, pc}
 80011aa:	bf00      	nop
 80011ac:	40022000 	.word	0x40022000

080011b0 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80011b0:	b580      	push	{r7, lr}
 80011b2:	b082      	sub	sp, #8
 80011b4:	af00      	add	r7, sp, #0
 80011b6:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80011b8:	4b12      	ldr	r3, [pc, #72]	; (8001204 <HAL_InitTick+0x54>)
 80011ba:	681a      	ldr	r2, [r3, #0]
 80011bc:	4b12      	ldr	r3, [pc, #72]	; (8001208 <HAL_InitTick+0x58>)
 80011be:	781b      	ldrb	r3, [r3, #0]
 80011c0:	4619      	mov	r1, r3
 80011c2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80011c6:	fbb3 f3f1 	udiv	r3, r3, r1
 80011ca:	fbb2 f3f3 	udiv	r3, r2, r3
 80011ce:	4618      	mov	r0, r3
 80011d0:	f000 f935 	bl	800143e <HAL_SYSTICK_Config>
 80011d4:	4603      	mov	r3, r0
 80011d6:	2b00      	cmp	r3, #0
 80011d8:	d001      	beq.n	80011de <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 80011da:	2301      	movs	r3, #1
 80011dc:	e00e      	b.n	80011fc <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80011de:	687b      	ldr	r3, [r7, #4]
 80011e0:	2b0f      	cmp	r3, #15
 80011e2:	d80a      	bhi.n	80011fa <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80011e4:	2200      	movs	r2, #0
 80011e6:	6879      	ldr	r1, [r7, #4]
 80011e8:	f04f 30ff 	mov.w	r0, #4294967295
 80011ec:	f000 f90b 	bl	8001406 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80011f0:	4a06      	ldr	r2, [pc, #24]	; (800120c <HAL_InitTick+0x5c>)
 80011f2:	687b      	ldr	r3, [r7, #4]
 80011f4:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80011f6:	2300      	movs	r3, #0
 80011f8:	e000      	b.n	80011fc <HAL_InitTick+0x4c>
    return HAL_ERROR;
 80011fa:	2301      	movs	r3, #1
}
 80011fc:	4618      	mov	r0, r3
 80011fe:	3708      	adds	r7, #8
 8001200:	46bd      	mov	sp, r7
 8001202:	bd80      	pop	{r7, pc}
 8001204:	20000000 	.word	0x20000000
 8001208:	20000008 	.word	0x20000008
 800120c:	20000004 	.word	0x20000004

08001210 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001210:	b480      	push	{r7}
 8001212:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001214:	4b05      	ldr	r3, [pc, #20]	; (800122c <HAL_IncTick+0x1c>)
 8001216:	781b      	ldrb	r3, [r3, #0]
 8001218:	461a      	mov	r2, r3
 800121a:	4b05      	ldr	r3, [pc, #20]	; (8001230 <HAL_IncTick+0x20>)
 800121c:	681b      	ldr	r3, [r3, #0]
 800121e:	4413      	add	r3, r2
 8001220:	4a03      	ldr	r2, [pc, #12]	; (8001230 <HAL_IncTick+0x20>)
 8001222:	6013      	str	r3, [r2, #0]
}
 8001224:	bf00      	nop
 8001226:	46bd      	mov	sp, r7
 8001228:	bc80      	pop	{r7}
 800122a:	4770      	bx	lr
 800122c:	20000008 	.word	0x20000008
 8001230:	20000200 	.word	0x20000200

08001234 <HAL_GetTick>:
  * @note  This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8001234:	b480      	push	{r7}
 8001236:	af00      	add	r7, sp, #0
  return uwTick;
 8001238:	4b02      	ldr	r3, [pc, #8]	; (8001244 <HAL_GetTick+0x10>)
 800123a:	681b      	ldr	r3, [r3, #0]
}
 800123c:	4618      	mov	r0, r3
 800123e:	46bd      	mov	sp, r7
 8001240:	bc80      	pop	{r7}
 8001242:	4770      	bx	lr
 8001244:	20000200 	.word	0x20000200

08001248 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001248:	b580      	push	{r7, lr}
 800124a:	b084      	sub	sp, #16
 800124c:	af00      	add	r7, sp, #0
 800124e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8001250:	f7ff fff0 	bl	8001234 <HAL_GetTick>
 8001254:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8001256:	687b      	ldr	r3, [r7, #4]
 8001258:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800125a:	68fb      	ldr	r3, [r7, #12]
 800125c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001260:	d005      	beq.n	800126e <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8001262:	4b0a      	ldr	r3, [pc, #40]	; (800128c <HAL_Delay+0x44>)
 8001264:	781b      	ldrb	r3, [r3, #0]
 8001266:	461a      	mov	r2, r3
 8001268:	68fb      	ldr	r3, [r7, #12]
 800126a:	4413      	add	r3, r2
 800126c:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 800126e:	bf00      	nop
 8001270:	f7ff ffe0 	bl	8001234 <HAL_GetTick>
 8001274:	4602      	mov	r2, r0
 8001276:	68bb      	ldr	r3, [r7, #8]
 8001278:	1ad3      	subs	r3, r2, r3
 800127a:	68fa      	ldr	r2, [r7, #12]
 800127c:	429a      	cmp	r2, r3
 800127e:	d8f7      	bhi.n	8001270 <HAL_Delay+0x28>
  {
  }
}
 8001280:	bf00      	nop
 8001282:	bf00      	nop
 8001284:	3710      	adds	r7, #16
 8001286:	46bd      	mov	sp, r7
 8001288:	bd80      	pop	{r7, pc}
 800128a:	bf00      	nop
 800128c:	20000008 	.word	0x20000008

08001290 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001290:	b480      	push	{r7}
 8001292:	b085      	sub	sp, #20
 8001294:	af00      	add	r7, sp, #0
 8001296:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8001298:	687b      	ldr	r3, [r7, #4]
 800129a:	f003 0307 	and.w	r3, r3, #7
 800129e:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80012a0:	4b0c      	ldr	r3, [pc, #48]	; (80012d4 <__NVIC_SetPriorityGrouping+0x44>)
 80012a2:	68db      	ldr	r3, [r3, #12]
 80012a4:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80012a6:	68ba      	ldr	r2, [r7, #8]
 80012a8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80012ac:	4013      	ands	r3, r2
 80012ae:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key and priority group */
 80012b0:	68fb      	ldr	r3, [r7, #12]
 80012b2:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80012b4:	68bb      	ldr	r3, [r7, #8]
 80012b6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80012b8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80012bc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80012c0:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80012c2:	4a04      	ldr	r2, [pc, #16]	; (80012d4 <__NVIC_SetPriorityGrouping+0x44>)
 80012c4:	68bb      	ldr	r3, [r7, #8]
 80012c6:	60d3      	str	r3, [r2, #12]
}
 80012c8:	bf00      	nop
 80012ca:	3714      	adds	r7, #20
 80012cc:	46bd      	mov	sp, r7
 80012ce:	bc80      	pop	{r7}
 80012d0:	4770      	bx	lr
 80012d2:	bf00      	nop
 80012d4:	e000ed00 	.word	0xe000ed00

080012d8 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80012d8:	b480      	push	{r7}
 80012da:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80012dc:	4b04      	ldr	r3, [pc, #16]	; (80012f0 <__NVIC_GetPriorityGrouping+0x18>)
 80012de:	68db      	ldr	r3, [r3, #12]
 80012e0:	0a1b      	lsrs	r3, r3, #8
 80012e2:	f003 0307 	and.w	r3, r3, #7
}
 80012e6:	4618      	mov	r0, r3
 80012e8:	46bd      	mov	sp, r7
 80012ea:	bc80      	pop	{r7}
 80012ec:	4770      	bx	lr
 80012ee:	bf00      	nop
 80012f0:	e000ed00 	.word	0xe000ed00

080012f4 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80012f4:	b480      	push	{r7}
 80012f6:	b083      	sub	sp, #12
 80012f8:	af00      	add	r7, sp, #0
 80012fa:	4603      	mov	r3, r0
 80012fc:	6039      	str	r1, [r7, #0]
 80012fe:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001300:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001304:	2b00      	cmp	r3, #0
 8001306:	db0a      	blt.n	800131e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001308:	683b      	ldr	r3, [r7, #0]
 800130a:	b2da      	uxtb	r2, r3
 800130c:	490c      	ldr	r1, [pc, #48]	; (8001340 <__NVIC_SetPriority+0x4c>)
 800130e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001312:	0112      	lsls	r2, r2, #4
 8001314:	b2d2      	uxtb	r2, r2
 8001316:	440b      	add	r3, r1
 8001318:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800131c:	e00a      	b.n	8001334 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800131e:	683b      	ldr	r3, [r7, #0]
 8001320:	b2da      	uxtb	r2, r3
 8001322:	4908      	ldr	r1, [pc, #32]	; (8001344 <__NVIC_SetPriority+0x50>)
 8001324:	79fb      	ldrb	r3, [r7, #7]
 8001326:	f003 030f 	and.w	r3, r3, #15
 800132a:	3b04      	subs	r3, #4
 800132c:	0112      	lsls	r2, r2, #4
 800132e:	b2d2      	uxtb	r2, r2
 8001330:	440b      	add	r3, r1
 8001332:	761a      	strb	r2, [r3, #24]
}
 8001334:	bf00      	nop
 8001336:	370c      	adds	r7, #12
 8001338:	46bd      	mov	sp, r7
 800133a:	bc80      	pop	{r7}
 800133c:	4770      	bx	lr
 800133e:	bf00      	nop
 8001340:	e000e100 	.word	0xe000e100
 8001344:	e000ed00 	.word	0xe000ed00

08001348 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001348:	b480      	push	{r7}
 800134a:	b089      	sub	sp, #36	; 0x24
 800134c:	af00      	add	r7, sp, #0
 800134e:	60f8      	str	r0, [r7, #12]
 8001350:	60b9      	str	r1, [r7, #8]
 8001352:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8001354:	68fb      	ldr	r3, [r7, #12]
 8001356:	f003 0307 	and.w	r3, r3, #7
 800135a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800135c:	69fb      	ldr	r3, [r7, #28]
 800135e:	f1c3 0307 	rsb	r3, r3, #7
 8001362:	2b04      	cmp	r3, #4
 8001364:	bf28      	it	cs
 8001366:	2304      	movcs	r3, #4
 8001368:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800136a:	69fb      	ldr	r3, [r7, #28]
 800136c:	3304      	adds	r3, #4
 800136e:	2b06      	cmp	r3, #6
 8001370:	d902      	bls.n	8001378 <NVIC_EncodePriority+0x30>
 8001372:	69fb      	ldr	r3, [r7, #28]
 8001374:	3b03      	subs	r3, #3
 8001376:	e000      	b.n	800137a <NVIC_EncodePriority+0x32>
 8001378:	2300      	movs	r3, #0
 800137a:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800137c:	f04f 32ff 	mov.w	r2, #4294967295
 8001380:	69bb      	ldr	r3, [r7, #24]
 8001382:	fa02 f303 	lsl.w	r3, r2, r3
 8001386:	43da      	mvns	r2, r3
 8001388:	68bb      	ldr	r3, [r7, #8]
 800138a:	401a      	ands	r2, r3
 800138c:	697b      	ldr	r3, [r7, #20]
 800138e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001390:	f04f 31ff 	mov.w	r1, #4294967295
 8001394:	697b      	ldr	r3, [r7, #20]
 8001396:	fa01 f303 	lsl.w	r3, r1, r3
 800139a:	43d9      	mvns	r1, r3
 800139c:	687b      	ldr	r3, [r7, #4]
 800139e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80013a0:	4313      	orrs	r3, r2
         );
}
 80013a2:	4618      	mov	r0, r3
 80013a4:	3724      	adds	r7, #36	; 0x24
 80013a6:	46bd      	mov	sp, r7
 80013a8:	bc80      	pop	{r7}
 80013aa:	4770      	bx	lr

080013ac <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80013ac:	b580      	push	{r7, lr}
 80013ae:	b082      	sub	sp, #8
 80013b0:	af00      	add	r7, sp, #0
 80013b2:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80013b4:	687b      	ldr	r3, [r7, #4]
 80013b6:	3b01      	subs	r3, #1
 80013b8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80013bc:	d301      	bcc.n	80013c2 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 80013be:	2301      	movs	r3, #1
 80013c0:	e00f      	b.n	80013e2 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80013c2:	4a0a      	ldr	r2, [pc, #40]	; (80013ec <SysTick_Config+0x40>)
 80013c4:	687b      	ldr	r3, [r7, #4]
 80013c6:	3b01      	subs	r3, #1
 80013c8:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80013ca:	210f      	movs	r1, #15
 80013cc:	f04f 30ff 	mov.w	r0, #4294967295
 80013d0:	f7ff ff90 	bl	80012f4 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80013d4:	4b05      	ldr	r3, [pc, #20]	; (80013ec <SysTick_Config+0x40>)
 80013d6:	2200      	movs	r2, #0
 80013d8:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80013da:	4b04      	ldr	r3, [pc, #16]	; (80013ec <SysTick_Config+0x40>)
 80013dc:	2207      	movs	r2, #7
 80013de:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80013e0:	2300      	movs	r3, #0
}
 80013e2:	4618      	mov	r0, r3
 80013e4:	3708      	adds	r7, #8
 80013e6:	46bd      	mov	sp, r7
 80013e8:	bd80      	pop	{r7, pc}
 80013ea:	bf00      	nop
 80013ec:	e000e010 	.word	0xe000e010

080013f0 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80013f0:	b580      	push	{r7, lr}
 80013f2:	b082      	sub	sp, #8
 80013f4:	af00      	add	r7, sp, #0
 80013f6:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80013f8:	6878      	ldr	r0, [r7, #4]
 80013fa:	f7ff ff49 	bl	8001290 <__NVIC_SetPriorityGrouping>
}
 80013fe:	bf00      	nop
 8001400:	3708      	adds	r7, #8
 8001402:	46bd      	mov	sp, r7
 8001404:	bd80      	pop	{r7, pc}

08001406 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001406:	b580      	push	{r7, lr}
 8001408:	b086      	sub	sp, #24
 800140a:	af00      	add	r7, sp, #0
 800140c:	4603      	mov	r3, r0
 800140e:	60b9      	str	r1, [r7, #8]
 8001410:	607a      	str	r2, [r7, #4]
 8001412:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8001414:	2300      	movs	r3, #0
 8001416:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8001418:	f7ff ff5e 	bl	80012d8 <__NVIC_GetPriorityGrouping>
 800141c:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 800141e:	687a      	ldr	r2, [r7, #4]
 8001420:	68b9      	ldr	r1, [r7, #8]
 8001422:	6978      	ldr	r0, [r7, #20]
 8001424:	f7ff ff90 	bl	8001348 <NVIC_EncodePriority>
 8001428:	4602      	mov	r2, r0
 800142a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800142e:	4611      	mov	r1, r2
 8001430:	4618      	mov	r0, r3
 8001432:	f7ff ff5f 	bl	80012f4 <__NVIC_SetPriority>
}
 8001436:	bf00      	nop
 8001438:	3718      	adds	r7, #24
 800143a:	46bd      	mov	sp, r7
 800143c:	bd80      	pop	{r7, pc}

0800143e <HAL_SYSTICK_Config>:
  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800143e:	b580      	push	{r7, lr}
 8001440:	b082      	sub	sp, #8
 8001442:	af00      	add	r7, sp, #0
 8001444:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8001446:	6878      	ldr	r0, [r7, #4]
 8001448:	f7ff ffb0 	bl	80013ac <SysTick_Config>
 800144c:	4603      	mov	r3, r0
}
 800144e:	4618      	mov	r0, r3
 8001450:	3708      	adds	r7, #8
 8001452:	46bd      	mov	sp, r7
 8001454:	bd80      	pop	{r7, pc}
	...

08001458 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001458:	b480      	push	{r7}
 800145a:	b08b      	sub	sp, #44	; 0x2c
 800145c:	af00      	add	r7, sp, #0
 800145e:	6078      	str	r0, [r7, #4]
 8001460:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8001462:	2300      	movs	r3, #0
 8001464:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t ioposition;
  uint32_t iocurrent;
  uint32_t temp;
  uint32_t config = 0x00u;
 8001466:	2300      	movs	r3, #0
 8001468:	623b      	str	r3, [r7, #32]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 800146a:	e179      	b.n	8001760 <HAL_GPIO_Init+0x308>
  {
    /* Get the IO position */
    ioposition = (0x01uL << position);
 800146c:	2201      	movs	r2, #1
 800146e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001470:	fa02 f303 	lsl.w	r3, r2, r3
 8001474:	61fb      	str	r3, [r7, #28]

    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8001476:	683b      	ldr	r3, [r7, #0]
 8001478:	681b      	ldr	r3, [r3, #0]
 800147a:	69fa      	ldr	r2, [r7, #28]
 800147c:	4013      	ands	r3, r2
 800147e:	61bb      	str	r3, [r7, #24]

    if (iocurrent == ioposition)
 8001480:	69ba      	ldr	r2, [r7, #24]
 8001482:	69fb      	ldr	r3, [r7, #28]
 8001484:	429a      	cmp	r2, r3
 8001486:	f040 8168 	bne.w	800175a <HAL_GPIO_Init+0x302>
    {
      /* Check the Alternate function parameters */
      assert_param(IS_GPIO_AF_INSTANCE(GPIOx));

      /* Based on the required mode, filling config variable with MODEy[1:0] and CNFy[3:2] corresponding bits */
      switch (GPIO_Init->Mode)
 800148a:	683b      	ldr	r3, [r7, #0]
 800148c:	685b      	ldr	r3, [r3, #4]
 800148e:	4a96      	ldr	r2, [pc, #600]	; (80016e8 <HAL_GPIO_Init+0x290>)
 8001490:	4293      	cmp	r3, r2
 8001492:	d05e      	beq.n	8001552 <HAL_GPIO_Init+0xfa>
 8001494:	4a94      	ldr	r2, [pc, #592]	; (80016e8 <HAL_GPIO_Init+0x290>)
 8001496:	4293      	cmp	r3, r2
 8001498:	d875      	bhi.n	8001586 <HAL_GPIO_Init+0x12e>
 800149a:	4a94      	ldr	r2, [pc, #592]	; (80016ec <HAL_GPIO_Init+0x294>)
 800149c:	4293      	cmp	r3, r2
 800149e:	d058      	beq.n	8001552 <HAL_GPIO_Init+0xfa>
 80014a0:	4a92      	ldr	r2, [pc, #584]	; (80016ec <HAL_GPIO_Init+0x294>)
 80014a2:	4293      	cmp	r3, r2
 80014a4:	d86f      	bhi.n	8001586 <HAL_GPIO_Init+0x12e>
 80014a6:	4a92      	ldr	r2, [pc, #584]	; (80016f0 <HAL_GPIO_Init+0x298>)
 80014a8:	4293      	cmp	r3, r2
 80014aa:	d052      	beq.n	8001552 <HAL_GPIO_Init+0xfa>
 80014ac:	4a90      	ldr	r2, [pc, #576]	; (80016f0 <HAL_GPIO_Init+0x298>)
 80014ae:	4293      	cmp	r3, r2
 80014b0:	d869      	bhi.n	8001586 <HAL_GPIO_Init+0x12e>
 80014b2:	4a90      	ldr	r2, [pc, #576]	; (80016f4 <HAL_GPIO_Init+0x29c>)
 80014b4:	4293      	cmp	r3, r2
 80014b6:	d04c      	beq.n	8001552 <HAL_GPIO_Init+0xfa>
 80014b8:	4a8e      	ldr	r2, [pc, #568]	; (80016f4 <HAL_GPIO_Init+0x29c>)
 80014ba:	4293      	cmp	r3, r2
 80014bc:	d863      	bhi.n	8001586 <HAL_GPIO_Init+0x12e>
 80014be:	4a8e      	ldr	r2, [pc, #568]	; (80016f8 <HAL_GPIO_Init+0x2a0>)
 80014c0:	4293      	cmp	r3, r2
 80014c2:	d046      	beq.n	8001552 <HAL_GPIO_Init+0xfa>
 80014c4:	4a8c      	ldr	r2, [pc, #560]	; (80016f8 <HAL_GPIO_Init+0x2a0>)
 80014c6:	4293      	cmp	r3, r2
 80014c8:	d85d      	bhi.n	8001586 <HAL_GPIO_Init+0x12e>
 80014ca:	2b12      	cmp	r3, #18
 80014cc:	d82a      	bhi.n	8001524 <HAL_GPIO_Init+0xcc>
 80014ce:	2b12      	cmp	r3, #18
 80014d0:	d859      	bhi.n	8001586 <HAL_GPIO_Init+0x12e>
 80014d2:	a201      	add	r2, pc, #4	; (adr r2, 80014d8 <HAL_GPIO_Init+0x80>)
 80014d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80014d8:	08001553 	.word	0x08001553
 80014dc:	0800152d 	.word	0x0800152d
 80014e0:	0800153f 	.word	0x0800153f
 80014e4:	08001581 	.word	0x08001581
 80014e8:	08001587 	.word	0x08001587
 80014ec:	08001587 	.word	0x08001587
 80014f0:	08001587 	.word	0x08001587
 80014f4:	08001587 	.word	0x08001587
 80014f8:	08001587 	.word	0x08001587
 80014fc:	08001587 	.word	0x08001587
 8001500:	08001587 	.word	0x08001587
 8001504:	08001587 	.word	0x08001587
 8001508:	08001587 	.word	0x08001587
 800150c:	08001587 	.word	0x08001587
 8001510:	08001587 	.word	0x08001587
 8001514:	08001587 	.word	0x08001587
 8001518:	08001587 	.word	0x08001587
 800151c:	08001535 	.word	0x08001535
 8001520:	08001549 	.word	0x08001549
 8001524:	4a75      	ldr	r2, [pc, #468]	; (80016fc <HAL_GPIO_Init+0x2a4>)
 8001526:	4293      	cmp	r3, r2
 8001528:	d013      	beq.n	8001552 <HAL_GPIO_Init+0xfa>
          config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_ANALOG;
          break;

        /* Parameters are checked with assert_param */
        default:
          break;
 800152a:	e02c      	b.n	8001586 <HAL_GPIO_Init+0x12e>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_PP;
 800152c:	683b      	ldr	r3, [r7, #0]
 800152e:	68db      	ldr	r3, [r3, #12]
 8001530:	623b      	str	r3, [r7, #32]
          break;
 8001532:	e029      	b.n	8001588 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_OD;
 8001534:	683b      	ldr	r3, [r7, #0]
 8001536:	68db      	ldr	r3, [r3, #12]
 8001538:	3304      	adds	r3, #4
 800153a:	623b      	str	r3, [r7, #32]
          break;
 800153c:	e024      	b.n	8001588 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_PP;
 800153e:	683b      	ldr	r3, [r7, #0]
 8001540:	68db      	ldr	r3, [r3, #12]
 8001542:	3308      	adds	r3, #8
 8001544:	623b      	str	r3, [r7, #32]
          break;
 8001546:	e01f      	b.n	8001588 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_OD;
 8001548:	683b      	ldr	r3, [r7, #0]
 800154a:	68db      	ldr	r3, [r3, #12]
 800154c:	330c      	adds	r3, #12
 800154e:	623b      	str	r3, [r7, #32]
          break;
 8001550:	e01a      	b.n	8001588 <HAL_GPIO_Init+0x130>
          if (GPIO_Init->Pull == GPIO_NOPULL)
 8001552:	683b      	ldr	r3, [r7, #0]
 8001554:	689b      	ldr	r3, [r3, #8]
 8001556:	2b00      	cmp	r3, #0
 8001558:	d102      	bne.n	8001560 <HAL_GPIO_Init+0x108>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_FLOATING;
 800155a:	2304      	movs	r3, #4
 800155c:	623b      	str	r3, [r7, #32]
          break;
 800155e:	e013      	b.n	8001588 <HAL_GPIO_Init+0x130>
          else if (GPIO_Init->Pull == GPIO_PULLUP)
 8001560:	683b      	ldr	r3, [r7, #0]
 8001562:	689b      	ldr	r3, [r3, #8]
 8001564:	2b01      	cmp	r3, #1
 8001566:	d105      	bne.n	8001574 <HAL_GPIO_Init+0x11c>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 8001568:	2308      	movs	r3, #8
 800156a:	623b      	str	r3, [r7, #32]
            GPIOx->BSRR = ioposition;
 800156c:	687b      	ldr	r3, [r7, #4]
 800156e:	69fa      	ldr	r2, [r7, #28]
 8001570:	611a      	str	r2, [r3, #16]
          break;
 8001572:	e009      	b.n	8001588 <HAL_GPIO_Init+0x130>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 8001574:	2308      	movs	r3, #8
 8001576:	623b      	str	r3, [r7, #32]
            GPIOx->BRR = ioposition;
 8001578:	687b      	ldr	r3, [r7, #4]
 800157a:	69fa      	ldr	r2, [r7, #28]
 800157c:	615a      	str	r2, [r3, #20]
          break;
 800157e:	e003      	b.n	8001588 <HAL_GPIO_Init+0x130>
          config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_ANALOG;
 8001580:	2300      	movs	r3, #0
 8001582:	623b      	str	r3, [r7, #32]
          break;
 8001584:	e000      	b.n	8001588 <HAL_GPIO_Init+0x130>
          break;
 8001586:	bf00      	nop
      }

      /* Check if the current bit belongs to first half or last half of the pin count number
       in order to address CRH or CRL register*/
      configregister = (iocurrent < GPIO_PIN_8) ? &GPIOx->CRL     : &GPIOx->CRH;
 8001588:	69bb      	ldr	r3, [r7, #24]
 800158a:	2bff      	cmp	r3, #255	; 0xff
 800158c:	d801      	bhi.n	8001592 <HAL_GPIO_Init+0x13a>
 800158e:	687b      	ldr	r3, [r7, #4]
 8001590:	e001      	b.n	8001596 <HAL_GPIO_Init+0x13e>
 8001592:	687b      	ldr	r3, [r7, #4]
 8001594:	3304      	adds	r3, #4
 8001596:	617b      	str	r3, [r7, #20]
      registeroffset = (iocurrent < GPIO_PIN_8) ? (position << 2u) : ((position - 8u) << 2u);
 8001598:	69bb      	ldr	r3, [r7, #24]
 800159a:	2bff      	cmp	r3, #255	; 0xff
 800159c:	d802      	bhi.n	80015a4 <HAL_GPIO_Init+0x14c>
 800159e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015a0:	009b      	lsls	r3, r3, #2
 80015a2:	e002      	b.n	80015aa <HAL_GPIO_Init+0x152>
 80015a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015a6:	3b08      	subs	r3, #8
 80015a8:	009b      	lsls	r3, r3, #2
 80015aa:	613b      	str	r3, [r7, #16]

      /* Apply the new configuration of the pin to the register */
      MODIFY_REG((*configregister), ((GPIO_CRL_MODE0 | GPIO_CRL_CNF0) << registeroffset), (config << registeroffset));
 80015ac:	697b      	ldr	r3, [r7, #20]
 80015ae:	681a      	ldr	r2, [r3, #0]
 80015b0:	210f      	movs	r1, #15
 80015b2:	693b      	ldr	r3, [r7, #16]
 80015b4:	fa01 f303 	lsl.w	r3, r1, r3
 80015b8:	43db      	mvns	r3, r3
 80015ba:	401a      	ands	r2, r3
 80015bc:	6a39      	ldr	r1, [r7, #32]
 80015be:	693b      	ldr	r3, [r7, #16]
 80015c0:	fa01 f303 	lsl.w	r3, r1, r3
 80015c4:	431a      	orrs	r2, r3
 80015c6:	697b      	ldr	r3, [r7, #20]
 80015c8:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80015ca:	683b      	ldr	r3, [r7, #0]
 80015cc:	685b      	ldr	r3, [r3, #4]
 80015ce:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80015d2:	2b00      	cmp	r3, #0
 80015d4:	f000 80c1 	beq.w	800175a <HAL_GPIO_Init+0x302>
      {
        /* Enable AFIO Clock */
        __HAL_RCC_AFIO_CLK_ENABLE();
 80015d8:	4b49      	ldr	r3, [pc, #292]	; (8001700 <HAL_GPIO_Init+0x2a8>)
 80015da:	699b      	ldr	r3, [r3, #24]
 80015dc:	4a48      	ldr	r2, [pc, #288]	; (8001700 <HAL_GPIO_Init+0x2a8>)
 80015de:	f043 0301 	orr.w	r3, r3, #1
 80015e2:	6193      	str	r3, [r2, #24]
 80015e4:	4b46      	ldr	r3, [pc, #280]	; (8001700 <HAL_GPIO_Init+0x2a8>)
 80015e6:	699b      	ldr	r3, [r3, #24]
 80015e8:	f003 0301 	and.w	r3, r3, #1
 80015ec:	60bb      	str	r3, [r7, #8]
 80015ee:	68bb      	ldr	r3, [r7, #8]
        temp = AFIO->EXTICR[position >> 2u];
 80015f0:	4a44      	ldr	r2, [pc, #272]	; (8001704 <HAL_GPIO_Init+0x2ac>)
 80015f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015f4:	089b      	lsrs	r3, r3, #2
 80015f6:	3302      	adds	r3, #2
 80015f8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80015fc:	60fb      	str	r3, [r7, #12]
        CLEAR_BIT(temp, (0x0Fu) << (4u * (position & 0x03u)));
 80015fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001600:	f003 0303 	and.w	r3, r3, #3
 8001604:	009b      	lsls	r3, r3, #2
 8001606:	220f      	movs	r2, #15
 8001608:	fa02 f303 	lsl.w	r3, r2, r3
 800160c:	43db      	mvns	r3, r3
 800160e:	68fa      	ldr	r2, [r7, #12]
 8001610:	4013      	ands	r3, r2
 8001612:	60fb      	str	r3, [r7, #12]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4u * (position & 0x03u)));
 8001614:	687b      	ldr	r3, [r7, #4]
 8001616:	4a3c      	ldr	r2, [pc, #240]	; (8001708 <HAL_GPIO_Init+0x2b0>)
 8001618:	4293      	cmp	r3, r2
 800161a:	d01f      	beq.n	800165c <HAL_GPIO_Init+0x204>
 800161c:	687b      	ldr	r3, [r7, #4]
 800161e:	4a3b      	ldr	r2, [pc, #236]	; (800170c <HAL_GPIO_Init+0x2b4>)
 8001620:	4293      	cmp	r3, r2
 8001622:	d019      	beq.n	8001658 <HAL_GPIO_Init+0x200>
 8001624:	687b      	ldr	r3, [r7, #4]
 8001626:	4a3a      	ldr	r2, [pc, #232]	; (8001710 <HAL_GPIO_Init+0x2b8>)
 8001628:	4293      	cmp	r3, r2
 800162a:	d013      	beq.n	8001654 <HAL_GPIO_Init+0x1fc>
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	4a39      	ldr	r2, [pc, #228]	; (8001714 <HAL_GPIO_Init+0x2bc>)
 8001630:	4293      	cmp	r3, r2
 8001632:	d00d      	beq.n	8001650 <HAL_GPIO_Init+0x1f8>
 8001634:	687b      	ldr	r3, [r7, #4]
 8001636:	4a38      	ldr	r2, [pc, #224]	; (8001718 <HAL_GPIO_Init+0x2c0>)
 8001638:	4293      	cmp	r3, r2
 800163a:	d007      	beq.n	800164c <HAL_GPIO_Init+0x1f4>
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	4a37      	ldr	r2, [pc, #220]	; (800171c <HAL_GPIO_Init+0x2c4>)
 8001640:	4293      	cmp	r3, r2
 8001642:	d101      	bne.n	8001648 <HAL_GPIO_Init+0x1f0>
 8001644:	2305      	movs	r3, #5
 8001646:	e00a      	b.n	800165e <HAL_GPIO_Init+0x206>
 8001648:	2306      	movs	r3, #6
 800164a:	e008      	b.n	800165e <HAL_GPIO_Init+0x206>
 800164c:	2304      	movs	r3, #4
 800164e:	e006      	b.n	800165e <HAL_GPIO_Init+0x206>
 8001650:	2303      	movs	r3, #3
 8001652:	e004      	b.n	800165e <HAL_GPIO_Init+0x206>
 8001654:	2302      	movs	r3, #2
 8001656:	e002      	b.n	800165e <HAL_GPIO_Init+0x206>
 8001658:	2301      	movs	r3, #1
 800165a:	e000      	b.n	800165e <HAL_GPIO_Init+0x206>
 800165c:	2300      	movs	r3, #0
 800165e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001660:	f002 0203 	and.w	r2, r2, #3
 8001664:	0092      	lsls	r2, r2, #2
 8001666:	4093      	lsls	r3, r2
 8001668:	68fa      	ldr	r2, [r7, #12]
 800166a:	4313      	orrs	r3, r2
 800166c:	60fb      	str	r3, [r7, #12]
        AFIO->EXTICR[position >> 2u] = temp;
 800166e:	4925      	ldr	r1, [pc, #148]	; (8001704 <HAL_GPIO_Init+0x2ac>)
 8001670:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001672:	089b      	lsrs	r3, r3, #2
 8001674:	3302      	adds	r3, #2
 8001676:	68fa      	ldr	r2, [r7, #12]
 8001678:	f841 2023 	str.w	r2, [r1, r3, lsl #2]


        /* Configure the interrupt mask */
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800167c:	683b      	ldr	r3, [r7, #0]
 800167e:	685b      	ldr	r3, [r3, #4]
 8001680:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001684:	2b00      	cmp	r3, #0
 8001686:	d006      	beq.n	8001696 <HAL_GPIO_Init+0x23e>
        {
          SET_BIT(EXTI->IMR, iocurrent);
 8001688:	4b25      	ldr	r3, [pc, #148]	; (8001720 <HAL_GPIO_Init+0x2c8>)
 800168a:	681a      	ldr	r2, [r3, #0]
 800168c:	4924      	ldr	r1, [pc, #144]	; (8001720 <HAL_GPIO_Init+0x2c8>)
 800168e:	69bb      	ldr	r3, [r7, #24]
 8001690:	4313      	orrs	r3, r2
 8001692:	600b      	str	r3, [r1, #0]
 8001694:	e006      	b.n	80016a4 <HAL_GPIO_Init+0x24c>
        }
        else
        {
          CLEAR_BIT(EXTI->IMR, iocurrent);
 8001696:	4b22      	ldr	r3, [pc, #136]	; (8001720 <HAL_GPIO_Init+0x2c8>)
 8001698:	681a      	ldr	r2, [r3, #0]
 800169a:	69bb      	ldr	r3, [r7, #24]
 800169c:	43db      	mvns	r3, r3
 800169e:	4920      	ldr	r1, [pc, #128]	; (8001720 <HAL_GPIO_Init+0x2c8>)
 80016a0:	4013      	ands	r3, r2
 80016a2:	600b      	str	r3, [r1, #0]
        }

        /* Configure the event mask */
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80016a4:	683b      	ldr	r3, [r7, #0]
 80016a6:	685b      	ldr	r3, [r3, #4]
 80016a8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80016ac:	2b00      	cmp	r3, #0
 80016ae:	d006      	beq.n	80016be <HAL_GPIO_Init+0x266>
        {
          SET_BIT(EXTI->EMR, iocurrent);
 80016b0:	4b1b      	ldr	r3, [pc, #108]	; (8001720 <HAL_GPIO_Init+0x2c8>)
 80016b2:	685a      	ldr	r2, [r3, #4]
 80016b4:	491a      	ldr	r1, [pc, #104]	; (8001720 <HAL_GPIO_Init+0x2c8>)
 80016b6:	69bb      	ldr	r3, [r7, #24]
 80016b8:	4313      	orrs	r3, r2
 80016ba:	604b      	str	r3, [r1, #4]
 80016bc:	e006      	b.n	80016cc <HAL_GPIO_Init+0x274>
        }
        else
        {
          CLEAR_BIT(EXTI->EMR, iocurrent);
 80016be:	4b18      	ldr	r3, [pc, #96]	; (8001720 <HAL_GPIO_Init+0x2c8>)
 80016c0:	685a      	ldr	r2, [r3, #4]
 80016c2:	69bb      	ldr	r3, [r7, #24]
 80016c4:	43db      	mvns	r3, r3
 80016c6:	4916      	ldr	r1, [pc, #88]	; (8001720 <HAL_GPIO_Init+0x2c8>)
 80016c8:	4013      	ands	r3, r2
 80016ca:	604b      	str	r3, [r1, #4]
        }

        /* Enable or disable the rising trigger */
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80016cc:	683b      	ldr	r3, [r7, #0]
 80016ce:	685b      	ldr	r3, [r3, #4]
 80016d0:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80016d4:	2b00      	cmp	r3, #0
 80016d6:	d025      	beq.n	8001724 <HAL_GPIO_Init+0x2cc>
        {
          SET_BIT(EXTI->RTSR, iocurrent);
 80016d8:	4b11      	ldr	r3, [pc, #68]	; (8001720 <HAL_GPIO_Init+0x2c8>)
 80016da:	689a      	ldr	r2, [r3, #8]
 80016dc:	4910      	ldr	r1, [pc, #64]	; (8001720 <HAL_GPIO_Init+0x2c8>)
 80016de:	69bb      	ldr	r3, [r7, #24]
 80016e0:	4313      	orrs	r3, r2
 80016e2:	608b      	str	r3, [r1, #8]
 80016e4:	e025      	b.n	8001732 <HAL_GPIO_Init+0x2da>
 80016e6:	bf00      	nop
 80016e8:	10320000 	.word	0x10320000
 80016ec:	10310000 	.word	0x10310000
 80016f0:	10220000 	.word	0x10220000
 80016f4:	10210000 	.word	0x10210000
 80016f8:	10120000 	.word	0x10120000
 80016fc:	10110000 	.word	0x10110000
 8001700:	40021000 	.word	0x40021000
 8001704:	40010000 	.word	0x40010000
 8001708:	40010800 	.word	0x40010800
 800170c:	40010c00 	.word	0x40010c00
 8001710:	40011000 	.word	0x40011000
 8001714:	40011400 	.word	0x40011400
 8001718:	40011800 	.word	0x40011800
 800171c:	40011c00 	.word	0x40011c00
 8001720:	40010400 	.word	0x40010400
        }
        else
        {
          CLEAR_BIT(EXTI->RTSR, iocurrent);
 8001724:	4b15      	ldr	r3, [pc, #84]	; (800177c <HAL_GPIO_Init+0x324>)
 8001726:	689a      	ldr	r2, [r3, #8]
 8001728:	69bb      	ldr	r3, [r7, #24]
 800172a:	43db      	mvns	r3, r3
 800172c:	4913      	ldr	r1, [pc, #76]	; (800177c <HAL_GPIO_Init+0x324>)
 800172e:	4013      	ands	r3, r2
 8001730:	608b      	str	r3, [r1, #8]
        }

        /* Enable or disable the falling trigger */
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8001732:	683b      	ldr	r3, [r7, #0]
 8001734:	685b      	ldr	r3, [r3, #4]
 8001736:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800173a:	2b00      	cmp	r3, #0
 800173c:	d006      	beq.n	800174c <HAL_GPIO_Init+0x2f4>
        {
          SET_BIT(EXTI->FTSR, iocurrent);
 800173e:	4b0f      	ldr	r3, [pc, #60]	; (800177c <HAL_GPIO_Init+0x324>)
 8001740:	68da      	ldr	r2, [r3, #12]
 8001742:	490e      	ldr	r1, [pc, #56]	; (800177c <HAL_GPIO_Init+0x324>)
 8001744:	69bb      	ldr	r3, [r7, #24]
 8001746:	4313      	orrs	r3, r2
 8001748:	60cb      	str	r3, [r1, #12]
 800174a:	e006      	b.n	800175a <HAL_GPIO_Init+0x302>
        }
        else
        {
          CLEAR_BIT(EXTI->FTSR, iocurrent);
 800174c:	4b0b      	ldr	r3, [pc, #44]	; (800177c <HAL_GPIO_Init+0x324>)
 800174e:	68da      	ldr	r2, [r3, #12]
 8001750:	69bb      	ldr	r3, [r7, #24]
 8001752:	43db      	mvns	r3, r3
 8001754:	4909      	ldr	r1, [pc, #36]	; (800177c <HAL_GPIO_Init+0x324>)
 8001756:	4013      	ands	r3, r2
 8001758:	60cb      	str	r3, [r1, #12]
        }
      }
    }

	position++;
 800175a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800175c:	3301      	adds	r3, #1
 800175e:	627b      	str	r3, [r7, #36]	; 0x24
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8001760:	683b      	ldr	r3, [r7, #0]
 8001762:	681a      	ldr	r2, [r3, #0]
 8001764:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001766:	fa22 f303 	lsr.w	r3, r2, r3
 800176a:	2b00      	cmp	r3, #0
 800176c:	f47f ae7e 	bne.w	800146c <HAL_GPIO_Init+0x14>
  }
}
 8001770:	bf00      	nop
 8001772:	bf00      	nop
 8001774:	372c      	adds	r7, #44	; 0x2c
 8001776:	46bd      	mov	sp, r7
 8001778:	bc80      	pop	{r7}
 800177a:	4770      	bx	lr
 800177c:	40010400 	.word	0x40010400

08001780 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin: specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 8001780:	b480      	push	{r7}
 8001782:	b085      	sub	sp, #20
 8001784:	af00      	add	r7, sp, #0
 8001786:	6078      	str	r0, [r7, #4]
 8001788:	460b      	mov	r3, r1
 800178a:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800178c:	687b      	ldr	r3, [r7, #4]
 800178e:	689a      	ldr	r2, [r3, #8]
 8001790:	887b      	ldrh	r3, [r7, #2]
 8001792:	4013      	ands	r3, r2
 8001794:	2b00      	cmp	r3, #0
 8001796:	d002      	beq.n	800179e <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 8001798:	2301      	movs	r3, #1
 800179a:	73fb      	strb	r3, [r7, #15]
 800179c:	e001      	b.n	80017a2 <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 800179e:	2300      	movs	r3, #0
 80017a0:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 80017a2:	7bfb      	ldrb	r3, [r7, #15]
}
 80017a4:	4618      	mov	r0, r3
 80017a6:	3714      	adds	r7, #20
 80017a8:	46bd      	mov	sp, r7
 80017aa:	bc80      	pop	{r7}
 80017ac:	4770      	bx	lr

080017ae <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80017ae:	b480      	push	{r7}
 80017b0:	b083      	sub	sp, #12
 80017b2:	af00      	add	r7, sp, #0
 80017b4:	6078      	str	r0, [r7, #4]
 80017b6:	460b      	mov	r3, r1
 80017b8:	807b      	strh	r3, [r7, #2]
 80017ba:	4613      	mov	r3, r2
 80017bc:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 80017be:	787b      	ldrb	r3, [r7, #1]
 80017c0:	2b00      	cmp	r3, #0
 80017c2:	d003      	beq.n	80017cc <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80017c4:	887a      	ldrh	r2, [r7, #2]
 80017c6:	687b      	ldr	r3, [r7, #4]
 80017c8:	611a      	str	r2, [r3, #16]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16u;
  }
}
 80017ca:	e003      	b.n	80017d4 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16u;
 80017cc:	887b      	ldrh	r3, [r7, #2]
 80017ce:	041a      	lsls	r2, r3, #16
 80017d0:	687b      	ldr	r3, [r7, #4]
 80017d2:	611a      	str	r2, [r3, #16]
}
 80017d4:	bf00      	nop
 80017d6:	370c      	adds	r7, #12
 80017d8:	46bd      	mov	sp, r7
 80017da:	bc80      	pop	{r7}
 80017dc:	4770      	bx	lr

080017de <HAL_GPIO_TogglePin>:
  * @param  GPIOx: where x can be (A..G depending on device used) to select the GPIO peripheral
  * @param  GPIO_Pin: Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 80017de:	b480      	push	{r7}
 80017e0:	b085      	sub	sp, #20
 80017e2:	af00      	add	r7, sp, #0
 80017e4:	6078      	str	r0, [r7, #4]
 80017e6:	460b      	mov	r3, r1
 80017e8:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Ouput Data Register value */
  odr = GPIOx->ODR;
 80017ea:	687b      	ldr	r3, [r7, #4]
 80017ec:	68db      	ldr	r3, [r3, #12]
 80017ee:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80017f0:	887a      	ldrh	r2, [r7, #2]
 80017f2:	68fb      	ldr	r3, [r7, #12]
 80017f4:	4013      	ands	r3, r2
 80017f6:	041a      	lsls	r2, r3, #16
 80017f8:	68fb      	ldr	r3, [r7, #12]
 80017fa:	43d9      	mvns	r1, r3
 80017fc:	887b      	ldrh	r3, [r7, #2]
 80017fe:	400b      	ands	r3, r1
 8001800:	431a      	orrs	r2, r3
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	611a      	str	r2, [r3, #16]
}
 8001806:	bf00      	nop
 8001808:	3714      	adds	r7, #20
 800180a:	46bd      	mov	sp, r7
 800180c:	bc80      	pop	{r7}
 800180e:	4770      	bx	lr

08001810 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8001810:	b580      	push	{r7, lr}
 8001812:	b086      	sub	sp, #24
 8001814:	af00      	add	r7, sp, #0
 8001816:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8001818:	687b      	ldr	r3, [r7, #4]
 800181a:	2b00      	cmp	r3, #0
 800181c:	d101      	bne.n	8001822 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 800181e:	2301      	movs	r3, #1
 8001820:	e272      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001822:	687b      	ldr	r3, [r7, #4]
 8001824:	681b      	ldr	r3, [r3, #0]
 8001826:	f003 0301 	and.w	r3, r3, #1
 800182a:	2b00      	cmp	r3, #0
 800182c:	f000 8087 	beq.w	800193e <HAL_RCC_OscConfig+0x12e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8001830:	4b92      	ldr	r3, [pc, #584]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 8001832:	685b      	ldr	r3, [r3, #4]
 8001834:	f003 030c 	and.w	r3, r3, #12
 8001838:	2b04      	cmp	r3, #4
 800183a:	d00c      	beq.n	8001856 <HAL_RCC_OscConfig+0x46>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 800183c:	4b8f      	ldr	r3, [pc, #572]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 800183e:	685b      	ldr	r3, [r3, #4]
 8001840:	f003 030c 	and.w	r3, r3, #12
 8001844:	2b08      	cmp	r3, #8
 8001846:	d112      	bne.n	800186e <HAL_RCC_OscConfig+0x5e>
 8001848:	4b8c      	ldr	r3, [pc, #560]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 800184a:	685b      	ldr	r3, [r3, #4]
 800184c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001850:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001854:	d10b      	bne.n	800186e <HAL_RCC_OscConfig+0x5e>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001856:	4b89      	ldr	r3, [pc, #548]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 8001858:	681b      	ldr	r3, [r3, #0]
 800185a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800185e:	2b00      	cmp	r3, #0
 8001860:	d06c      	beq.n	800193c <HAL_RCC_OscConfig+0x12c>
 8001862:	687b      	ldr	r3, [r7, #4]
 8001864:	685b      	ldr	r3, [r3, #4]
 8001866:	2b00      	cmp	r3, #0
 8001868:	d168      	bne.n	800193c <HAL_RCC_OscConfig+0x12c>
      {
        return HAL_ERROR;
 800186a:	2301      	movs	r3, #1
 800186c:	e24c      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800186e:	687b      	ldr	r3, [r7, #4]
 8001870:	685b      	ldr	r3, [r3, #4]
 8001872:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001876:	d106      	bne.n	8001886 <HAL_RCC_OscConfig+0x76>
 8001878:	4b80      	ldr	r3, [pc, #512]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 800187a:	681b      	ldr	r3, [r3, #0]
 800187c:	4a7f      	ldr	r2, [pc, #508]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 800187e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001882:	6013      	str	r3, [r2, #0]
 8001884:	e02e      	b.n	80018e4 <HAL_RCC_OscConfig+0xd4>
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	685b      	ldr	r3, [r3, #4]
 800188a:	2b00      	cmp	r3, #0
 800188c:	d10c      	bne.n	80018a8 <HAL_RCC_OscConfig+0x98>
 800188e:	4b7b      	ldr	r3, [pc, #492]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 8001890:	681b      	ldr	r3, [r3, #0]
 8001892:	4a7a      	ldr	r2, [pc, #488]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 8001894:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001898:	6013      	str	r3, [r2, #0]
 800189a:	4b78      	ldr	r3, [pc, #480]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 800189c:	681b      	ldr	r3, [r3, #0]
 800189e:	4a77      	ldr	r2, [pc, #476]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 80018a0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80018a4:	6013      	str	r3, [r2, #0]
 80018a6:	e01d      	b.n	80018e4 <HAL_RCC_OscConfig+0xd4>
 80018a8:	687b      	ldr	r3, [r7, #4]
 80018aa:	685b      	ldr	r3, [r3, #4]
 80018ac:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80018b0:	d10c      	bne.n	80018cc <HAL_RCC_OscConfig+0xbc>
 80018b2:	4b72      	ldr	r3, [pc, #456]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 80018b4:	681b      	ldr	r3, [r3, #0]
 80018b6:	4a71      	ldr	r2, [pc, #452]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 80018b8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80018bc:	6013      	str	r3, [r2, #0]
 80018be:	4b6f      	ldr	r3, [pc, #444]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 80018c0:	681b      	ldr	r3, [r3, #0]
 80018c2:	4a6e      	ldr	r2, [pc, #440]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 80018c4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80018c8:	6013      	str	r3, [r2, #0]
 80018ca:	e00b      	b.n	80018e4 <HAL_RCC_OscConfig+0xd4>
 80018cc:	4b6b      	ldr	r3, [pc, #428]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 80018ce:	681b      	ldr	r3, [r3, #0]
 80018d0:	4a6a      	ldr	r2, [pc, #424]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 80018d2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80018d6:	6013      	str	r3, [r2, #0]
 80018d8:	4b68      	ldr	r3, [pc, #416]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 80018da:	681b      	ldr	r3, [r3, #0]
 80018dc:	4a67      	ldr	r2, [pc, #412]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 80018de:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80018e2:	6013      	str	r3, [r2, #0]


      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	685b      	ldr	r3, [r3, #4]
 80018e8:	2b00      	cmp	r3, #0
 80018ea:	d013      	beq.n	8001914 <HAL_RCC_OscConfig+0x104>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80018ec:	f7ff fca2 	bl	8001234 <HAL_GetTick>
 80018f0:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80018f2:	e008      	b.n	8001906 <HAL_RCC_OscConfig+0xf6>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80018f4:	f7ff fc9e 	bl	8001234 <HAL_GetTick>
 80018f8:	4602      	mov	r2, r0
 80018fa:	693b      	ldr	r3, [r7, #16]
 80018fc:	1ad3      	subs	r3, r2, r3
 80018fe:	2b64      	cmp	r3, #100	; 0x64
 8001900:	d901      	bls.n	8001906 <HAL_RCC_OscConfig+0xf6>
          {
            return HAL_TIMEOUT;
 8001902:	2303      	movs	r3, #3
 8001904:	e200      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001906:	4b5d      	ldr	r3, [pc, #372]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 8001908:	681b      	ldr	r3, [r3, #0]
 800190a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800190e:	2b00      	cmp	r3, #0
 8001910:	d0f0      	beq.n	80018f4 <HAL_RCC_OscConfig+0xe4>
 8001912:	e014      	b.n	800193e <HAL_RCC_OscConfig+0x12e>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001914:	f7ff fc8e 	bl	8001234 <HAL_GetTick>
 8001918:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800191a:	e008      	b.n	800192e <HAL_RCC_OscConfig+0x11e>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800191c:	f7ff fc8a 	bl	8001234 <HAL_GetTick>
 8001920:	4602      	mov	r2, r0
 8001922:	693b      	ldr	r3, [r7, #16]
 8001924:	1ad3      	subs	r3, r2, r3
 8001926:	2b64      	cmp	r3, #100	; 0x64
 8001928:	d901      	bls.n	800192e <HAL_RCC_OscConfig+0x11e>
          {
            return HAL_TIMEOUT;
 800192a:	2303      	movs	r3, #3
 800192c:	e1ec      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800192e:	4b53      	ldr	r3, [pc, #332]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 8001930:	681b      	ldr	r3, [r3, #0]
 8001932:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001936:	2b00      	cmp	r3, #0
 8001938:	d1f0      	bne.n	800191c <HAL_RCC_OscConfig+0x10c>
 800193a:	e000      	b.n	800193e <HAL_RCC_OscConfig+0x12e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800193c:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800193e:	687b      	ldr	r3, [r7, #4]
 8001940:	681b      	ldr	r3, [r3, #0]
 8001942:	f003 0302 	and.w	r3, r3, #2
 8001946:	2b00      	cmp	r3, #0
 8001948:	d063      	beq.n	8001a12 <HAL_RCC_OscConfig+0x202>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 800194a:	4b4c      	ldr	r3, [pc, #304]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 800194c:	685b      	ldr	r3, [r3, #4]
 800194e:	f003 030c 	and.w	r3, r3, #12
 8001952:	2b00      	cmp	r3, #0
 8001954:	d00b      	beq.n	800196e <HAL_RCC_OscConfig+0x15e>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI_DIV2)))
 8001956:	4b49      	ldr	r3, [pc, #292]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 8001958:	685b      	ldr	r3, [r3, #4]
 800195a:	f003 030c 	and.w	r3, r3, #12
 800195e:	2b08      	cmp	r3, #8
 8001960:	d11c      	bne.n	800199c <HAL_RCC_OscConfig+0x18c>
 8001962:	4b46      	ldr	r3, [pc, #280]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 8001964:	685b      	ldr	r3, [r3, #4]
 8001966:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800196a:	2b00      	cmp	r3, #0
 800196c:	d116      	bne.n	800199c <HAL_RCC_OscConfig+0x18c>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800196e:	4b43      	ldr	r3, [pc, #268]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 8001970:	681b      	ldr	r3, [r3, #0]
 8001972:	f003 0302 	and.w	r3, r3, #2
 8001976:	2b00      	cmp	r3, #0
 8001978:	d005      	beq.n	8001986 <HAL_RCC_OscConfig+0x176>
 800197a:	687b      	ldr	r3, [r7, #4]
 800197c:	691b      	ldr	r3, [r3, #16]
 800197e:	2b01      	cmp	r3, #1
 8001980:	d001      	beq.n	8001986 <HAL_RCC_OscConfig+0x176>
      {
        return HAL_ERROR;
 8001982:	2301      	movs	r3, #1
 8001984:	e1c0      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001986:	4b3d      	ldr	r3, [pc, #244]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 8001988:	681b      	ldr	r3, [r3, #0]
 800198a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800198e:	687b      	ldr	r3, [r7, #4]
 8001990:	695b      	ldr	r3, [r3, #20]
 8001992:	00db      	lsls	r3, r3, #3
 8001994:	4939      	ldr	r1, [pc, #228]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 8001996:	4313      	orrs	r3, r2
 8001998:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800199a:	e03a      	b.n	8001a12 <HAL_RCC_OscConfig+0x202>
      }
    }
    else
    {
      /* Check the HSI State */
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 800199c:	687b      	ldr	r3, [r7, #4]
 800199e:	691b      	ldr	r3, [r3, #16]
 80019a0:	2b00      	cmp	r3, #0
 80019a2:	d020      	beq.n	80019e6 <HAL_RCC_OscConfig+0x1d6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80019a4:	4b36      	ldr	r3, [pc, #216]	; (8001a80 <HAL_RCC_OscConfig+0x270>)
 80019a6:	2201      	movs	r2, #1
 80019a8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80019aa:	f7ff fc43 	bl	8001234 <HAL_GetTick>
 80019ae:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80019b0:	e008      	b.n	80019c4 <HAL_RCC_OscConfig+0x1b4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80019b2:	f7ff fc3f 	bl	8001234 <HAL_GetTick>
 80019b6:	4602      	mov	r2, r0
 80019b8:	693b      	ldr	r3, [r7, #16]
 80019ba:	1ad3      	subs	r3, r2, r3
 80019bc:	2b02      	cmp	r3, #2
 80019be:	d901      	bls.n	80019c4 <HAL_RCC_OscConfig+0x1b4>
          {
            return HAL_TIMEOUT;
 80019c0:	2303      	movs	r3, #3
 80019c2:	e1a1      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80019c4:	4b2d      	ldr	r3, [pc, #180]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 80019c6:	681b      	ldr	r3, [r3, #0]
 80019c8:	f003 0302 	and.w	r3, r3, #2
 80019cc:	2b00      	cmp	r3, #0
 80019ce:	d0f0      	beq.n	80019b2 <HAL_RCC_OscConfig+0x1a2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80019d0:	4b2a      	ldr	r3, [pc, #168]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 80019d2:	681b      	ldr	r3, [r3, #0]
 80019d4:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80019d8:	687b      	ldr	r3, [r7, #4]
 80019da:	695b      	ldr	r3, [r3, #20]
 80019dc:	00db      	lsls	r3, r3, #3
 80019de:	4927      	ldr	r1, [pc, #156]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 80019e0:	4313      	orrs	r3, r2
 80019e2:	600b      	str	r3, [r1, #0]
 80019e4:	e015      	b.n	8001a12 <HAL_RCC_OscConfig+0x202>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80019e6:	4b26      	ldr	r3, [pc, #152]	; (8001a80 <HAL_RCC_OscConfig+0x270>)
 80019e8:	2200      	movs	r2, #0
 80019ea:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80019ec:	f7ff fc22 	bl	8001234 <HAL_GetTick>
 80019f0:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80019f2:	e008      	b.n	8001a06 <HAL_RCC_OscConfig+0x1f6>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80019f4:	f7ff fc1e 	bl	8001234 <HAL_GetTick>
 80019f8:	4602      	mov	r2, r0
 80019fa:	693b      	ldr	r3, [r7, #16]
 80019fc:	1ad3      	subs	r3, r2, r3
 80019fe:	2b02      	cmp	r3, #2
 8001a00:	d901      	bls.n	8001a06 <HAL_RCC_OscConfig+0x1f6>
          {
            return HAL_TIMEOUT;
 8001a02:	2303      	movs	r3, #3
 8001a04:	e180      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001a06:	4b1d      	ldr	r3, [pc, #116]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 8001a08:	681b      	ldr	r3, [r3, #0]
 8001a0a:	f003 0302 	and.w	r3, r3, #2
 8001a0e:	2b00      	cmp	r3, #0
 8001a10:	d1f0      	bne.n	80019f4 <HAL_RCC_OscConfig+0x1e4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8001a12:	687b      	ldr	r3, [r7, #4]
 8001a14:	681b      	ldr	r3, [r3, #0]
 8001a16:	f003 0308 	and.w	r3, r3, #8
 8001a1a:	2b00      	cmp	r3, #0
 8001a1c:	d03a      	beq.n	8001a94 <HAL_RCC_OscConfig+0x284>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8001a1e:	687b      	ldr	r3, [r7, #4]
 8001a20:	699b      	ldr	r3, [r3, #24]
 8001a22:	2b00      	cmp	r3, #0
 8001a24:	d019      	beq.n	8001a5a <HAL_RCC_OscConfig+0x24a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8001a26:	4b17      	ldr	r3, [pc, #92]	; (8001a84 <HAL_RCC_OscConfig+0x274>)
 8001a28:	2201      	movs	r2, #1
 8001a2a:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001a2c:	f7ff fc02 	bl	8001234 <HAL_GetTick>
 8001a30:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8001a32:	e008      	b.n	8001a46 <HAL_RCC_OscConfig+0x236>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8001a34:	f7ff fbfe 	bl	8001234 <HAL_GetTick>
 8001a38:	4602      	mov	r2, r0
 8001a3a:	693b      	ldr	r3, [r7, #16]
 8001a3c:	1ad3      	subs	r3, r2, r3
 8001a3e:	2b02      	cmp	r3, #2
 8001a40:	d901      	bls.n	8001a46 <HAL_RCC_OscConfig+0x236>
        {
          return HAL_TIMEOUT;
 8001a42:	2303      	movs	r3, #3
 8001a44:	e160      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8001a46:	4b0d      	ldr	r3, [pc, #52]	; (8001a7c <HAL_RCC_OscConfig+0x26c>)
 8001a48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a4a:	f003 0302 	and.w	r3, r3, #2
 8001a4e:	2b00      	cmp	r3, #0
 8001a50:	d0f0      	beq.n	8001a34 <HAL_RCC_OscConfig+0x224>
        }
      }
      /*  To have a fully stabilized clock in the specified range, a software delay of 1ms
          should be added.*/
      RCC_Delay(1);
 8001a52:	2001      	movs	r0, #1
 8001a54:	f000 faa6 	bl	8001fa4 <RCC_Delay>
 8001a58:	e01c      	b.n	8001a94 <HAL_RCC_OscConfig+0x284>
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8001a5a:	4b0a      	ldr	r3, [pc, #40]	; (8001a84 <HAL_RCC_OscConfig+0x274>)
 8001a5c:	2200      	movs	r2, #0
 8001a5e:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001a60:	f7ff fbe8 	bl	8001234 <HAL_GetTick>
 8001a64:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001a66:	e00f      	b.n	8001a88 <HAL_RCC_OscConfig+0x278>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8001a68:	f7ff fbe4 	bl	8001234 <HAL_GetTick>
 8001a6c:	4602      	mov	r2, r0
 8001a6e:	693b      	ldr	r3, [r7, #16]
 8001a70:	1ad3      	subs	r3, r2, r3
 8001a72:	2b02      	cmp	r3, #2
 8001a74:	d908      	bls.n	8001a88 <HAL_RCC_OscConfig+0x278>
        {
          return HAL_TIMEOUT;
 8001a76:	2303      	movs	r3, #3
 8001a78:	e146      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
 8001a7a:	bf00      	nop
 8001a7c:	40021000 	.word	0x40021000
 8001a80:	42420000 	.word	0x42420000
 8001a84:	42420480 	.word	0x42420480
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8001a88:	4b92      	ldr	r3, [pc, #584]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001a8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a8c:	f003 0302 	and.w	r3, r3, #2
 8001a90:	2b00      	cmp	r3, #0
 8001a92:	d1e9      	bne.n	8001a68 <HAL_RCC_OscConfig+0x258>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	681b      	ldr	r3, [r3, #0]
 8001a98:	f003 0304 	and.w	r3, r3, #4
 8001a9c:	2b00      	cmp	r3, #0
 8001a9e:	f000 80a6 	beq.w	8001bee <HAL_RCC_OscConfig+0x3de>
  {
    FlagStatus       pwrclkchanged = RESET;
 8001aa2:	2300      	movs	r3, #0
 8001aa4:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8001aa6:	4b8b      	ldr	r3, [pc, #556]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001aa8:	69db      	ldr	r3, [r3, #28]
 8001aaa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001aae:	2b00      	cmp	r3, #0
 8001ab0:	d10d      	bne.n	8001ace <HAL_RCC_OscConfig+0x2be>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8001ab2:	4b88      	ldr	r3, [pc, #544]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001ab4:	69db      	ldr	r3, [r3, #28]
 8001ab6:	4a87      	ldr	r2, [pc, #540]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001ab8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001abc:	61d3      	str	r3, [r2, #28]
 8001abe:	4b85      	ldr	r3, [pc, #532]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001ac0:	69db      	ldr	r3, [r3, #28]
 8001ac2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001ac6:	60bb      	str	r3, [r7, #8]
 8001ac8:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8001aca:	2301      	movs	r3, #1
 8001acc:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001ace:	4b82      	ldr	r3, [pc, #520]	; (8001cd8 <HAL_RCC_OscConfig+0x4c8>)
 8001ad0:	681b      	ldr	r3, [r3, #0]
 8001ad2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001ad6:	2b00      	cmp	r3, #0
 8001ad8:	d118      	bne.n	8001b0c <HAL_RCC_OscConfig+0x2fc>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8001ada:	4b7f      	ldr	r3, [pc, #508]	; (8001cd8 <HAL_RCC_OscConfig+0x4c8>)
 8001adc:	681b      	ldr	r3, [r3, #0]
 8001ade:	4a7e      	ldr	r2, [pc, #504]	; (8001cd8 <HAL_RCC_OscConfig+0x4c8>)
 8001ae0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001ae4:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8001ae6:	f7ff fba5 	bl	8001234 <HAL_GetTick>
 8001aea:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001aec:	e008      	b.n	8001b00 <HAL_RCC_OscConfig+0x2f0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8001aee:	f7ff fba1 	bl	8001234 <HAL_GetTick>
 8001af2:	4602      	mov	r2, r0
 8001af4:	693b      	ldr	r3, [r7, #16]
 8001af6:	1ad3      	subs	r3, r2, r3
 8001af8:	2b64      	cmp	r3, #100	; 0x64
 8001afa:	d901      	bls.n	8001b00 <HAL_RCC_OscConfig+0x2f0>
        {
          return HAL_TIMEOUT;
 8001afc:	2303      	movs	r3, #3
 8001afe:	e103      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001b00:	4b75      	ldr	r3, [pc, #468]	; (8001cd8 <HAL_RCC_OscConfig+0x4c8>)
 8001b02:	681b      	ldr	r3, [r3, #0]
 8001b04:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001b08:	2b00      	cmp	r3, #0
 8001b0a:	d0f0      	beq.n	8001aee <HAL_RCC_OscConfig+0x2de>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001b0c:	687b      	ldr	r3, [r7, #4]
 8001b0e:	68db      	ldr	r3, [r3, #12]
 8001b10:	2b01      	cmp	r3, #1
 8001b12:	d106      	bne.n	8001b22 <HAL_RCC_OscConfig+0x312>
 8001b14:	4b6f      	ldr	r3, [pc, #444]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001b16:	6a1b      	ldr	r3, [r3, #32]
 8001b18:	4a6e      	ldr	r2, [pc, #440]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001b1a:	f043 0301 	orr.w	r3, r3, #1
 8001b1e:	6213      	str	r3, [r2, #32]
 8001b20:	e02d      	b.n	8001b7e <HAL_RCC_OscConfig+0x36e>
 8001b22:	687b      	ldr	r3, [r7, #4]
 8001b24:	68db      	ldr	r3, [r3, #12]
 8001b26:	2b00      	cmp	r3, #0
 8001b28:	d10c      	bne.n	8001b44 <HAL_RCC_OscConfig+0x334>
 8001b2a:	4b6a      	ldr	r3, [pc, #424]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001b2c:	6a1b      	ldr	r3, [r3, #32]
 8001b2e:	4a69      	ldr	r2, [pc, #420]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001b30:	f023 0301 	bic.w	r3, r3, #1
 8001b34:	6213      	str	r3, [r2, #32]
 8001b36:	4b67      	ldr	r3, [pc, #412]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001b38:	6a1b      	ldr	r3, [r3, #32]
 8001b3a:	4a66      	ldr	r2, [pc, #408]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001b3c:	f023 0304 	bic.w	r3, r3, #4
 8001b40:	6213      	str	r3, [r2, #32]
 8001b42:	e01c      	b.n	8001b7e <HAL_RCC_OscConfig+0x36e>
 8001b44:	687b      	ldr	r3, [r7, #4]
 8001b46:	68db      	ldr	r3, [r3, #12]
 8001b48:	2b05      	cmp	r3, #5
 8001b4a:	d10c      	bne.n	8001b66 <HAL_RCC_OscConfig+0x356>
 8001b4c:	4b61      	ldr	r3, [pc, #388]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001b4e:	6a1b      	ldr	r3, [r3, #32]
 8001b50:	4a60      	ldr	r2, [pc, #384]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001b52:	f043 0304 	orr.w	r3, r3, #4
 8001b56:	6213      	str	r3, [r2, #32]
 8001b58:	4b5e      	ldr	r3, [pc, #376]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001b5a:	6a1b      	ldr	r3, [r3, #32]
 8001b5c:	4a5d      	ldr	r2, [pc, #372]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001b5e:	f043 0301 	orr.w	r3, r3, #1
 8001b62:	6213      	str	r3, [r2, #32]
 8001b64:	e00b      	b.n	8001b7e <HAL_RCC_OscConfig+0x36e>
 8001b66:	4b5b      	ldr	r3, [pc, #364]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001b68:	6a1b      	ldr	r3, [r3, #32]
 8001b6a:	4a5a      	ldr	r2, [pc, #360]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001b6c:	f023 0301 	bic.w	r3, r3, #1
 8001b70:	6213      	str	r3, [r2, #32]
 8001b72:	4b58      	ldr	r3, [pc, #352]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001b74:	6a1b      	ldr	r3, [r3, #32]
 8001b76:	4a57      	ldr	r2, [pc, #348]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001b78:	f023 0304 	bic.w	r3, r3, #4
 8001b7c:	6213      	str	r3, [r2, #32]
    /* Check the LSE State */
    if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8001b7e:	687b      	ldr	r3, [r7, #4]
 8001b80:	68db      	ldr	r3, [r3, #12]
 8001b82:	2b00      	cmp	r3, #0
 8001b84:	d015      	beq.n	8001bb2 <HAL_RCC_OscConfig+0x3a2>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001b86:	f7ff fb55 	bl	8001234 <HAL_GetTick>
 8001b8a:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001b8c:	e00a      	b.n	8001ba4 <HAL_RCC_OscConfig+0x394>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001b8e:	f7ff fb51 	bl	8001234 <HAL_GetTick>
 8001b92:	4602      	mov	r2, r0
 8001b94:	693b      	ldr	r3, [r7, #16]
 8001b96:	1ad3      	subs	r3, r2, r3
 8001b98:	f241 3288 	movw	r2, #5000	; 0x1388
 8001b9c:	4293      	cmp	r3, r2
 8001b9e:	d901      	bls.n	8001ba4 <HAL_RCC_OscConfig+0x394>
        {
          return HAL_TIMEOUT;
 8001ba0:	2303      	movs	r3, #3
 8001ba2:	e0b1      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001ba4:	4b4b      	ldr	r3, [pc, #300]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001ba6:	6a1b      	ldr	r3, [r3, #32]
 8001ba8:	f003 0302 	and.w	r3, r3, #2
 8001bac:	2b00      	cmp	r3, #0
 8001bae:	d0ee      	beq.n	8001b8e <HAL_RCC_OscConfig+0x37e>
 8001bb0:	e014      	b.n	8001bdc <HAL_RCC_OscConfig+0x3cc>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001bb2:	f7ff fb3f 	bl	8001234 <HAL_GetTick>
 8001bb6:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001bb8:	e00a      	b.n	8001bd0 <HAL_RCC_OscConfig+0x3c0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001bba:	f7ff fb3b 	bl	8001234 <HAL_GetTick>
 8001bbe:	4602      	mov	r2, r0
 8001bc0:	693b      	ldr	r3, [r7, #16]
 8001bc2:	1ad3      	subs	r3, r2, r3
 8001bc4:	f241 3288 	movw	r2, #5000	; 0x1388
 8001bc8:	4293      	cmp	r3, r2
 8001bca:	d901      	bls.n	8001bd0 <HAL_RCC_OscConfig+0x3c0>
        {
          return HAL_TIMEOUT;
 8001bcc:	2303      	movs	r3, #3
 8001bce:	e09b      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001bd0:	4b40      	ldr	r3, [pc, #256]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001bd2:	6a1b      	ldr	r3, [r3, #32]
 8001bd4:	f003 0302 	and.w	r3, r3, #2
 8001bd8:	2b00      	cmp	r3, #0
 8001bda:	d1ee      	bne.n	8001bba <HAL_RCC_OscConfig+0x3aa>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if (pwrclkchanged == SET)
 8001bdc:	7dfb      	ldrb	r3, [r7, #23]
 8001bde:	2b01      	cmp	r3, #1
 8001be0:	d105      	bne.n	8001bee <HAL_RCC_OscConfig+0x3de>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8001be2:	4b3c      	ldr	r3, [pc, #240]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001be4:	69db      	ldr	r3, [r3, #28]
 8001be6:	4a3b      	ldr	r2, [pc, #236]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001be8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001bec:	61d3      	str	r3, [r2, #28]

#endif /* RCC_CR_PLL2ON */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	69db      	ldr	r3, [r3, #28]
 8001bf2:	2b00      	cmp	r3, #0
 8001bf4:	f000 8087 	beq.w	8001d06 <HAL_RCC_OscConfig+0x4f6>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8001bf8:	4b36      	ldr	r3, [pc, #216]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001bfa:	685b      	ldr	r3, [r3, #4]
 8001bfc:	f003 030c 	and.w	r3, r3, #12
 8001c00:	2b08      	cmp	r3, #8
 8001c02:	d061      	beq.n	8001cc8 <HAL_RCC_OscConfig+0x4b8>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001c04:	687b      	ldr	r3, [r7, #4]
 8001c06:	69db      	ldr	r3, [r3, #28]
 8001c08:	2b02      	cmp	r3, #2
 8001c0a:	d146      	bne.n	8001c9a <HAL_RCC_OscConfig+0x48a>
        /* Check the parameters */
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001c0c:	4b33      	ldr	r3, [pc, #204]	; (8001cdc <HAL_RCC_OscConfig+0x4cc>)
 8001c0e:	2200      	movs	r2, #0
 8001c10:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001c12:	f7ff fb0f 	bl	8001234 <HAL_GetTick>
 8001c16:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001c18:	e008      	b.n	8001c2c <HAL_RCC_OscConfig+0x41c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001c1a:	f7ff fb0b 	bl	8001234 <HAL_GetTick>
 8001c1e:	4602      	mov	r2, r0
 8001c20:	693b      	ldr	r3, [r7, #16]
 8001c22:	1ad3      	subs	r3, r2, r3
 8001c24:	2b02      	cmp	r3, #2
 8001c26:	d901      	bls.n	8001c2c <HAL_RCC_OscConfig+0x41c>
          {
            return HAL_TIMEOUT;
 8001c28:	2303      	movs	r3, #3
 8001c2a:	e06d      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001c2c:	4b29      	ldr	r3, [pc, #164]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001c2e:	681b      	ldr	r3, [r3, #0]
 8001c30:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001c34:	2b00      	cmp	r3, #0
 8001c36:	d1f0      	bne.n	8001c1a <HAL_RCC_OscConfig+0x40a>
          }
        }

        /* Configure the HSE prediv factor --------------------------------*/
        /* It can be written only when the PLL is disabled. Not used in PLL source is different than HSE */
        if (RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	6a1b      	ldr	r3, [r3, #32]
 8001c3c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001c40:	d108      	bne.n	8001c54 <HAL_RCC_OscConfig+0x444>
          /* Set PREDIV1 source */
          SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
#endif /* RCC_CFGR2_PREDIV1SRC */

          /* Set PREDIV1 Value */
          __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 8001c42:	4b24      	ldr	r3, [pc, #144]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001c44:	685b      	ldr	r3, [r3, #4]
 8001c46:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	689b      	ldr	r3, [r3, #8]
 8001c4e:	4921      	ldr	r1, [pc, #132]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001c50:	4313      	orrs	r3, r2
 8001c52:	604b      	str	r3, [r1, #4]
        }

        /* Configure the main PLL clock source and multiplication factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8001c54:	4b1f      	ldr	r3, [pc, #124]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001c56:	685b      	ldr	r3, [r3, #4]
 8001c58:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	6a19      	ldr	r1, [r3, #32]
 8001c60:	687b      	ldr	r3, [r7, #4]
 8001c62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001c64:	430b      	orrs	r3, r1
 8001c66:	491b      	ldr	r1, [pc, #108]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001c68:	4313      	orrs	r3, r2
 8001c6a:	604b      	str	r3, [r1, #4]
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8001c6c:	4b1b      	ldr	r3, [pc, #108]	; (8001cdc <HAL_RCC_OscConfig+0x4cc>)
 8001c6e:	2201      	movs	r2, #1
 8001c70:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001c72:	f7ff fadf 	bl	8001234 <HAL_GetTick>
 8001c76:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8001c78:	e008      	b.n	8001c8c <HAL_RCC_OscConfig+0x47c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001c7a:	f7ff fadb 	bl	8001234 <HAL_GetTick>
 8001c7e:	4602      	mov	r2, r0
 8001c80:	693b      	ldr	r3, [r7, #16]
 8001c82:	1ad3      	subs	r3, r2, r3
 8001c84:	2b02      	cmp	r3, #2
 8001c86:	d901      	bls.n	8001c8c <HAL_RCC_OscConfig+0x47c>
          {
            return HAL_TIMEOUT;
 8001c88:	2303      	movs	r3, #3
 8001c8a:	e03d      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8001c8c:	4b11      	ldr	r3, [pc, #68]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001c8e:	681b      	ldr	r3, [r3, #0]
 8001c90:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001c94:	2b00      	cmp	r3, #0
 8001c96:	d0f0      	beq.n	8001c7a <HAL_RCC_OscConfig+0x46a>
 8001c98:	e035      	b.n	8001d06 <HAL_RCC_OscConfig+0x4f6>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001c9a:	4b10      	ldr	r3, [pc, #64]	; (8001cdc <HAL_RCC_OscConfig+0x4cc>)
 8001c9c:	2200      	movs	r2, #0
 8001c9e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001ca0:	f7ff fac8 	bl	8001234 <HAL_GetTick>
 8001ca4:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001ca6:	e008      	b.n	8001cba <HAL_RCC_OscConfig+0x4aa>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001ca8:	f7ff fac4 	bl	8001234 <HAL_GetTick>
 8001cac:	4602      	mov	r2, r0
 8001cae:	693b      	ldr	r3, [r7, #16]
 8001cb0:	1ad3      	subs	r3, r2, r3
 8001cb2:	2b02      	cmp	r3, #2
 8001cb4:	d901      	bls.n	8001cba <HAL_RCC_OscConfig+0x4aa>
          {
            return HAL_TIMEOUT;
 8001cb6:	2303      	movs	r3, #3
 8001cb8:	e026      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001cba:	4b06      	ldr	r3, [pc, #24]	; (8001cd4 <HAL_RCC_OscConfig+0x4c4>)
 8001cbc:	681b      	ldr	r3, [r3, #0]
 8001cbe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001cc2:	2b00      	cmp	r3, #0
 8001cc4:	d1f0      	bne.n	8001ca8 <HAL_RCC_OscConfig+0x498>
 8001cc6:	e01e      	b.n	8001d06 <HAL_RCC_OscConfig+0x4f6>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	69db      	ldr	r3, [r3, #28]
 8001ccc:	2b01      	cmp	r3, #1
 8001cce:	d107      	bne.n	8001ce0 <HAL_RCC_OscConfig+0x4d0>
      {
        return HAL_ERROR;
 8001cd0:	2301      	movs	r3, #1
 8001cd2:	e019      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
 8001cd4:	40021000 	.word	0x40021000
 8001cd8:	40007000 	.word	0x40007000
 8001cdc:	42420060 	.word	0x42420060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8001ce0:	4b0b      	ldr	r3, [pc, #44]	; (8001d10 <HAL_RCC_OscConfig+0x500>)
 8001ce2:	685b      	ldr	r3, [r3, #4]
 8001ce4:	60fb      	str	r3, [r7, #12]
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001ce6:	68fb      	ldr	r3, [r7, #12]
 8001ce8:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	6a1b      	ldr	r3, [r3, #32]
 8001cf0:	429a      	cmp	r2, r3
 8001cf2:	d106      	bne.n	8001d02 <HAL_RCC_OscConfig+0x4f2>
            (READ_BIT(pll_config, RCC_CFGR_PLLMULL) != RCC_OscInitStruct->PLL.PLLMUL))
 8001cf4:	68fb      	ldr	r3, [r7, #12]
 8001cf6:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001cfa:	687b      	ldr	r3, [r7, #4]
 8001cfc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001cfe:	429a      	cmp	r2, r3
 8001d00:	d001      	beq.n	8001d06 <HAL_RCC_OscConfig+0x4f6>
        {
          return HAL_ERROR;
 8001d02:	2301      	movs	r3, #1
 8001d04:	e000      	b.n	8001d08 <HAL_RCC_OscConfig+0x4f8>
        }
      }
    }
  }

  return HAL_OK;
 8001d06:	2300      	movs	r3, #0
}
 8001d08:	4618      	mov	r0, r3
 8001d0a:	3718      	adds	r7, #24
 8001d0c:	46bd      	mov	sp, r7
 8001d0e:	bd80      	pop	{r7, pc}
 8001d10:	40021000 	.word	0x40021000

08001d14 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8001d14:	b580      	push	{r7, lr}
 8001d16:	b084      	sub	sp, #16
 8001d18:	af00      	add	r7, sp, #0
 8001d1a:	6078      	str	r0, [r7, #4]
 8001d1c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	2b00      	cmp	r3, #0
 8001d22:	d101      	bne.n	8001d28 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8001d24:	2301      	movs	r3, #1
 8001d26:	e0d0      	b.n	8001eca <HAL_RCC_ClockConfig+0x1b6>
  must be correctly programmed according to the frequency of the CPU clock
    (HCLK) of the device. */

#if defined(FLASH_ACR_LATENCY)
  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8001d28:	4b6a      	ldr	r3, [pc, #424]	; (8001ed4 <HAL_RCC_ClockConfig+0x1c0>)
 8001d2a:	681b      	ldr	r3, [r3, #0]
 8001d2c:	f003 0307 	and.w	r3, r3, #7
 8001d30:	683a      	ldr	r2, [r7, #0]
 8001d32:	429a      	cmp	r2, r3
 8001d34:	d910      	bls.n	8001d58 <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001d36:	4b67      	ldr	r3, [pc, #412]	; (8001ed4 <HAL_RCC_ClockConfig+0x1c0>)
 8001d38:	681b      	ldr	r3, [r3, #0]
 8001d3a:	f023 0207 	bic.w	r2, r3, #7
 8001d3e:	4965      	ldr	r1, [pc, #404]	; (8001ed4 <HAL_RCC_ClockConfig+0x1c0>)
 8001d40:	683b      	ldr	r3, [r7, #0]
 8001d42:	4313      	orrs	r3, r2
 8001d44:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001d46:	4b63      	ldr	r3, [pc, #396]	; (8001ed4 <HAL_RCC_ClockConfig+0x1c0>)
 8001d48:	681b      	ldr	r3, [r3, #0]
 8001d4a:	f003 0307 	and.w	r3, r3, #7
 8001d4e:	683a      	ldr	r2, [r7, #0]
 8001d50:	429a      	cmp	r2, r3
 8001d52:	d001      	beq.n	8001d58 <HAL_RCC_ClockConfig+0x44>
  {
    return HAL_ERROR;
 8001d54:	2301      	movs	r3, #1
 8001d56:	e0b8      	b.n	8001eca <HAL_RCC_ClockConfig+0x1b6>
  }
}

#endif /* FLASH_ACR_LATENCY */
/*-------------------------- HCLK Configuration --------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8001d58:	687b      	ldr	r3, [r7, #4]
 8001d5a:	681b      	ldr	r3, [r3, #0]
 8001d5c:	f003 0302 	and.w	r3, r3, #2
 8001d60:	2b00      	cmp	r3, #0
 8001d62:	d020      	beq.n	8001da6 <HAL_RCC_ClockConfig+0x92>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
    a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001d64:	687b      	ldr	r3, [r7, #4]
 8001d66:	681b      	ldr	r3, [r3, #0]
 8001d68:	f003 0304 	and.w	r3, r3, #4
 8001d6c:	2b00      	cmp	r3, #0
 8001d6e:	d005      	beq.n	8001d7c <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8001d70:	4b59      	ldr	r3, [pc, #356]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001d72:	685b      	ldr	r3, [r3, #4]
 8001d74:	4a58      	ldr	r2, [pc, #352]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001d76:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001d7a:	6053      	str	r3, [r2, #4]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001d7c:	687b      	ldr	r3, [r7, #4]
 8001d7e:	681b      	ldr	r3, [r3, #0]
 8001d80:	f003 0308 	and.w	r3, r3, #8
 8001d84:	2b00      	cmp	r3, #0
 8001d86:	d005      	beq.n	8001d94 <HAL_RCC_ClockConfig+0x80>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8001d88:	4b53      	ldr	r3, [pc, #332]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001d8a:	685b      	ldr	r3, [r3, #4]
 8001d8c:	4a52      	ldr	r2, [pc, #328]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001d8e:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001d92:	6053      	str	r3, [r2, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001d94:	4b50      	ldr	r3, [pc, #320]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001d96:	685b      	ldr	r3, [r3, #4]
 8001d98:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001d9c:	687b      	ldr	r3, [r7, #4]
 8001d9e:	689b      	ldr	r3, [r3, #8]
 8001da0:	494d      	ldr	r1, [pc, #308]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001da2:	4313      	orrs	r3, r2
 8001da4:	604b      	str	r3, [r1, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001da6:	687b      	ldr	r3, [r7, #4]
 8001da8:	681b      	ldr	r3, [r3, #0]
 8001daa:	f003 0301 	and.w	r3, r3, #1
 8001dae:	2b00      	cmp	r3, #0
 8001db0:	d040      	beq.n	8001e34 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001db2:	687b      	ldr	r3, [r7, #4]
 8001db4:	685b      	ldr	r3, [r3, #4]
 8001db6:	2b01      	cmp	r3, #1
 8001db8:	d107      	bne.n	8001dca <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001dba:	4b47      	ldr	r3, [pc, #284]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001dbc:	681b      	ldr	r3, [r3, #0]
 8001dbe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001dc2:	2b00      	cmp	r3, #0
 8001dc4:	d115      	bne.n	8001df2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001dc6:	2301      	movs	r3, #1
 8001dc8:	e07f      	b.n	8001eca <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8001dca:	687b      	ldr	r3, [r7, #4]
 8001dcc:	685b      	ldr	r3, [r3, #4]
 8001dce:	2b02      	cmp	r3, #2
 8001dd0:	d107      	bne.n	8001de2 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001dd2:	4b41      	ldr	r3, [pc, #260]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001dd4:	681b      	ldr	r3, [r3, #0]
 8001dd6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001dda:	2b00      	cmp	r3, #0
 8001ddc:	d109      	bne.n	8001df2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001dde:	2301      	movs	r3, #1
 8001de0:	e073      	b.n	8001eca <HAL_RCC_ClockConfig+0x1b6>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001de2:	4b3d      	ldr	r3, [pc, #244]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001de4:	681b      	ldr	r3, [r3, #0]
 8001de6:	f003 0302 	and.w	r3, r3, #2
 8001dea:	2b00      	cmp	r3, #0
 8001dec:	d101      	bne.n	8001df2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001dee:	2301      	movs	r3, #1
 8001df0:	e06b      	b.n	8001eca <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001df2:	4b39      	ldr	r3, [pc, #228]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001df4:	685b      	ldr	r3, [r3, #4]
 8001df6:	f023 0203 	bic.w	r2, r3, #3
 8001dfa:	687b      	ldr	r3, [r7, #4]
 8001dfc:	685b      	ldr	r3, [r3, #4]
 8001dfe:	4936      	ldr	r1, [pc, #216]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001e00:	4313      	orrs	r3, r2
 8001e02:	604b      	str	r3, [r1, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8001e04:	f7ff fa16 	bl	8001234 <HAL_GetTick>
 8001e08:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001e0a:	e00a      	b.n	8001e22 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001e0c:	f7ff fa12 	bl	8001234 <HAL_GetTick>
 8001e10:	4602      	mov	r2, r0
 8001e12:	68fb      	ldr	r3, [r7, #12]
 8001e14:	1ad3      	subs	r3, r2, r3
 8001e16:	f241 3288 	movw	r2, #5000	; 0x1388
 8001e1a:	4293      	cmp	r3, r2
 8001e1c:	d901      	bls.n	8001e22 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8001e1e:	2303      	movs	r3, #3
 8001e20:	e053      	b.n	8001eca <HAL_RCC_ClockConfig+0x1b6>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001e22:	4b2d      	ldr	r3, [pc, #180]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001e24:	685b      	ldr	r3, [r3, #4]
 8001e26:	f003 020c 	and.w	r2, r3, #12
 8001e2a:	687b      	ldr	r3, [r7, #4]
 8001e2c:	685b      	ldr	r3, [r3, #4]
 8001e2e:	009b      	lsls	r3, r3, #2
 8001e30:	429a      	cmp	r2, r3
 8001e32:	d1eb      	bne.n	8001e0c <HAL_RCC_ClockConfig+0xf8>
    }
  }

#if defined(FLASH_ACR_LATENCY)
  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8001e34:	4b27      	ldr	r3, [pc, #156]	; (8001ed4 <HAL_RCC_ClockConfig+0x1c0>)
 8001e36:	681b      	ldr	r3, [r3, #0]
 8001e38:	f003 0307 	and.w	r3, r3, #7
 8001e3c:	683a      	ldr	r2, [r7, #0]
 8001e3e:	429a      	cmp	r2, r3
 8001e40:	d210      	bcs.n	8001e64 <HAL_RCC_ClockConfig+0x150>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001e42:	4b24      	ldr	r3, [pc, #144]	; (8001ed4 <HAL_RCC_ClockConfig+0x1c0>)
 8001e44:	681b      	ldr	r3, [r3, #0]
 8001e46:	f023 0207 	bic.w	r2, r3, #7
 8001e4a:	4922      	ldr	r1, [pc, #136]	; (8001ed4 <HAL_RCC_ClockConfig+0x1c0>)
 8001e4c:	683b      	ldr	r3, [r7, #0]
 8001e4e:	4313      	orrs	r3, r2
 8001e50:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001e52:	4b20      	ldr	r3, [pc, #128]	; (8001ed4 <HAL_RCC_ClockConfig+0x1c0>)
 8001e54:	681b      	ldr	r3, [r3, #0]
 8001e56:	f003 0307 	and.w	r3, r3, #7
 8001e5a:	683a      	ldr	r2, [r7, #0]
 8001e5c:	429a      	cmp	r2, r3
 8001e5e:	d001      	beq.n	8001e64 <HAL_RCC_ClockConfig+0x150>
  {
    return HAL_ERROR;
 8001e60:	2301      	movs	r3, #1
 8001e62:	e032      	b.n	8001eca <HAL_RCC_ClockConfig+0x1b6>
  }
}
#endif /* FLASH_ACR_LATENCY */

/*-------------------------- PCLK1 Configuration ---------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001e64:	687b      	ldr	r3, [r7, #4]
 8001e66:	681b      	ldr	r3, [r3, #0]
 8001e68:	f003 0304 	and.w	r3, r3, #4
 8001e6c:	2b00      	cmp	r3, #0
 8001e6e:	d008      	beq.n	8001e82 <HAL_RCC_ClockConfig+0x16e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8001e70:	4b19      	ldr	r3, [pc, #100]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001e72:	685b      	ldr	r3, [r3, #4]
 8001e74:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001e78:	687b      	ldr	r3, [r7, #4]
 8001e7a:	68db      	ldr	r3, [r3, #12]
 8001e7c:	4916      	ldr	r1, [pc, #88]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001e7e:	4313      	orrs	r3, r2
 8001e80:	604b      	str	r3, [r1, #4]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001e82:	687b      	ldr	r3, [r7, #4]
 8001e84:	681b      	ldr	r3, [r3, #0]
 8001e86:	f003 0308 	and.w	r3, r3, #8
 8001e8a:	2b00      	cmp	r3, #0
 8001e8c:	d009      	beq.n	8001ea2 <HAL_RCC_ClockConfig+0x18e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8001e8e:	4b12      	ldr	r3, [pc, #72]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001e90:	685b      	ldr	r3, [r3, #4]
 8001e92:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001e96:	687b      	ldr	r3, [r7, #4]
 8001e98:	691b      	ldr	r3, [r3, #16]
 8001e9a:	00db      	lsls	r3, r3, #3
 8001e9c:	490e      	ldr	r1, [pc, #56]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001e9e:	4313      	orrs	r3, r2
 8001ea0:	604b      	str	r3, [r1, #4]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8001ea2:	f000 f821 	bl	8001ee8 <HAL_RCC_GetSysClockFreq>
 8001ea6:	4602      	mov	r2, r0
 8001ea8:	4b0b      	ldr	r3, [pc, #44]	; (8001ed8 <HAL_RCC_ClockConfig+0x1c4>)
 8001eaa:	685b      	ldr	r3, [r3, #4]
 8001eac:	091b      	lsrs	r3, r3, #4
 8001eae:	f003 030f 	and.w	r3, r3, #15
 8001eb2:	490a      	ldr	r1, [pc, #40]	; (8001edc <HAL_RCC_ClockConfig+0x1c8>)
 8001eb4:	5ccb      	ldrb	r3, [r1, r3]
 8001eb6:	fa22 f303 	lsr.w	r3, r2, r3
 8001eba:	4a09      	ldr	r2, [pc, #36]	; (8001ee0 <HAL_RCC_ClockConfig+0x1cc>)
 8001ebc:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 8001ebe:	4b09      	ldr	r3, [pc, #36]	; (8001ee4 <HAL_RCC_ClockConfig+0x1d0>)
 8001ec0:	681b      	ldr	r3, [r3, #0]
 8001ec2:	4618      	mov	r0, r3
 8001ec4:	f7ff f974 	bl	80011b0 <HAL_InitTick>

  return HAL_OK;
 8001ec8:	2300      	movs	r3, #0
}
 8001eca:	4618      	mov	r0, r3
 8001ecc:	3710      	adds	r7, #16
 8001ece:	46bd      	mov	sp, r7
 8001ed0:	bd80      	pop	{r7, pc}
 8001ed2:	bf00      	nop
 8001ed4:	40022000 	.word	0x40022000
 8001ed8:	40021000 	.word	0x40021000
 8001edc:	080068d0 	.word	0x080068d0
 8001ee0:	20000000 	.word	0x20000000
 8001ee4:	20000004 	.word	0x20000004

08001ee8 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8001ee8:	b490      	push	{r4, r7}
 8001eea:	b08a      	sub	sp, #40	; 0x28
 8001eec:	af00      	add	r7, sp, #0
#if defined(RCC_CFGR2_PREDIV1SRC)
  const uint8_t aPLLMULFactorTable[14] = {0, 0, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 13};
  const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
#else
  const uint8_t aPLLMULFactorTable[16] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16};
 8001eee:	4b29      	ldr	r3, [pc, #164]	; (8001f94 <HAL_RCC_GetSysClockFreq+0xac>)
 8001ef0:	1d3c      	adds	r4, r7, #4
 8001ef2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001ef4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
#if defined(RCC_CFGR2_PREDIV1)
  const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
#else
  const uint8_t aPredivFactorTable[2] = {1, 2};
 8001ef8:	f240 2301 	movw	r3, #513	; 0x201
 8001efc:	803b      	strh	r3, [r7, #0]
#endif /*RCC_CFGR2_PREDIV1*/

#endif
  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8001efe:	2300      	movs	r3, #0
 8001f00:	61fb      	str	r3, [r7, #28]
 8001f02:	2300      	movs	r3, #0
 8001f04:	61bb      	str	r3, [r7, #24]
 8001f06:	2300      	movs	r3, #0
 8001f08:	627b      	str	r3, [r7, #36]	; 0x24
 8001f0a:	2300      	movs	r3, #0
 8001f0c:	617b      	str	r3, [r7, #20]
  uint32_t sysclockfreq = 0U;
 8001f0e:	2300      	movs	r3, #0
 8001f10:	623b      	str	r3, [r7, #32]
#if defined(RCC_CFGR2_PREDIV1SRC)
  uint32_t prediv2 = 0U, pll2mul = 0U;
#endif /*RCC_CFGR2_PREDIV1SRC*/

  tmpreg = RCC->CFGR;
 8001f12:	4b21      	ldr	r3, [pc, #132]	; (8001f98 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001f14:	685b      	ldr	r3, [r3, #4]
 8001f16:	61fb      	str	r3, [r7, #28]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8001f18:	69fb      	ldr	r3, [r7, #28]
 8001f1a:	f003 030c 	and.w	r3, r3, #12
 8001f1e:	2b04      	cmp	r3, #4
 8001f20:	d002      	beq.n	8001f28 <HAL_RCC_GetSysClockFreq+0x40>
 8001f22:	2b08      	cmp	r3, #8
 8001f24:	d003      	beq.n	8001f2e <HAL_RCC_GetSysClockFreq+0x46>
 8001f26:	e02b      	b.n	8001f80 <HAL_RCC_GetSysClockFreq+0x98>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8001f28:	4b1c      	ldr	r3, [pc, #112]	; (8001f9c <HAL_RCC_GetSysClockFreq+0xb4>)
 8001f2a:	623b      	str	r3, [r7, #32]
      break;
 8001f2c:	e02b      	b.n	8001f86 <HAL_RCC_GetSysClockFreq+0x9e>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
 8001f2e:	69fb      	ldr	r3, [r7, #28]
 8001f30:	0c9b      	lsrs	r3, r3, #18
 8001f32:	f003 030f 	and.w	r3, r3, #15
 8001f36:	3328      	adds	r3, #40	; 0x28
 8001f38:	443b      	add	r3, r7
 8001f3a:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8001f3e:	617b      	str	r3, [r7, #20]
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 8001f40:	69fb      	ldr	r3, [r7, #28]
 8001f42:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001f46:	2b00      	cmp	r3, #0
 8001f48:	d012      	beq.n	8001f70 <HAL_RCC_GetSysClockFreq+0x88>
      {
#if defined(RCC_CFGR2_PREDIV1)
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> RCC_CFGR2_PREDIV1_Pos];
#else
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_Pos];
 8001f4a:	4b13      	ldr	r3, [pc, #76]	; (8001f98 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001f4c:	685b      	ldr	r3, [r3, #4]
 8001f4e:	0c5b      	lsrs	r3, r3, #17
 8001f50:	f003 0301 	and.w	r3, r3, #1
 8001f54:	3328      	adds	r3, #40	; 0x28
 8001f56:	443b      	add	r3, r7
 8001f58:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001f5c:	61bb      	str	r3, [r7, #24]
        {
          pllclk = pllclk / 2;
        }
#else
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
        pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 8001f5e:	697b      	ldr	r3, [r7, #20]
 8001f60:	4a0e      	ldr	r2, [pc, #56]	; (8001f9c <HAL_RCC_GetSysClockFreq+0xb4>)
 8001f62:	fb03 f202 	mul.w	r2, r3, r2
 8001f66:	69bb      	ldr	r3, [r7, #24]
 8001f68:	fbb2 f3f3 	udiv	r3, r2, r3
 8001f6c:	627b      	str	r3, [r7, #36]	; 0x24
 8001f6e:	e004      	b.n	8001f7a <HAL_RCC_GetSysClockFreq+0x92>
#endif /*RCC_CFGR2_PREDIV1SRC*/
      }
      else
      {
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 8001f70:	697b      	ldr	r3, [r7, #20]
 8001f72:	4a0b      	ldr	r2, [pc, #44]	; (8001fa0 <HAL_RCC_GetSysClockFreq+0xb8>)
 8001f74:	fb02 f303 	mul.w	r3, r2, r3
 8001f78:	627b      	str	r3, [r7, #36]	; 0x24
      }
      sysclockfreq = pllclk;
 8001f7a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f7c:	623b      	str	r3, [r7, #32]
      break;
 8001f7e:	e002      	b.n	8001f86 <HAL_RCC_GetSysClockFreq+0x9e>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8001f80:	4b06      	ldr	r3, [pc, #24]	; (8001f9c <HAL_RCC_GetSysClockFreq+0xb4>)
 8001f82:	623b      	str	r3, [r7, #32]
      break;
 8001f84:	bf00      	nop
    }
  }
  return sysclockfreq;
 8001f86:	6a3b      	ldr	r3, [r7, #32]
}
 8001f88:	4618      	mov	r0, r3
 8001f8a:	3728      	adds	r7, #40	; 0x28
 8001f8c:	46bd      	mov	sp, r7
 8001f8e:	bc90      	pop	{r4, r7}
 8001f90:	4770      	bx	lr
 8001f92:	bf00      	nop
 8001f94:	080068c0 	.word	0x080068c0
 8001f98:	40021000 	.word	0x40021000
 8001f9c:	007a1200 	.word	0x007a1200
 8001fa0:	003d0900 	.word	0x003d0900

08001fa4 <RCC_Delay>:
  * @brief  This function provides delay (in milliseconds) based on CPU cycles method.
  * @param  mdelay: specifies the delay time length, in milliseconds.
  * @retval None
  */
static void RCC_Delay(uint32_t mdelay)
{
 8001fa4:	b480      	push	{r7}
 8001fa6:	b085      	sub	sp, #20
 8001fa8:	af00      	add	r7, sp, #0
 8001faa:	6078      	str	r0, [r7, #4]
  __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
 8001fac:	4b0a      	ldr	r3, [pc, #40]	; (8001fd8 <RCC_Delay+0x34>)
 8001fae:	681b      	ldr	r3, [r3, #0]
 8001fb0:	4a0a      	ldr	r2, [pc, #40]	; (8001fdc <RCC_Delay+0x38>)
 8001fb2:	fba2 2303 	umull	r2, r3, r2, r3
 8001fb6:	0a5b      	lsrs	r3, r3, #9
 8001fb8:	687a      	ldr	r2, [r7, #4]
 8001fba:	fb02 f303 	mul.w	r3, r2, r3
 8001fbe:	60fb      	str	r3, [r7, #12]
  do
  {
    __NOP();
 8001fc0:	bf00      	nop
  }
  while (Delay --);
 8001fc2:	68fb      	ldr	r3, [r7, #12]
 8001fc4:	1e5a      	subs	r2, r3, #1
 8001fc6:	60fa      	str	r2, [r7, #12]
 8001fc8:	2b00      	cmp	r3, #0
 8001fca:	d1f9      	bne.n	8001fc0 <RCC_Delay+0x1c>
}
 8001fcc:	bf00      	nop
 8001fce:	bf00      	nop
 8001fd0:	3714      	adds	r7, #20
 8001fd2:	46bd      	mov	sp, r7
 8001fd4:	bc80      	pop	{r7}
 8001fd6:	4770      	bx	lr
 8001fd8:	20000000 	.word	0x20000000
 8001fdc:	10624dd3 	.word	0x10624dd3

08001fe0 <__errno>:
 8001fe0:	4b01      	ldr	r3, [pc, #4]	; (8001fe8 <__errno+0x8>)
 8001fe2:	6818      	ldr	r0, [r3, #0]
 8001fe4:	4770      	bx	lr
 8001fe6:	bf00      	nop
 8001fe8:	2000000c 	.word	0x2000000c

08001fec <__libc_init_array>:
 8001fec:	b570      	push	{r4, r5, r6, lr}
 8001fee:	2600      	movs	r6, #0
 8001ff0:	4d0c      	ldr	r5, [pc, #48]	; (8002024 <__libc_init_array+0x38>)
 8001ff2:	4c0d      	ldr	r4, [pc, #52]	; (8002028 <__libc_init_array+0x3c>)
 8001ff4:	1b64      	subs	r4, r4, r5
 8001ff6:	10a4      	asrs	r4, r4, #2
 8001ff8:	42a6      	cmp	r6, r4
 8001ffa:	d109      	bne.n	8002010 <__libc_init_array+0x24>
 8001ffc:	f004 fc52 	bl	80068a4 <_init>
 8002000:	2600      	movs	r6, #0
 8002002:	4d0a      	ldr	r5, [pc, #40]	; (800202c <__libc_init_array+0x40>)
 8002004:	4c0a      	ldr	r4, [pc, #40]	; (8002030 <__libc_init_array+0x44>)
 8002006:	1b64      	subs	r4, r4, r5
 8002008:	10a4      	asrs	r4, r4, #2
 800200a:	42a6      	cmp	r6, r4
 800200c:	d105      	bne.n	800201a <__libc_init_array+0x2e>
 800200e:	bd70      	pop	{r4, r5, r6, pc}
 8002010:	f855 3b04 	ldr.w	r3, [r5], #4
 8002014:	4798      	blx	r3
 8002016:	3601      	adds	r6, #1
 8002018:	e7ee      	b.n	8001ff8 <__libc_init_array+0xc>
 800201a:	f855 3b04 	ldr.w	r3, [r5], #4
 800201e:	4798      	blx	r3
 8002020:	3601      	adds	r6, #1
 8002022:	e7f2      	b.n	800200a <__libc_init_array+0x1e>
 8002024:	08006d84 	.word	0x08006d84
 8002028:	08006d84 	.word	0x08006d84
 800202c:	08006d84 	.word	0x08006d84
 8002030:	08006d88 	.word	0x08006d88

08002034 <memset>:
 8002034:	4603      	mov	r3, r0
 8002036:	4402      	add	r2, r0
 8002038:	4293      	cmp	r3, r2
 800203a:	d100      	bne.n	800203e <memset+0xa>
 800203c:	4770      	bx	lr
 800203e:	f803 1b01 	strb.w	r1, [r3], #1
 8002042:	e7f9      	b.n	8002038 <memset+0x4>

08002044 <__cvt>:
 8002044:	2b00      	cmp	r3, #0
 8002046:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800204a:	461f      	mov	r7, r3
 800204c:	bfbb      	ittet	lt
 800204e:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8002052:	461f      	movlt	r7, r3
 8002054:	2300      	movge	r3, #0
 8002056:	232d      	movlt	r3, #45	; 0x2d
 8002058:	b088      	sub	sp, #32
 800205a:	4614      	mov	r4, r2
 800205c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800205e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8002060:	7013      	strb	r3, [r2, #0]
 8002062:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8002064:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 8002068:	f023 0820 	bic.w	r8, r3, #32
 800206c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8002070:	d005      	beq.n	800207e <__cvt+0x3a>
 8002072:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8002076:	d100      	bne.n	800207a <__cvt+0x36>
 8002078:	3501      	adds	r5, #1
 800207a:	2302      	movs	r3, #2
 800207c:	e000      	b.n	8002080 <__cvt+0x3c>
 800207e:	2303      	movs	r3, #3
 8002080:	aa07      	add	r2, sp, #28
 8002082:	9204      	str	r2, [sp, #16]
 8002084:	aa06      	add	r2, sp, #24
 8002086:	e9cd a202 	strd	sl, r2, [sp, #8]
 800208a:	e9cd 3500 	strd	r3, r5, [sp]
 800208e:	4622      	mov	r2, r4
 8002090:	463b      	mov	r3, r7
 8002092:	f001 fd85 	bl	8003ba0 <_dtoa_r>
 8002096:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800209a:	4606      	mov	r6, r0
 800209c:	d102      	bne.n	80020a4 <__cvt+0x60>
 800209e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80020a0:	07db      	lsls	r3, r3, #31
 80020a2:	d522      	bpl.n	80020ea <__cvt+0xa6>
 80020a4:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80020a8:	eb06 0905 	add.w	r9, r6, r5
 80020ac:	d110      	bne.n	80020d0 <__cvt+0x8c>
 80020ae:	7833      	ldrb	r3, [r6, #0]
 80020b0:	2b30      	cmp	r3, #48	; 0x30
 80020b2:	d10a      	bne.n	80020ca <__cvt+0x86>
 80020b4:	2200      	movs	r2, #0
 80020b6:	2300      	movs	r3, #0
 80020b8:	4620      	mov	r0, r4
 80020ba:	4639      	mov	r1, r7
 80020bc:	f7fe fce0 	bl	8000a80 <__aeabi_dcmpeq>
 80020c0:	b918      	cbnz	r0, 80020ca <__cvt+0x86>
 80020c2:	f1c5 0501 	rsb	r5, r5, #1
 80020c6:	f8ca 5000 	str.w	r5, [sl]
 80020ca:	f8da 3000 	ldr.w	r3, [sl]
 80020ce:	4499      	add	r9, r3
 80020d0:	2200      	movs	r2, #0
 80020d2:	2300      	movs	r3, #0
 80020d4:	4620      	mov	r0, r4
 80020d6:	4639      	mov	r1, r7
 80020d8:	f7fe fcd2 	bl	8000a80 <__aeabi_dcmpeq>
 80020dc:	b108      	cbz	r0, 80020e2 <__cvt+0x9e>
 80020de:	f8cd 901c 	str.w	r9, [sp, #28]
 80020e2:	2230      	movs	r2, #48	; 0x30
 80020e4:	9b07      	ldr	r3, [sp, #28]
 80020e6:	454b      	cmp	r3, r9
 80020e8:	d307      	bcc.n	80020fa <__cvt+0xb6>
 80020ea:	4630      	mov	r0, r6
 80020ec:	9b07      	ldr	r3, [sp, #28]
 80020ee:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80020f0:	1b9b      	subs	r3, r3, r6
 80020f2:	6013      	str	r3, [r2, #0]
 80020f4:	b008      	add	sp, #32
 80020f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80020fa:	1c59      	adds	r1, r3, #1
 80020fc:	9107      	str	r1, [sp, #28]
 80020fe:	701a      	strb	r2, [r3, #0]
 8002100:	e7f0      	b.n	80020e4 <__cvt+0xa0>

08002102 <__exponent>:
 8002102:	4603      	mov	r3, r0
 8002104:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002106:	2900      	cmp	r1, #0
 8002108:	f803 2b02 	strb.w	r2, [r3], #2
 800210c:	bfb6      	itet	lt
 800210e:	222d      	movlt	r2, #45	; 0x2d
 8002110:	222b      	movge	r2, #43	; 0x2b
 8002112:	4249      	neglt	r1, r1
 8002114:	2909      	cmp	r1, #9
 8002116:	7042      	strb	r2, [r0, #1]
 8002118:	dd2b      	ble.n	8002172 <__exponent+0x70>
 800211a:	f10d 0407 	add.w	r4, sp, #7
 800211e:	46a4      	mov	ip, r4
 8002120:	270a      	movs	r7, #10
 8002122:	fb91 f6f7 	sdiv	r6, r1, r7
 8002126:	460a      	mov	r2, r1
 8002128:	46a6      	mov	lr, r4
 800212a:	fb07 1516 	mls	r5, r7, r6, r1
 800212e:	2a63      	cmp	r2, #99	; 0x63
 8002130:	f105 0530 	add.w	r5, r5, #48	; 0x30
 8002134:	4631      	mov	r1, r6
 8002136:	f104 34ff 	add.w	r4, r4, #4294967295
 800213a:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800213e:	dcf0      	bgt.n	8002122 <__exponent+0x20>
 8002140:	3130      	adds	r1, #48	; 0x30
 8002142:	f1ae 0502 	sub.w	r5, lr, #2
 8002146:	f804 1c01 	strb.w	r1, [r4, #-1]
 800214a:	4629      	mov	r1, r5
 800214c:	1c44      	adds	r4, r0, #1
 800214e:	4561      	cmp	r1, ip
 8002150:	d30a      	bcc.n	8002168 <__exponent+0x66>
 8002152:	f10d 0209 	add.w	r2, sp, #9
 8002156:	eba2 020e 	sub.w	r2, r2, lr
 800215a:	4565      	cmp	r5, ip
 800215c:	bf88      	it	hi
 800215e:	2200      	movhi	r2, #0
 8002160:	4413      	add	r3, r2
 8002162:	1a18      	subs	r0, r3, r0
 8002164:	b003      	add	sp, #12
 8002166:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002168:	f811 2b01 	ldrb.w	r2, [r1], #1
 800216c:	f804 2f01 	strb.w	r2, [r4, #1]!
 8002170:	e7ed      	b.n	800214e <__exponent+0x4c>
 8002172:	2330      	movs	r3, #48	; 0x30
 8002174:	3130      	adds	r1, #48	; 0x30
 8002176:	7083      	strb	r3, [r0, #2]
 8002178:	70c1      	strb	r1, [r0, #3]
 800217a:	1d03      	adds	r3, r0, #4
 800217c:	e7f1      	b.n	8002162 <__exponent+0x60>
	...

08002180 <_printf_float>:
 8002180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002184:	b091      	sub	sp, #68	; 0x44
 8002186:	460c      	mov	r4, r1
 8002188:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 800218c:	4616      	mov	r6, r2
 800218e:	461f      	mov	r7, r3
 8002190:	4605      	mov	r5, r0
 8002192:	f002 fe59 	bl	8004e48 <_localeconv_r>
 8002196:	6803      	ldr	r3, [r0, #0]
 8002198:	4618      	mov	r0, r3
 800219a:	9309      	str	r3, [sp, #36]	; 0x24
 800219c:	f7fe f844 	bl	8000228 <strlen>
 80021a0:	2300      	movs	r3, #0
 80021a2:	930e      	str	r3, [sp, #56]	; 0x38
 80021a4:	f8d8 3000 	ldr.w	r3, [r8]
 80021a8:	900a      	str	r0, [sp, #40]	; 0x28
 80021aa:	3307      	adds	r3, #7
 80021ac:	f023 0307 	bic.w	r3, r3, #7
 80021b0:	f103 0208 	add.w	r2, r3, #8
 80021b4:	f894 9018 	ldrb.w	r9, [r4, #24]
 80021b8:	f8d4 b000 	ldr.w	fp, [r4]
 80021bc:	f8c8 2000 	str.w	r2, [r8]
 80021c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021c4:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80021c8:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 80021cc:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 80021d0:	930b      	str	r3, [sp, #44]	; 0x2c
 80021d2:	f04f 32ff 	mov.w	r2, #4294967295
 80021d6:	4640      	mov	r0, r8
 80021d8:	4b9c      	ldr	r3, [pc, #624]	; (800244c <_printf_float+0x2cc>)
 80021da:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80021dc:	f7fe fc82 	bl	8000ae4 <__aeabi_dcmpun>
 80021e0:	bb70      	cbnz	r0, 8002240 <_printf_float+0xc0>
 80021e2:	f04f 32ff 	mov.w	r2, #4294967295
 80021e6:	4640      	mov	r0, r8
 80021e8:	4b98      	ldr	r3, [pc, #608]	; (800244c <_printf_float+0x2cc>)
 80021ea:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80021ec:	f7fe fc5c 	bl	8000aa8 <__aeabi_dcmple>
 80021f0:	bb30      	cbnz	r0, 8002240 <_printf_float+0xc0>
 80021f2:	2200      	movs	r2, #0
 80021f4:	2300      	movs	r3, #0
 80021f6:	4640      	mov	r0, r8
 80021f8:	4651      	mov	r1, sl
 80021fa:	f7fe fc4b 	bl	8000a94 <__aeabi_dcmplt>
 80021fe:	b110      	cbz	r0, 8002206 <_printf_float+0x86>
 8002200:	232d      	movs	r3, #45	; 0x2d
 8002202:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002206:	4b92      	ldr	r3, [pc, #584]	; (8002450 <_printf_float+0x2d0>)
 8002208:	4892      	ldr	r0, [pc, #584]	; (8002454 <_printf_float+0x2d4>)
 800220a:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 800220e:	bf94      	ite	ls
 8002210:	4698      	movls	r8, r3
 8002212:	4680      	movhi	r8, r0
 8002214:	2303      	movs	r3, #3
 8002216:	f04f 0a00 	mov.w	sl, #0
 800221a:	6123      	str	r3, [r4, #16]
 800221c:	f02b 0304 	bic.w	r3, fp, #4
 8002220:	6023      	str	r3, [r4, #0]
 8002222:	4633      	mov	r3, r6
 8002224:	4621      	mov	r1, r4
 8002226:	4628      	mov	r0, r5
 8002228:	9700      	str	r7, [sp, #0]
 800222a:	aa0f      	add	r2, sp, #60	; 0x3c
 800222c:	f000 f9d4 	bl	80025d8 <_printf_common>
 8002230:	3001      	adds	r0, #1
 8002232:	f040 8090 	bne.w	8002356 <_printf_float+0x1d6>
 8002236:	f04f 30ff 	mov.w	r0, #4294967295
 800223a:	b011      	add	sp, #68	; 0x44
 800223c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002240:	4642      	mov	r2, r8
 8002242:	4653      	mov	r3, sl
 8002244:	4640      	mov	r0, r8
 8002246:	4651      	mov	r1, sl
 8002248:	f7fe fc4c 	bl	8000ae4 <__aeabi_dcmpun>
 800224c:	b148      	cbz	r0, 8002262 <_printf_float+0xe2>
 800224e:	f1ba 0f00 	cmp.w	sl, #0
 8002252:	bfb8      	it	lt
 8002254:	232d      	movlt	r3, #45	; 0x2d
 8002256:	4880      	ldr	r0, [pc, #512]	; (8002458 <_printf_float+0x2d8>)
 8002258:	bfb8      	it	lt
 800225a:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800225e:	4b7f      	ldr	r3, [pc, #508]	; (800245c <_printf_float+0x2dc>)
 8002260:	e7d3      	b.n	800220a <_printf_float+0x8a>
 8002262:	6863      	ldr	r3, [r4, #4]
 8002264:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8002268:	1c5a      	adds	r2, r3, #1
 800226a:	d142      	bne.n	80022f2 <_printf_float+0x172>
 800226c:	2306      	movs	r3, #6
 800226e:	6063      	str	r3, [r4, #4]
 8002270:	2200      	movs	r2, #0
 8002272:	9206      	str	r2, [sp, #24]
 8002274:	aa0e      	add	r2, sp, #56	; 0x38
 8002276:	e9cd 9204 	strd	r9, r2, [sp, #16]
 800227a:	aa0d      	add	r2, sp, #52	; 0x34
 800227c:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 8002280:	9203      	str	r2, [sp, #12]
 8002282:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 8002286:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800228a:	6023      	str	r3, [r4, #0]
 800228c:	6863      	ldr	r3, [r4, #4]
 800228e:	4642      	mov	r2, r8
 8002290:	9300      	str	r3, [sp, #0]
 8002292:	4628      	mov	r0, r5
 8002294:	4653      	mov	r3, sl
 8002296:	910b      	str	r1, [sp, #44]	; 0x2c
 8002298:	f7ff fed4 	bl	8002044 <__cvt>
 800229c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800229e:	4680      	mov	r8, r0
 80022a0:	2947      	cmp	r1, #71	; 0x47
 80022a2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80022a4:	d108      	bne.n	80022b8 <_printf_float+0x138>
 80022a6:	1cc8      	adds	r0, r1, #3
 80022a8:	db02      	blt.n	80022b0 <_printf_float+0x130>
 80022aa:	6863      	ldr	r3, [r4, #4]
 80022ac:	4299      	cmp	r1, r3
 80022ae:	dd40      	ble.n	8002332 <_printf_float+0x1b2>
 80022b0:	f1a9 0902 	sub.w	r9, r9, #2
 80022b4:	fa5f f989 	uxtb.w	r9, r9
 80022b8:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 80022bc:	d81f      	bhi.n	80022fe <_printf_float+0x17e>
 80022be:	464a      	mov	r2, r9
 80022c0:	3901      	subs	r1, #1
 80022c2:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80022c6:	910d      	str	r1, [sp, #52]	; 0x34
 80022c8:	f7ff ff1b 	bl	8002102 <__exponent>
 80022cc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80022ce:	4682      	mov	sl, r0
 80022d0:	1813      	adds	r3, r2, r0
 80022d2:	2a01      	cmp	r2, #1
 80022d4:	6123      	str	r3, [r4, #16]
 80022d6:	dc02      	bgt.n	80022de <_printf_float+0x15e>
 80022d8:	6822      	ldr	r2, [r4, #0]
 80022da:	07d2      	lsls	r2, r2, #31
 80022dc:	d501      	bpl.n	80022e2 <_printf_float+0x162>
 80022de:	3301      	adds	r3, #1
 80022e0:	6123      	str	r3, [r4, #16]
 80022e2:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 80022e6:	2b00      	cmp	r3, #0
 80022e8:	d09b      	beq.n	8002222 <_printf_float+0xa2>
 80022ea:	232d      	movs	r3, #45	; 0x2d
 80022ec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80022f0:	e797      	b.n	8002222 <_printf_float+0xa2>
 80022f2:	2947      	cmp	r1, #71	; 0x47
 80022f4:	d1bc      	bne.n	8002270 <_printf_float+0xf0>
 80022f6:	2b00      	cmp	r3, #0
 80022f8:	d1ba      	bne.n	8002270 <_printf_float+0xf0>
 80022fa:	2301      	movs	r3, #1
 80022fc:	e7b7      	b.n	800226e <_printf_float+0xee>
 80022fe:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 8002302:	d118      	bne.n	8002336 <_printf_float+0x1b6>
 8002304:	2900      	cmp	r1, #0
 8002306:	6863      	ldr	r3, [r4, #4]
 8002308:	dd0b      	ble.n	8002322 <_printf_float+0x1a2>
 800230a:	6121      	str	r1, [r4, #16]
 800230c:	b913      	cbnz	r3, 8002314 <_printf_float+0x194>
 800230e:	6822      	ldr	r2, [r4, #0]
 8002310:	07d0      	lsls	r0, r2, #31
 8002312:	d502      	bpl.n	800231a <_printf_float+0x19a>
 8002314:	3301      	adds	r3, #1
 8002316:	440b      	add	r3, r1
 8002318:	6123      	str	r3, [r4, #16]
 800231a:	f04f 0a00 	mov.w	sl, #0
 800231e:	65a1      	str	r1, [r4, #88]	; 0x58
 8002320:	e7df      	b.n	80022e2 <_printf_float+0x162>
 8002322:	b913      	cbnz	r3, 800232a <_printf_float+0x1aa>
 8002324:	6822      	ldr	r2, [r4, #0]
 8002326:	07d2      	lsls	r2, r2, #31
 8002328:	d501      	bpl.n	800232e <_printf_float+0x1ae>
 800232a:	3302      	adds	r3, #2
 800232c:	e7f4      	b.n	8002318 <_printf_float+0x198>
 800232e:	2301      	movs	r3, #1
 8002330:	e7f2      	b.n	8002318 <_printf_float+0x198>
 8002332:	f04f 0967 	mov.w	r9, #103	; 0x67
 8002336:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002338:	4299      	cmp	r1, r3
 800233a:	db05      	blt.n	8002348 <_printf_float+0x1c8>
 800233c:	6823      	ldr	r3, [r4, #0]
 800233e:	6121      	str	r1, [r4, #16]
 8002340:	07d8      	lsls	r0, r3, #31
 8002342:	d5ea      	bpl.n	800231a <_printf_float+0x19a>
 8002344:	1c4b      	adds	r3, r1, #1
 8002346:	e7e7      	b.n	8002318 <_printf_float+0x198>
 8002348:	2900      	cmp	r1, #0
 800234a:	bfcc      	ite	gt
 800234c:	2201      	movgt	r2, #1
 800234e:	f1c1 0202 	rsble	r2, r1, #2
 8002352:	4413      	add	r3, r2
 8002354:	e7e0      	b.n	8002318 <_printf_float+0x198>
 8002356:	6823      	ldr	r3, [r4, #0]
 8002358:	055a      	lsls	r2, r3, #21
 800235a:	d407      	bmi.n	800236c <_printf_float+0x1ec>
 800235c:	6923      	ldr	r3, [r4, #16]
 800235e:	4642      	mov	r2, r8
 8002360:	4631      	mov	r1, r6
 8002362:	4628      	mov	r0, r5
 8002364:	47b8      	blx	r7
 8002366:	3001      	adds	r0, #1
 8002368:	d12b      	bne.n	80023c2 <_printf_float+0x242>
 800236a:	e764      	b.n	8002236 <_printf_float+0xb6>
 800236c:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8002370:	f240 80dd 	bls.w	800252e <_printf_float+0x3ae>
 8002374:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8002378:	2200      	movs	r2, #0
 800237a:	2300      	movs	r3, #0
 800237c:	f7fe fb80 	bl	8000a80 <__aeabi_dcmpeq>
 8002380:	2800      	cmp	r0, #0
 8002382:	d033      	beq.n	80023ec <_printf_float+0x26c>
 8002384:	2301      	movs	r3, #1
 8002386:	4631      	mov	r1, r6
 8002388:	4628      	mov	r0, r5
 800238a:	4a35      	ldr	r2, [pc, #212]	; (8002460 <_printf_float+0x2e0>)
 800238c:	47b8      	blx	r7
 800238e:	3001      	adds	r0, #1
 8002390:	f43f af51 	beq.w	8002236 <_printf_float+0xb6>
 8002394:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002398:	429a      	cmp	r2, r3
 800239a:	db02      	blt.n	80023a2 <_printf_float+0x222>
 800239c:	6823      	ldr	r3, [r4, #0]
 800239e:	07d8      	lsls	r0, r3, #31
 80023a0:	d50f      	bpl.n	80023c2 <_printf_float+0x242>
 80023a2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80023a6:	4631      	mov	r1, r6
 80023a8:	4628      	mov	r0, r5
 80023aa:	47b8      	blx	r7
 80023ac:	3001      	adds	r0, #1
 80023ae:	f43f af42 	beq.w	8002236 <_printf_float+0xb6>
 80023b2:	f04f 0800 	mov.w	r8, #0
 80023b6:	f104 091a 	add.w	r9, r4, #26
 80023ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80023bc:	3b01      	subs	r3, #1
 80023be:	4543      	cmp	r3, r8
 80023c0:	dc09      	bgt.n	80023d6 <_printf_float+0x256>
 80023c2:	6823      	ldr	r3, [r4, #0]
 80023c4:	079b      	lsls	r3, r3, #30
 80023c6:	f100 8102 	bmi.w	80025ce <_printf_float+0x44e>
 80023ca:	68e0      	ldr	r0, [r4, #12]
 80023cc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80023ce:	4298      	cmp	r0, r3
 80023d0:	bfb8      	it	lt
 80023d2:	4618      	movlt	r0, r3
 80023d4:	e731      	b.n	800223a <_printf_float+0xba>
 80023d6:	2301      	movs	r3, #1
 80023d8:	464a      	mov	r2, r9
 80023da:	4631      	mov	r1, r6
 80023dc:	4628      	mov	r0, r5
 80023de:	47b8      	blx	r7
 80023e0:	3001      	adds	r0, #1
 80023e2:	f43f af28 	beq.w	8002236 <_printf_float+0xb6>
 80023e6:	f108 0801 	add.w	r8, r8, #1
 80023ea:	e7e6      	b.n	80023ba <_printf_float+0x23a>
 80023ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80023ee:	2b00      	cmp	r3, #0
 80023f0:	dc38      	bgt.n	8002464 <_printf_float+0x2e4>
 80023f2:	2301      	movs	r3, #1
 80023f4:	4631      	mov	r1, r6
 80023f6:	4628      	mov	r0, r5
 80023f8:	4a19      	ldr	r2, [pc, #100]	; (8002460 <_printf_float+0x2e0>)
 80023fa:	47b8      	blx	r7
 80023fc:	3001      	adds	r0, #1
 80023fe:	f43f af1a 	beq.w	8002236 <_printf_float+0xb6>
 8002402:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002406:	4313      	orrs	r3, r2
 8002408:	d102      	bne.n	8002410 <_printf_float+0x290>
 800240a:	6823      	ldr	r3, [r4, #0]
 800240c:	07d9      	lsls	r1, r3, #31
 800240e:	d5d8      	bpl.n	80023c2 <_printf_float+0x242>
 8002410:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002414:	4631      	mov	r1, r6
 8002416:	4628      	mov	r0, r5
 8002418:	47b8      	blx	r7
 800241a:	3001      	adds	r0, #1
 800241c:	f43f af0b 	beq.w	8002236 <_printf_float+0xb6>
 8002420:	f04f 0900 	mov.w	r9, #0
 8002424:	f104 0a1a 	add.w	sl, r4, #26
 8002428:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800242a:	425b      	negs	r3, r3
 800242c:	454b      	cmp	r3, r9
 800242e:	dc01      	bgt.n	8002434 <_printf_float+0x2b4>
 8002430:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002432:	e794      	b.n	800235e <_printf_float+0x1de>
 8002434:	2301      	movs	r3, #1
 8002436:	4652      	mov	r2, sl
 8002438:	4631      	mov	r1, r6
 800243a:	4628      	mov	r0, r5
 800243c:	47b8      	blx	r7
 800243e:	3001      	adds	r0, #1
 8002440:	f43f aef9 	beq.w	8002236 <_printf_float+0xb6>
 8002444:	f109 0901 	add.w	r9, r9, #1
 8002448:	e7ee      	b.n	8002428 <_printf_float+0x2a8>
 800244a:	bf00      	nop
 800244c:	7fefffff 	.word	0x7fefffff
 8002450:	080068e4 	.word	0x080068e4
 8002454:	080068e8 	.word	0x080068e8
 8002458:	080068f0 	.word	0x080068f0
 800245c:	080068ec 	.word	0x080068ec
 8002460:	080068f4 	.word	0x080068f4
 8002464:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002466:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8002468:	429a      	cmp	r2, r3
 800246a:	bfa8      	it	ge
 800246c:	461a      	movge	r2, r3
 800246e:	2a00      	cmp	r2, #0
 8002470:	4691      	mov	r9, r2
 8002472:	dc37      	bgt.n	80024e4 <_printf_float+0x364>
 8002474:	f04f 0b00 	mov.w	fp, #0
 8002478:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800247c:	f104 021a 	add.w	r2, r4, #26
 8002480:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 8002484:	ebaa 0309 	sub.w	r3, sl, r9
 8002488:	455b      	cmp	r3, fp
 800248a:	dc33      	bgt.n	80024f4 <_printf_float+0x374>
 800248c:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002490:	429a      	cmp	r2, r3
 8002492:	db3b      	blt.n	800250c <_printf_float+0x38c>
 8002494:	6823      	ldr	r3, [r4, #0]
 8002496:	07da      	lsls	r2, r3, #31
 8002498:	d438      	bmi.n	800250c <_printf_float+0x38c>
 800249a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800249c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800249e:	eba3 020a 	sub.w	r2, r3, sl
 80024a2:	eba3 0901 	sub.w	r9, r3, r1
 80024a6:	4591      	cmp	r9, r2
 80024a8:	bfa8      	it	ge
 80024aa:	4691      	movge	r9, r2
 80024ac:	f1b9 0f00 	cmp.w	r9, #0
 80024b0:	dc34      	bgt.n	800251c <_printf_float+0x39c>
 80024b2:	f04f 0800 	mov.w	r8, #0
 80024b6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80024ba:	f104 0a1a 	add.w	sl, r4, #26
 80024be:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80024c2:	1a9b      	subs	r3, r3, r2
 80024c4:	eba3 0309 	sub.w	r3, r3, r9
 80024c8:	4543      	cmp	r3, r8
 80024ca:	f77f af7a 	ble.w	80023c2 <_printf_float+0x242>
 80024ce:	2301      	movs	r3, #1
 80024d0:	4652      	mov	r2, sl
 80024d2:	4631      	mov	r1, r6
 80024d4:	4628      	mov	r0, r5
 80024d6:	47b8      	blx	r7
 80024d8:	3001      	adds	r0, #1
 80024da:	f43f aeac 	beq.w	8002236 <_printf_float+0xb6>
 80024de:	f108 0801 	add.w	r8, r8, #1
 80024e2:	e7ec      	b.n	80024be <_printf_float+0x33e>
 80024e4:	4613      	mov	r3, r2
 80024e6:	4631      	mov	r1, r6
 80024e8:	4642      	mov	r2, r8
 80024ea:	4628      	mov	r0, r5
 80024ec:	47b8      	blx	r7
 80024ee:	3001      	adds	r0, #1
 80024f0:	d1c0      	bne.n	8002474 <_printf_float+0x2f4>
 80024f2:	e6a0      	b.n	8002236 <_printf_float+0xb6>
 80024f4:	2301      	movs	r3, #1
 80024f6:	4631      	mov	r1, r6
 80024f8:	4628      	mov	r0, r5
 80024fa:	920b      	str	r2, [sp, #44]	; 0x2c
 80024fc:	47b8      	blx	r7
 80024fe:	3001      	adds	r0, #1
 8002500:	f43f ae99 	beq.w	8002236 <_printf_float+0xb6>
 8002504:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8002506:	f10b 0b01 	add.w	fp, fp, #1
 800250a:	e7b9      	b.n	8002480 <_printf_float+0x300>
 800250c:	4631      	mov	r1, r6
 800250e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002512:	4628      	mov	r0, r5
 8002514:	47b8      	blx	r7
 8002516:	3001      	adds	r0, #1
 8002518:	d1bf      	bne.n	800249a <_printf_float+0x31a>
 800251a:	e68c      	b.n	8002236 <_printf_float+0xb6>
 800251c:	464b      	mov	r3, r9
 800251e:	4631      	mov	r1, r6
 8002520:	4628      	mov	r0, r5
 8002522:	eb08 020a 	add.w	r2, r8, sl
 8002526:	47b8      	blx	r7
 8002528:	3001      	adds	r0, #1
 800252a:	d1c2      	bne.n	80024b2 <_printf_float+0x332>
 800252c:	e683      	b.n	8002236 <_printf_float+0xb6>
 800252e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002530:	2a01      	cmp	r2, #1
 8002532:	dc01      	bgt.n	8002538 <_printf_float+0x3b8>
 8002534:	07db      	lsls	r3, r3, #31
 8002536:	d537      	bpl.n	80025a8 <_printf_float+0x428>
 8002538:	2301      	movs	r3, #1
 800253a:	4642      	mov	r2, r8
 800253c:	4631      	mov	r1, r6
 800253e:	4628      	mov	r0, r5
 8002540:	47b8      	blx	r7
 8002542:	3001      	adds	r0, #1
 8002544:	f43f ae77 	beq.w	8002236 <_printf_float+0xb6>
 8002548:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800254c:	4631      	mov	r1, r6
 800254e:	4628      	mov	r0, r5
 8002550:	47b8      	blx	r7
 8002552:	3001      	adds	r0, #1
 8002554:	f43f ae6f 	beq.w	8002236 <_printf_float+0xb6>
 8002558:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800255c:	2200      	movs	r2, #0
 800255e:	2300      	movs	r3, #0
 8002560:	f7fe fa8e 	bl	8000a80 <__aeabi_dcmpeq>
 8002564:	b9d8      	cbnz	r0, 800259e <_printf_float+0x41e>
 8002566:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002568:	f108 0201 	add.w	r2, r8, #1
 800256c:	3b01      	subs	r3, #1
 800256e:	4631      	mov	r1, r6
 8002570:	4628      	mov	r0, r5
 8002572:	47b8      	blx	r7
 8002574:	3001      	adds	r0, #1
 8002576:	d10e      	bne.n	8002596 <_printf_float+0x416>
 8002578:	e65d      	b.n	8002236 <_printf_float+0xb6>
 800257a:	2301      	movs	r3, #1
 800257c:	464a      	mov	r2, r9
 800257e:	4631      	mov	r1, r6
 8002580:	4628      	mov	r0, r5
 8002582:	47b8      	blx	r7
 8002584:	3001      	adds	r0, #1
 8002586:	f43f ae56 	beq.w	8002236 <_printf_float+0xb6>
 800258a:	f108 0801 	add.w	r8, r8, #1
 800258e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002590:	3b01      	subs	r3, #1
 8002592:	4543      	cmp	r3, r8
 8002594:	dcf1      	bgt.n	800257a <_printf_float+0x3fa>
 8002596:	4653      	mov	r3, sl
 8002598:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800259c:	e6e0      	b.n	8002360 <_printf_float+0x1e0>
 800259e:	f04f 0800 	mov.w	r8, #0
 80025a2:	f104 091a 	add.w	r9, r4, #26
 80025a6:	e7f2      	b.n	800258e <_printf_float+0x40e>
 80025a8:	2301      	movs	r3, #1
 80025aa:	4642      	mov	r2, r8
 80025ac:	e7df      	b.n	800256e <_printf_float+0x3ee>
 80025ae:	2301      	movs	r3, #1
 80025b0:	464a      	mov	r2, r9
 80025b2:	4631      	mov	r1, r6
 80025b4:	4628      	mov	r0, r5
 80025b6:	47b8      	blx	r7
 80025b8:	3001      	adds	r0, #1
 80025ba:	f43f ae3c 	beq.w	8002236 <_printf_float+0xb6>
 80025be:	f108 0801 	add.w	r8, r8, #1
 80025c2:	68e3      	ldr	r3, [r4, #12]
 80025c4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80025c6:	1a5b      	subs	r3, r3, r1
 80025c8:	4543      	cmp	r3, r8
 80025ca:	dcf0      	bgt.n	80025ae <_printf_float+0x42e>
 80025cc:	e6fd      	b.n	80023ca <_printf_float+0x24a>
 80025ce:	f04f 0800 	mov.w	r8, #0
 80025d2:	f104 0919 	add.w	r9, r4, #25
 80025d6:	e7f4      	b.n	80025c2 <_printf_float+0x442>

080025d8 <_printf_common>:
 80025d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80025dc:	4616      	mov	r6, r2
 80025de:	4699      	mov	r9, r3
 80025e0:	688a      	ldr	r2, [r1, #8]
 80025e2:	690b      	ldr	r3, [r1, #16]
 80025e4:	4607      	mov	r7, r0
 80025e6:	4293      	cmp	r3, r2
 80025e8:	bfb8      	it	lt
 80025ea:	4613      	movlt	r3, r2
 80025ec:	6033      	str	r3, [r6, #0]
 80025ee:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80025f2:	460c      	mov	r4, r1
 80025f4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80025f8:	b10a      	cbz	r2, 80025fe <_printf_common+0x26>
 80025fa:	3301      	adds	r3, #1
 80025fc:	6033      	str	r3, [r6, #0]
 80025fe:	6823      	ldr	r3, [r4, #0]
 8002600:	0699      	lsls	r1, r3, #26
 8002602:	bf42      	ittt	mi
 8002604:	6833      	ldrmi	r3, [r6, #0]
 8002606:	3302      	addmi	r3, #2
 8002608:	6033      	strmi	r3, [r6, #0]
 800260a:	6825      	ldr	r5, [r4, #0]
 800260c:	f015 0506 	ands.w	r5, r5, #6
 8002610:	d106      	bne.n	8002620 <_printf_common+0x48>
 8002612:	f104 0a19 	add.w	sl, r4, #25
 8002616:	68e3      	ldr	r3, [r4, #12]
 8002618:	6832      	ldr	r2, [r6, #0]
 800261a:	1a9b      	subs	r3, r3, r2
 800261c:	42ab      	cmp	r3, r5
 800261e:	dc28      	bgt.n	8002672 <_printf_common+0x9a>
 8002620:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8002624:	1e13      	subs	r3, r2, #0
 8002626:	6822      	ldr	r2, [r4, #0]
 8002628:	bf18      	it	ne
 800262a:	2301      	movne	r3, #1
 800262c:	0692      	lsls	r2, r2, #26
 800262e:	d42d      	bmi.n	800268c <_printf_common+0xb4>
 8002630:	4649      	mov	r1, r9
 8002632:	4638      	mov	r0, r7
 8002634:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002638:	47c0      	blx	r8
 800263a:	3001      	adds	r0, #1
 800263c:	d020      	beq.n	8002680 <_printf_common+0xa8>
 800263e:	6823      	ldr	r3, [r4, #0]
 8002640:	68e5      	ldr	r5, [r4, #12]
 8002642:	f003 0306 	and.w	r3, r3, #6
 8002646:	2b04      	cmp	r3, #4
 8002648:	bf18      	it	ne
 800264a:	2500      	movne	r5, #0
 800264c:	6832      	ldr	r2, [r6, #0]
 800264e:	f04f 0600 	mov.w	r6, #0
 8002652:	68a3      	ldr	r3, [r4, #8]
 8002654:	bf08      	it	eq
 8002656:	1aad      	subeq	r5, r5, r2
 8002658:	6922      	ldr	r2, [r4, #16]
 800265a:	bf08      	it	eq
 800265c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002660:	4293      	cmp	r3, r2
 8002662:	bfc4      	itt	gt
 8002664:	1a9b      	subgt	r3, r3, r2
 8002666:	18ed      	addgt	r5, r5, r3
 8002668:	341a      	adds	r4, #26
 800266a:	42b5      	cmp	r5, r6
 800266c:	d11a      	bne.n	80026a4 <_printf_common+0xcc>
 800266e:	2000      	movs	r0, #0
 8002670:	e008      	b.n	8002684 <_printf_common+0xac>
 8002672:	2301      	movs	r3, #1
 8002674:	4652      	mov	r2, sl
 8002676:	4649      	mov	r1, r9
 8002678:	4638      	mov	r0, r7
 800267a:	47c0      	blx	r8
 800267c:	3001      	adds	r0, #1
 800267e:	d103      	bne.n	8002688 <_printf_common+0xb0>
 8002680:	f04f 30ff 	mov.w	r0, #4294967295
 8002684:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002688:	3501      	adds	r5, #1
 800268a:	e7c4      	b.n	8002616 <_printf_common+0x3e>
 800268c:	2030      	movs	r0, #48	; 0x30
 800268e:	18e1      	adds	r1, r4, r3
 8002690:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8002694:	1c5a      	adds	r2, r3, #1
 8002696:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800269a:	4422      	add	r2, r4
 800269c:	3302      	adds	r3, #2
 800269e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80026a2:	e7c5      	b.n	8002630 <_printf_common+0x58>
 80026a4:	2301      	movs	r3, #1
 80026a6:	4622      	mov	r2, r4
 80026a8:	4649      	mov	r1, r9
 80026aa:	4638      	mov	r0, r7
 80026ac:	47c0      	blx	r8
 80026ae:	3001      	adds	r0, #1
 80026b0:	d0e6      	beq.n	8002680 <_printf_common+0xa8>
 80026b2:	3601      	adds	r6, #1
 80026b4:	e7d9      	b.n	800266a <_printf_common+0x92>
	...

080026b8 <_printf_i>:
 80026b8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80026bc:	7e0f      	ldrb	r7, [r1, #24]
 80026be:	4691      	mov	r9, r2
 80026c0:	2f78      	cmp	r7, #120	; 0x78
 80026c2:	4680      	mov	r8, r0
 80026c4:	460c      	mov	r4, r1
 80026c6:	469a      	mov	sl, r3
 80026c8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80026ca:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80026ce:	d807      	bhi.n	80026e0 <_printf_i+0x28>
 80026d0:	2f62      	cmp	r7, #98	; 0x62
 80026d2:	d80a      	bhi.n	80026ea <_printf_i+0x32>
 80026d4:	2f00      	cmp	r7, #0
 80026d6:	f000 80d9 	beq.w	800288c <_printf_i+0x1d4>
 80026da:	2f58      	cmp	r7, #88	; 0x58
 80026dc:	f000 80a4 	beq.w	8002828 <_printf_i+0x170>
 80026e0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80026e4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80026e8:	e03a      	b.n	8002760 <_printf_i+0xa8>
 80026ea:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80026ee:	2b15      	cmp	r3, #21
 80026f0:	d8f6      	bhi.n	80026e0 <_printf_i+0x28>
 80026f2:	a101      	add	r1, pc, #4	; (adr r1, 80026f8 <_printf_i+0x40>)
 80026f4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80026f8:	08002751 	.word	0x08002751
 80026fc:	08002765 	.word	0x08002765
 8002700:	080026e1 	.word	0x080026e1
 8002704:	080026e1 	.word	0x080026e1
 8002708:	080026e1 	.word	0x080026e1
 800270c:	080026e1 	.word	0x080026e1
 8002710:	08002765 	.word	0x08002765
 8002714:	080026e1 	.word	0x080026e1
 8002718:	080026e1 	.word	0x080026e1
 800271c:	080026e1 	.word	0x080026e1
 8002720:	080026e1 	.word	0x080026e1
 8002724:	08002873 	.word	0x08002873
 8002728:	08002795 	.word	0x08002795
 800272c:	08002855 	.word	0x08002855
 8002730:	080026e1 	.word	0x080026e1
 8002734:	080026e1 	.word	0x080026e1
 8002738:	08002895 	.word	0x08002895
 800273c:	080026e1 	.word	0x080026e1
 8002740:	08002795 	.word	0x08002795
 8002744:	080026e1 	.word	0x080026e1
 8002748:	080026e1 	.word	0x080026e1
 800274c:	0800285d 	.word	0x0800285d
 8002750:	682b      	ldr	r3, [r5, #0]
 8002752:	1d1a      	adds	r2, r3, #4
 8002754:	681b      	ldr	r3, [r3, #0]
 8002756:	602a      	str	r2, [r5, #0]
 8002758:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800275c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002760:	2301      	movs	r3, #1
 8002762:	e0a4      	b.n	80028ae <_printf_i+0x1f6>
 8002764:	6820      	ldr	r0, [r4, #0]
 8002766:	6829      	ldr	r1, [r5, #0]
 8002768:	0606      	lsls	r6, r0, #24
 800276a:	f101 0304 	add.w	r3, r1, #4
 800276e:	d50a      	bpl.n	8002786 <_printf_i+0xce>
 8002770:	680e      	ldr	r6, [r1, #0]
 8002772:	602b      	str	r3, [r5, #0]
 8002774:	2e00      	cmp	r6, #0
 8002776:	da03      	bge.n	8002780 <_printf_i+0xc8>
 8002778:	232d      	movs	r3, #45	; 0x2d
 800277a:	4276      	negs	r6, r6
 800277c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002780:	230a      	movs	r3, #10
 8002782:	485e      	ldr	r0, [pc, #376]	; (80028fc <_printf_i+0x244>)
 8002784:	e019      	b.n	80027ba <_printf_i+0x102>
 8002786:	680e      	ldr	r6, [r1, #0]
 8002788:	f010 0f40 	tst.w	r0, #64	; 0x40
 800278c:	602b      	str	r3, [r5, #0]
 800278e:	bf18      	it	ne
 8002790:	b236      	sxthne	r6, r6
 8002792:	e7ef      	b.n	8002774 <_printf_i+0xbc>
 8002794:	682b      	ldr	r3, [r5, #0]
 8002796:	6820      	ldr	r0, [r4, #0]
 8002798:	1d19      	adds	r1, r3, #4
 800279a:	6029      	str	r1, [r5, #0]
 800279c:	0601      	lsls	r1, r0, #24
 800279e:	d501      	bpl.n	80027a4 <_printf_i+0xec>
 80027a0:	681e      	ldr	r6, [r3, #0]
 80027a2:	e002      	b.n	80027aa <_printf_i+0xf2>
 80027a4:	0646      	lsls	r6, r0, #25
 80027a6:	d5fb      	bpl.n	80027a0 <_printf_i+0xe8>
 80027a8:	881e      	ldrh	r6, [r3, #0]
 80027aa:	2f6f      	cmp	r7, #111	; 0x6f
 80027ac:	bf0c      	ite	eq
 80027ae:	2308      	moveq	r3, #8
 80027b0:	230a      	movne	r3, #10
 80027b2:	4852      	ldr	r0, [pc, #328]	; (80028fc <_printf_i+0x244>)
 80027b4:	2100      	movs	r1, #0
 80027b6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80027ba:	6865      	ldr	r5, [r4, #4]
 80027bc:	2d00      	cmp	r5, #0
 80027be:	bfa8      	it	ge
 80027c0:	6821      	ldrge	r1, [r4, #0]
 80027c2:	60a5      	str	r5, [r4, #8]
 80027c4:	bfa4      	itt	ge
 80027c6:	f021 0104 	bicge.w	r1, r1, #4
 80027ca:	6021      	strge	r1, [r4, #0]
 80027cc:	b90e      	cbnz	r6, 80027d2 <_printf_i+0x11a>
 80027ce:	2d00      	cmp	r5, #0
 80027d0:	d04d      	beq.n	800286e <_printf_i+0x1b6>
 80027d2:	4615      	mov	r5, r2
 80027d4:	fbb6 f1f3 	udiv	r1, r6, r3
 80027d8:	fb03 6711 	mls	r7, r3, r1, r6
 80027dc:	5dc7      	ldrb	r7, [r0, r7]
 80027de:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80027e2:	4637      	mov	r7, r6
 80027e4:	42bb      	cmp	r3, r7
 80027e6:	460e      	mov	r6, r1
 80027e8:	d9f4      	bls.n	80027d4 <_printf_i+0x11c>
 80027ea:	2b08      	cmp	r3, #8
 80027ec:	d10b      	bne.n	8002806 <_printf_i+0x14e>
 80027ee:	6823      	ldr	r3, [r4, #0]
 80027f0:	07de      	lsls	r6, r3, #31
 80027f2:	d508      	bpl.n	8002806 <_printf_i+0x14e>
 80027f4:	6923      	ldr	r3, [r4, #16]
 80027f6:	6861      	ldr	r1, [r4, #4]
 80027f8:	4299      	cmp	r1, r3
 80027fa:	bfde      	ittt	le
 80027fc:	2330      	movle	r3, #48	; 0x30
 80027fe:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002802:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002806:	1b52      	subs	r2, r2, r5
 8002808:	6122      	str	r2, [r4, #16]
 800280a:	464b      	mov	r3, r9
 800280c:	4621      	mov	r1, r4
 800280e:	4640      	mov	r0, r8
 8002810:	f8cd a000 	str.w	sl, [sp]
 8002814:	aa03      	add	r2, sp, #12
 8002816:	f7ff fedf 	bl	80025d8 <_printf_common>
 800281a:	3001      	adds	r0, #1
 800281c:	d14c      	bne.n	80028b8 <_printf_i+0x200>
 800281e:	f04f 30ff 	mov.w	r0, #4294967295
 8002822:	b004      	add	sp, #16
 8002824:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002828:	4834      	ldr	r0, [pc, #208]	; (80028fc <_printf_i+0x244>)
 800282a:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800282e:	6829      	ldr	r1, [r5, #0]
 8002830:	6823      	ldr	r3, [r4, #0]
 8002832:	f851 6b04 	ldr.w	r6, [r1], #4
 8002836:	6029      	str	r1, [r5, #0]
 8002838:	061d      	lsls	r5, r3, #24
 800283a:	d514      	bpl.n	8002866 <_printf_i+0x1ae>
 800283c:	07df      	lsls	r7, r3, #31
 800283e:	bf44      	itt	mi
 8002840:	f043 0320 	orrmi.w	r3, r3, #32
 8002844:	6023      	strmi	r3, [r4, #0]
 8002846:	b91e      	cbnz	r6, 8002850 <_printf_i+0x198>
 8002848:	6823      	ldr	r3, [r4, #0]
 800284a:	f023 0320 	bic.w	r3, r3, #32
 800284e:	6023      	str	r3, [r4, #0]
 8002850:	2310      	movs	r3, #16
 8002852:	e7af      	b.n	80027b4 <_printf_i+0xfc>
 8002854:	6823      	ldr	r3, [r4, #0]
 8002856:	f043 0320 	orr.w	r3, r3, #32
 800285a:	6023      	str	r3, [r4, #0]
 800285c:	2378      	movs	r3, #120	; 0x78
 800285e:	4828      	ldr	r0, [pc, #160]	; (8002900 <_printf_i+0x248>)
 8002860:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002864:	e7e3      	b.n	800282e <_printf_i+0x176>
 8002866:	0659      	lsls	r1, r3, #25
 8002868:	bf48      	it	mi
 800286a:	b2b6      	uxthmi	r6, r6
 800286c:	e7e6      	b.n	800283c <_printf_i+0x184>
 800286e:	4615      	mov	r5, r2
 8002870:	e7bb      	b.n	80027ea <_printf_i+0x132>
 8002872:	682b      	ldr	r3, [r5, #0]
 8002874:	6826      	ldr	r6, [r4, #0]
 8002876:	1d18      	adds	r0, r3, #4
 8002878:	6961      	ldr	r1, [r4, #20]
 800287a:	6028      	str	r0, [r5, #0]
 800287c:	0635      	lsls	r5, r6, #24
 800287e:	681b      	ldr	r3, [r3, #0]
 8002880:	d501      	bpl.n	8002886 <_printf_i+0x1ce>
 8002882:	6019      	str	r1, [r3, #0]
 8002884:	e002      	b.n	800288c <_printf_i+0x1d4>
 8002886:	0670      	lsls	r0, r6, #25
 8002888:	d5fb      	bpl.n	8002882 <_printf_i+0x1ca>
 800288a:	8019      	strh	r1, [r3, #0]
 800288c:	2300      	movs	r3, #0
 800288e:	4615      	mov	r5, r2
 8002890:	6123      	str	r3, [r4, #16]
 8002892:	e7ba      	b.n	800280a <_printf_i+0x152>
 8002894:	682b      	ldr	r3, [r5, #0]
 8002896:	2100      	movs	r1, #0
 8002898:	1d1a      	adds	r2, r3, #4
 800289a:	602a      	str	r2, [r5, #0]
 800289c:	681d      	ldr	r5, [r3, #0]
 800289e:	6862      	ldr	r2, [r4, #4]
 80028a0:	4628      	mov	r0, r5
 80028a2:	f002 faef 	bl	8004e84 <memchr>
 80028a6:	b108      	cbz	r0, 80028ac <_printf_i+0x1f4>
 80028a8:	1b40      	subs	r0, r0, r5
 80028aa:	6060      	str	r0, [r4, #4]
 80028ac:	6863      	ldr	r3, [r4, #4]
 80028ae:	6123      	str	r3, [r4, #16]
 80028b0:	2300      	movs	r3, #0
 80028b2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80028b6:	e7a8      	b.n	800280a <_printf_i+0x152>
 80028b8:	462a      	mov	r2, r5
 80028ba:	4649      	mov	r1, r9
 80028bc:	4640      	mov	r0, r8
 80028be:	6923      	ldr	r3, [r4, #16]
 80028c0:	47d0      	blx	sl
 80028c2:	3001      	adds	r0, #1
 80028c4:	d0ab      	beq.n	800281e <_printf_i+0x166>
 80028c6:	6823      	ldr	r3, [r4, #0]
 80028c8:	079b      	lsls	r3, r3, #30
 80028ca:	d413      	bmi.n	80028f4 <_printf_i+0x23c>
 80028cc:	68e0      	ldr	r0, [r4, #12]
 80028ce:	9b03      	ldr	r3, [sp, #12]
 80028d0:	4298      	cmp	r0, r3
 80028d2:	bfb8      	it	lt
 80028d4:	4618      	movlt	r0, r3
 80028d6:	e7a4      	b.n	8002822 <_printf_i+0x16a>
 80028d8:	2301      	movs	r3, #1
 80028da:	4632      	mov	r2, r6
 80028dc:	4649      	mov	r1, r9
 80028de:	4640      	mov	r0, r8
 80028e0:	47d0      	blx	sl
 80028e2:	3001      	adds	r0, #1
 80028e4:	d09b      	beq.n	800281e <_printf_i+0x166>
 80028e6:	3501      	adds	r5, #1
 80028e8:	68e3      	ldr	r3, [r4, #12]
 80028ea:	9903      	ldr	r1, [sp, #12]
 80028ec:	1a5b      	subs	r3, r3, r1
 80028ee:	42ab      	cmp	r3, r5
 80028f0:	dcf2      	bgt.n	80028d8 <_printf_i+0x220>
 80028f2:	e7eb      	b.n	80028cc <_printf_i+0x214>
 80028f4:	2500      	movs	r5, #0
 80028f6:	f104 0619 	add.w	r6, r4, #25
 80028fa:	e7f5      	b.n	80028e8 <_printf_i+0x230>
 80028fc:	080068f6 	.word	0x080068f6
 8002900:	08006907 	.word	0x08006907

08002904 <_scanf_float>:
 8002904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002908:	b087      	sub	sp, #28
 800290a:	9303      	str	r3, [sp, #12]
 800290c:	688b      	ldr	r3, [r1, #8]
 800290e:	4617      	mov	r7, r2
 8002910:	1e5a      	subs	r2, r3, #1
 8002912:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8002916:	bf85      	ittet	hi
 8002918:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800291c:	195b      	addhi	r3, r3, r5
 800291e:	2300      	movls	r3, #0
 8002920:	9302      	strhi	r3, [sp, #8]
 8002922:	bf88      	it	hi
 8002924:	f240 135d 	movwhi	r3, #349	; 0x15d
 8002928:	468b      	mov	fp, r1
 800292a:	f04f 0500 	mov.w	r5, #0
 800292e:	bf8c      	ite	hi
 8002930:	608b      	strhi	r3, [r1, #8]
 8002932:	9302      	strls	r3, [sp, #8]
 8002934:	680b      	ldr	r3, [r1, #0]
 8002936:	4680      	mov	r8, r0
 8002938:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 800293c:	f84b 3b1c 	str.w	r3, [fp], #28
 8002940:	460c      	mov	r4, r1
 8002942:	465e      	mov	r6, fp
 8002944:	46aa      	mov	sl, r5
 8002946:	46a9      	mov	r9, r5
 8002948:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800294c:	9501      	str	r5, [sp, #4]
 800294e:	68a2      	ldr	r2, [r4, #8]
 8002950:	b152      	cbz	r2, 8002968 <_scanf_float+0x64>
 8002952:	683b      	ldr	r3, [r7, #0]
 8002954:	781b      	ldrb	r3, [r3, #0]
 8002956:	2b4e      	cmp	r3, #78	; 0x4e
 8002958:	d864      	bhi.n	8002a24 <_scanf_float+0x120>
 800295a:	2b40      	cmp	r3, #64	; 0x40
 800295c:	d83c      	bhi.n	80029d8 <_scanf_float+0xd4>
 800295e:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8002962:	b2c8      	uxtb	r0, r1
 8002964:	280e      	cmp	r0, #14
 8002966:	d93a      	bls.n	80029de <_scanf_float+0xda>
 8002968:	f1b9 0f00 	cmp.w	r9, #0
 800296c:	d003      	beq.n	8002976 <_scanf_float+0x72>
 800296e:	6823      	ldr	r3, [r4, #0]
 8002970:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002974:	6023      	str	r3, [r4, #0]
 8002976:	f10a 3aff 	add.w	sl, sl, #4294967295
 800297a:	f1ba 0f01 	cmp.w	sl, #1
 800297e:	f200 8113 	bhi.w	8002ba8 <_scanf_float+0x2a4>
 8002982:	455e      	cmp	r6, fp
 8002984:	f200 8105 	bhi.w	8002b92 <_scanf_float+0x28e>
 8002988:	2501      	movs	r5, #1
 800298a:	4628      	mov	r0, r5
 800298c:	b007      	add	sp, #28
 800298e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002992:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8002996:	2a0d      	cmp	r2, #13
 8002998:	d8e6      	bhi.n	8002968 <_scanf_float+0x64>
 800299a:	a101      	add	r1, pc, #4	; (adr r1, 80029a0 <_scanf_float+0x9c>)
 800299c:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80029a0:	08002adf 	.word	0x08002adf
 80029a4:	08002969 	.word	0x08002969
 80029a8:	08002969 	.word	0x08002969
 80029ac:	08002969 	.word	0x08002969
 80029b0:	08002b3f 	.word	0x08002b3f
 80029b4:	08002b17 	.word	0x08002b17
 80029b8:	08002969 	.word	0x08002969
 80029bc:	08002969 	.word	0x08002969
 80029c0:	08002aed 	.word	0x08002aed
 80029c4:	08002969 	.word	0x08002969
 80029c8:	08002969 	.word	0x08002969
 80029cc:	08002969 	.word	0x08002969
 80029d0:	08002969 	.word	0x08002969
 80029d4:	08002aa5 	.word	0x08002aa5
 80029d8:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 80029dc:	e7db      	b.n	8002996 <_scanf_float+0x92>
 80029de:	290e      	cmp	r1, #14
 80029e0:	d8c2      	bhi.n	8002968 <_scanf_float+0x64>
 80029e2:	a001      	add	r0, pc, #4	; (adr r0, 80029e8 <_scanf_float+0xe4>)
 80029e4:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 80029e8:	08002a97 	.word	0x08002a97
 80029ec:	08002969 	.word	0x08002969
 80029f0:	08002a97 	.word	0x08002a97
 80029f4:	08002b2b 	.word	0x08002b2b
 80029f8:	08002969 	.word	0x08002969
 80029fc:	08002a45 	.word	0x08002a45
 8002a00:	08002a81 	.word	0x08002a81
 8002a04:	08002a81 	.word	0x08002a81
 8002a08:	08002a81 	.word	0x08002a81
 8002a0c:	08002a81 	.word	0x08002a81
 8002a10:	08002a81 	.word	0x08002a81
 8002a14:	08002a81 	.word	0x08002a81
 8002a18:	08002a81 	.word	0x08002a81
 8002a1c:	08002a81 	.word	0x08002a81
 8002a20:	08002a81 	.word	0x08002a81
 8002a24:	2b6e      	cmp	r3, #110	; 0x6e
 8002a26:	d809      	bhi.n	8002a3c <_scanf_float+0x138>
 8002a28:	2b60      	cmp	r3, #96	; 0x60
 8002a2a:	d8b2      	bhi.n	8002992 <_scanf_float+0x8e>
 8002a2c:	2b54      	cmp	r3, #84	; 0x54
 8002a2e:	d077      	beq.n	8002b20 <_scanf_float+0x21c>
 8002a30:	2b59      	cmp	r3, #89	; 0x59
 8002a32:	d199      	bne.n	8002968 <_scanf_float+0x64>
 8002a34:	2d07      	cmp	r5, #7
 8002a36:	d197      	bne.n	8002968 <_scanf_float+0x64>
 8002a38:	2508      	movs	r5, #8
 8002a3a:	e029      	b.n	8002a90 <_scanf_float+0x18c>
 8002a3c:	2b74      	cmp	r3, #116	; 0x74
 8002a3e:	d06f      	beq.n	8002b20 <_scanf_float+0x21c>
 8002a40:	2b79      	cmp	r3, #121	; 0x79
 8002a42:	e7f6      	b.n	8002a32 <_scanf_float+0x12e>
 8002a44:	6821      	ldr	r1, [r4, #0]
 8002a46:	05c8      	lsls	r0, r1, #23
 8002a48:	d51a      	bpl.n	8002a80 <_scanf_float+0x17c>
 8002a4a:	9b02      	ldr	r3, [sp, #8]
 8002a4c:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8002a50:	6021      	str	r1, [r4, #0]
 8002a52:	f109 0901 	add.w	r9, r9, #1
 8002a56:	b11b      	cbz	r3, 8002a60 <_scanf_float+0x15c>
 8002a58:	3b01      	subs	r3, #1
 8002a5a:	3201      	adds	r2, #1
 8002a5c:	9302      	str	r3, [sp, #8]
 8002a5e:	60a2      	str	r2, [r4, #8]
 8002a60:	68a3      	ldr	r3, [r4, #8]
 8002a62:	3b01      	subs	r3, #1
 8002a64:	60a3      	str	r3, [r4, #8]
 8002a66:	6923      	ldr	r3, [r4, #16]
 8002a68:	3301      	adds	r3, #1
 8002a6a:	6123      	str	r3, [r4, #16]
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	3b01      	subs	r3, #1
 8002a70:	2b00      	cmp	r3, #0
 8002a72:	607b      	str	r3, [r7, #4]
 8002a74:	f340 8084 	ble.w	8002b80 <_scanf_float+0x27c>
 8002a78:	683b      	ldr	r3, [r7, #0]
 8002a7a:	3301      	adds	r3, #1
 8002a7c:	603b      	str	r3, [r7, #0]
 8002a7e:	e766      	b.n	800294e <_scanf_float+0x4a>
 8002a80:	eb1a 0f05 	cmn.w	sl, r5
 8002a84:	f47f af70 	bne.w	8002968 <_scanf_float+0x64>
 8002a88:	6822      	ldr	r2, [r4, #0]
 8002a8a:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8002a8e:	6022      	str	r2, [r4, #0]
 8002a90:	f806 3b01 	strb.w	r3, [r6], #1
 8002a94:	e7e4      	b.n	8002a60 <_scanf_float+0x15c>
 8002a96:	6822      	ldr	r2, [r4, #0]
 8002a98:	0610      	lsls	r0, r2, #24
 8002a9a:	f57f af65 	bpl.w	8002968 <_scanf_float+0x64>
 8002a9e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002aa2:	e7f4      	b.n	8002a8e <_scanf_float+0x18a>
 8002aa4:	f1ba 0f00 	cmp.w	sl, #0
 8002aa8:	d10e      	bne.n	8002ac8 <_scanf_float+0x1c4>
 8002aaa:	f1b9 0f00 	cmp.w	r9, #0
 8002aae:	d10e      	bne.n	8002ace <_scanf_float+0x1ca>
 8002ab0:	6822      	ldr	r2, [r4, #0]
 8002ab2:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8002ab6:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002aba:	d108      	bne.n	8002ace <_scanf_float+0x1ca>
 8002abc:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002ac0:	f04f 0a01 	mov.w	sl, #1
 8002ac4:	6022      	str	r2, [r4, #0]
 8002ac6:	e7e3      	b.n	8002a90 <_scanf_float+0x18c>
 8002ac8:	f1ba 0f02 	cmp.w	sl, #2
 8002acc:	d055      	beq.n	8002b7a <_scanf_float+0x276>
 8002ace:	2d01      	cmp	r5, #1
 8002ad0:	d002      	beq.n	8002ad8 <_scanf_float+0x1d4>
 8002ad2:	2d04      	cmp	r5, #4
 8002ad4:	f47f af48 	bne.w	8002968 <_scanf_float+0x64>
 8002ad8:	3501      	adds	r5, #1
 8002ada:	b2ed      	uxtb	r5, r5
 8002adc:	e7d8      	b.n	8002a90 <_scanf_float+0x18c>
 8002ade:	f1ba 0f01 	cmp.w	sl, #1
 8002ae2:	f47f af41 	bne.w	8002968 <_scanf_float+0x64>
 8002ae6:	f04f 0a02 	mov.w	sl, #2
 8002aea:	e7d1      	b.n	8002a90 <_scanf_float+0x18c>
 8002aec:	b97d      	cbnz	r5, 8002b0e <_scanf_float+0x20a>
 8002aee:	f1b9 0f00 	cmp.w	r9, #0
 8002af2:	f47f af3c 	bne.w	800296e <_scanf_float+0x6a>
 8002af6:	6822      	ldr	r2, [r4, #0]
 8002af8:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8002afc:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002b00:	f47f af39 	bne.w	8002976 <_scanf_float+0x72>
 8002b04:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002b08:	2501      	movs	r5, #1
 8002b0a:	6022      	str	r2, [r4, #0]
 8002b0c:	e7c0      	b.n	8002a90 <_scanf_float+0x18c>
 8002b0e:	2d03      	cmp	r5, #3
 8002b10:	d0e2      	beq.n	8002ad8 <_scanf_float+0x1d4>
 8002b12:	2d05      	cmp	r5, #5
 8002b14:	e7de      	b.n	8002ad4 <_scanf_float+0x1d0>
 8002b16:	2d02      	cmp	r5, #2
 8002b18:	f47f af26 	bne.w	8002968 <_scanf_float+0x64>
 8002b1c:	2503      	movs	r5, #3
 8002b1e:	e7b7      	b.n	8002a90 <_scanf_float+0x18c>
 8002b20:	2d06      	cmp	r5, #6
 8002b22:	f47f af21 	bne.w	8002968 <_scanf_float+0x64>
 8002b26:	2507      	movs	r5, #7
 8002b28:	e7b2      	b.n	8002a90 <_scanf_float+0x18c>
 8002b2a:	6822      	ldr	r2, [r4, #0]
 8002b2c:	0591      	lsls	r1, r2, #22
 8002b2e:	f57f af1b 	bpl.w	8002968 <_scanf_float+0x64>
 8002b32:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8002b36:	6022      	str	r2, [r4, #0]
 8002b38:	f8cd 9004 	str.w	r9, [sp, #4]
 8002b3c:	e7a8      	b.n	8002a90 <_scanf_float+0x18c>
 8002b3e:	6822      	ldr	r2, [r4, #0]
 8002b40:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8002b44:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8002b48:	d006      	beq.n	8002b58 <_scanf_float+0x254>
 8002b4a:	0550      	lsls	r0, r2, #21
 8002b4c:	f57f af0c 	bpl.w	8002968 <_scanf_float+0x64>
 8002b50:	f1b9 0f00 	cmp.w	r9, #0
 8002b54:	f43f af0f 	beq.w	8002976 <_scanf_float+0x72>
 8002b58:	0591      	lsls	r1, r2, #22
 8002b5a:	bf58      	it	pl
 8002b5c:	9901      	ldrpl	r1, [sp, #4]
 8002b5e:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002b62:	bf58      	it	pl
 8002b64:	eba9 0101 	subpl.w	r1, r9, r1
 8002b68:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8002b6c:	f04f 0900 	mov.w	r9, #0
 8002b70:	bf58      	it	pl
 8002b72:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8002b76:	6022      	str	r2, [r4, #0]
 8002b78:	e78a      	b.n	8002a90 <_scanf_float+0x18c>
 8002b7a:	f04f 0a03 	mov.w	sl, #3
 8002b7e:	e787      	b.n	8002a90 <_scanf_float+0x18c>
 8002b80:	4639      	mov	r1, r7
 8002b82:	4640      	mov	r0, r8
 8002b84:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8002b88:	4798      	blx	r3
 8002b8a:	2800      	cmp	r0, #0
 8002b8c:	f43f aedf 	beq.w	800294e <_scanf_float+0x4a>
 8002b90:	e6ea      	b.n	8002968 <_scanf_float+0x64>
 8002b92:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002b96:	463a      	mov	r2, r7
 8002b98:	4640      	mov	r0, r8
 8002b9a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002b9e:	4798      	blx	r3
 8002ba0:	6923      	ldr	r3, [r4, #16]
 8002ba2:	3b01      	subs	r3, #1
 8002ba4:	6123      	str	r3, [r4, #16]
 8002ba6:	e6ec      	b.n	8002982 <_scanf_float+0x7e>
 8002ba8:	1e6b      	subs	r3, r5, #1
 8002baa:	2b06      	cmp	r3, #6
 8002bac:	d825      	bhi.n	8002bfa <_scanf_float+0x2f6>
 8002bae:	2d02      	cmp	r5, #2
 8002bb0:	d836      	bhi.n	8002c20 <_scanf_float+0x31c>
 8002bb2:	455e      	cmp	r6, fp
 8002bb4:	f67f aee8 	bls.w	8002988 <_scanf_float+0x84>
 8002bb8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002bbc:	463a      	mov	r2, r7
 8002bbe:	4640      	mov	r0, r8
 8002bc0:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002bc4:	4798      	blx	r3
 8002bc6:	6923      	ldr	r3, [r4, #16]
 8002bc8:	3b01      	subs	r3, #1
 8002bca:	6123      	str	r3, [r4, #16]
 8002bcc:	e7f1      	b.n	8002bb2 <_scanf_float+0x2ae>
 8002bce:	9802      	ldr	r0, [sp, #8]
 8002bd0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002bd4:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8002bd8:	463a      	mov	r2, r7
 8002bda:	9002      	str	r0, [sp, #8]
 8002bdc:	4640      	mov	r0, r8
 8002bde:	4798      	blx	r3
 8002be0:	6923      	ldr	r3, [r4, #16]
 8002be2:	3b01      	subs	r3, #1
 8002be4:	6123      	str	r3, [r4, #16]
 8002be6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002bea:	fa5f fa8a 	uxtb.w	sl, sl
 8002bee:	f1ba 0f02 	cmp.w	sl, #2
 8002bf2:	d1ec      	bne.n	8002bce <_scanf_float+0x2ca>
 8002bf4:	3d03      	subs	r5, #3
 8002bf6:	b2ed      	uxtb	r5, r5
 8002bf8:	1b76      	subs	r6, r6, r5
 8002bfa:	6823      	ldr	r3, [r4, #0]
 8002bfc:	05da      	lsls	r2, r3, #23
 8002bfe:	d52f      	bpl.n	8002c60 <_scanf_float+0x35c>
 8002c00:	055b      	lsls	r3, r3, #21
 8002c02:	d510      	bpl.n	8002c26 <_scanf_float+0x322>
 8002c04:	455e      	cmp	r6, fp
 8002c06:	f67f aebf 	bls.w	8002988 <_scanf_float+0x84>
 8002c0a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002c0e:	463a      	mov	r2, r7
 8002c10:	4640      	mov	r0, r8
 8002c12:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002c16:	4798      	blx	r3
 8002c18:	6923      	ldr	r3, [r4, #16]
 8002c1a:	3b01      	subs	r3, #1
 8002c1c:	6123      	str	r3, [r4, #16]
 8002c1e:	e7f1      	b.n	8002c04 <_scanf_float+0x300>
 8002c20:	46aa      	mov	sl, r5
 8002c22:	9602      	str	r6, [sp, #8]
 8002c24:	e7df      	b.n	8002be6 <_scanf_float+0x2e2>
 8002c26:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8002c2a:	6923      	ldr	r3, [r4, #16]
 8002c2c:	2965      	cmp	r1, #101	; 0x65
 8002c2e:	f103 33ff 	add.w	r3, r3, #4294967295
 8002c32:	f106 35ff 	add.w	r5, r6, #4294967295
 8002c36:	6123      	str	r3, [r4, #16]
 8002c38:	d00c      	beq.n	8002c54 <_scanf_float+0x350>
 8002c3a:	2945      	cmp	r1, #69	; 0x45
 8002c3c:	d00a      	beq.n	8002c54 <_scanf_float+0x350>
 8002c3e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002c42:	463a      	mov	r2, r7
 8002c44:	4640      	mov	r0, r8
 8002c46:	4798      	blx	r3
 8002c48:	6923      	ldr	r3, [r4, #16]
 8002c4a:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8002c4e:	3b01      	subs	r3, #1
 8002c50:	1eb5      	subs	r5, r6, #2
 8002c52:	6123      	str	r3, [r4, #16]
 8002c54:	463a      	mov	r2, r7
 8002c56:	4640      	mov	r0, r8
 8002c58:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002c5c:	4798      	blx	r3
 8002c5e:	462e      	mov	r6, r5
 8002c60:	6825      	ldr	r5, [r4, #0]
 8002c62:	f015 0510 	ands.w	r5, r5, #16
 8002c66:	d155      	bne.n	8002d14 <_scanf_float+0x410>
 8002c68:	7035      	strb	r5, [r6, #0]
 8002c6a:	6823      	ldr	r3, [r4, #0]
 8002c6c:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002c70:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002c74:	d11b      	bne.n	8002cae <_scanf_float+0x3aa>
 8002c76:	9b01      	ldr	r3, [sp, #4]
 8002c78:	454b      	cmp	r3, r9
 8002c7a:	eba3 0209 	sub.w	r2, r3, r9
 8002c7e:	d123      	bne.n	8002cc8 <_scanf_float+0x3c4>
 8002c80:	2200      	movs	r2, #0
 8002c82:	4659      	mov	r1, fp
 8002c84:	4640      	mov	r0, r8
 8002c86:	f000 fe7b 	bl	8003980 <_strtod_r>
 8002c8a:	6822      	ldr	r2, [r4, #0]
 8002c8c:	9b03      	ldr	r3, [sp, #12]
 8002c8e:	f012 0f02 	tst.w	r2, #2
 8002c92:	4606      	mov	r6, r0
 8002c94:	460f      	mov	r7, r1
 8002c96:	681b      	ldr	r3, [r3, #0]
 8002c98:	d021      	beq.n	8002cde <_scanf_float+0x3da>
 8002c9a:	1d1a      	adds	r2, r3, #4
 8002c9c:	9903      	ldr	r1, [sp, #12]
 8002c9e:	600a      	str	r2, [r1, #0]
 8002ca0:	681b      	ldr	r3, [r3, #0]
 8002ca2:	e9c3 6700 	strd	r6, r7, [r3]
 8002ca6:	68e3      	ldr	r3, [r4, #12]
 8002ca8:	3301      	adds	r3, #1
 8002caa:	60e3      	str	r3, [r4, #12]
 8002cac:	e66d      	b.n	800298a <_scanf_float+0x86>
 8002cae:	9b04      	ldr	r3, [sp, #16]
 8002cb0:	2b00      	cmp	r3, #0
 8002cb2:	d0e5      	beq.n	8002c80 <_scanf_float+0x37c>
 8002cb4:	9905      	ldr	r1, [sp, #20]
 8002cb6:	230a      	movs	r3, #10
 8002cb8:	462a      	mov	r2, r5
 8002cba:	4640      	mov	r0, r8
 8002cbc:	3101      	adds	r1, #1
 8002cbe:	f000 fee1 	bl	8003a84 <_strtol_r>
 8002cc2:	9b04      	ldr	r3, [sp, #16]
 8002cc4:	9e05      	ldr	r6, [sp, #20]
 8002cc6:	1ac2      	subs	r2, r0, r3
 8002cc8:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8002ccc:	429e      	cmp	r6, r3
 8002cce:	bf28      	it	cs
 8002cd0:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8002cd4:	4630      	mov	r0, r6
 8002cd6:	4910      	ldr	r1, [pc, #64]	; (8002d18 <_scanf_float+0x414>)
 8002cd8:	f000 f826 	bl	8002d28 <siprintf>
 8002cdc:	e7d0      	b.n	8002c80 <_scanf_float+0x37c>
 8002cde:	f012 0f04 	tst.w	r2, #4
 8002ce2:	f103 0204 	add.w	r2, r3, #4
 8002ce6:	d1d9      	bne.n	8002c9c <_scanf_float+0x398>
 8002ce8:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8002cec:	f8cc 2000 	str.w	r2, [ip]
 8002cf0:	f8d3 8000 	ldr.w	r8, [r3]
 8002cf4:	4602      	mov	r2, r0
 8002cf6:	460b      	mov	r3, r1
 8002cf8:	f7fd fef4 	bl	8000ae4 <__aeabi_dcmpun>
 8002cfc:	b128      	cbz	r0, 8002d0a <_scanf_float+0x406>
 8002cfe:	4807      	ldr	r0, [pc, #28]	; (8002d1c <_scanf_float+0x418>)
 8002d00:	f000 f80e 	bl	8002d20 <nanf>
 8002d04:	f8c8 0000 	str.w	r0, [r8]
 8002d08:	e7cd      	b.n	8002ca6 <_scanf_float+0x3a2>
 8002d0a:	4630      	mov	r0, r6
 8002d0c:	4639      	mov	r1, r7
 8002d0e:	f7fd ff47 	bl	8000ba0 <__aeabi_d2f>
 8002d12:	e7f7      	b.n	8002d04 <_scanf_float+0x400>
 8002d14:	2500      	movs	r5, #0
 8002d16:	e638      	b.n	800298a <_scanf_float+0x86>
 8002d18:	08006918 	.word	0x08006918
 8002d1c:	08006d20 	.word	0x08006d20

08002d20 <nanf>:
 8002d20:	4800      	ldr	r0, [pc, #0]	; (8002d24 <nanf+0x4>)
 8002d22:	4770      	bx	lr
 8002d24:	7fc00000 	.word	0x7fc00000

08002d28 <siprintf>:
 8002d28:	b40e      	push	{r1, r2, r3}
 8002d2a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002d2e:	b500      	push	{lr}
 8002d30:	b09c      	sub	sp, #112	; 0x70
 8002d32:	ab1d      	add	r3, sp, #116	; 0x74
 8002d34:	9002      	str	r0, [sp, #8]
 8002d36:	9006      	str	r0, [sp, #24]
 8002d38:	9107      	str	r1, [sp, #28]
 8002d3a:	9104      	str	r1, [sp, #16]
 8002d3c:	4808      	ldr	r0, [pc, #32]	; (8002d60 <siprintf+0x38>)
 8002d3e:	4909      	ldr	r1, [pc, #36]	; (8002d64 <siprintf+0x3c>)
 8002d40:	f853 2b04 	ldr.w	r2, [r3], #4
 8002d44:	9105      	str	r1, [sp, #20]
 8002d46:	6800      	ldr	r0, [r0, #0]
 8002d48:	a902      	add	r1, sp, #8
 8002d4a:	9301      	str	r3, [sp, #4]
 8002d4c:	f002 feba 	bl	8005ac4 <_svfiprintf_r>
 8002d50:	2200      	movs	r2, #0
 8002d52:	9b02      	ldr	r3, [sp, #8]
 8002d54:	701a      	strb	r2, [r3, #0]
 8002d56:	b01c      	add	sp, #112	; 0x70
 8002d58:	f85d eb04 	ldr.w	lr, [sp], #4
 8002d5c:	b003      	add	sp, #12
 8002d5e:	4770      	bx	lr
 8002d60:	2000000c 	.word	0x2000000c
 8002d64:	ffff0208 	.word	0xffff0208

08002d68 <sulp>:
 8002d68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002d6c:	460f      	mov	r7, r1
 8002d6e:	4690      	mov	r8, r2
 8002d70:	f002 fc14 	bl	800559c <__ulp>
 8002d74:	4604      	mov	r4, r0
 8002d76:	460d      	mov	r5, r1
 8002d78:	f1b8 0f00 	cmp.w	r8, #0
 8002d7c:	d011      	beq.n	8002da2 <sulp+0x3a>
 8002d7e:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8002d82:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8002d86:	2b00      	cmp	r3, #0
 8002d88:	dd0b      	ble.n	8002da2 <sulp+0x3a>
 8002d8a:	2400      	movs	r4, #0
 8002d8c:	051b      	lsls	r3, r3, #20
 8002d8e:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8002d92:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8002d96:	4622      	mov	r2, r4
 8002d98:	462b      	mov	r3, r5
 8002d9a:	f7fd fc09 	bl	80005b0 <__aeabi_dmul>
 8002d9e:	4604      	mov	r4, r0
 8002da0:	460d      	mov	r5, r1
 8002da2:	4620      	mov	r0, r4
 8002da4:	4629      	mov	r1, r5
 8002da6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002daa:	0000      	movs	r0, r0
 8002dac:	0000      	movs	r0, r0
	...

08002db0 <_strtod_l>:
 8002db0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002db4:	469b      	mov	fp, r3
 8002db6:	2300      	movs	r3, #0
 8002db8:	b09f      	sub	sp, #124	; 0x7c
 8002dba:	931a      	str	r3, [sp, #104]	; 0x68
 8002dbc:	4b9e      	ldr	r3, [pc, #632]	; (8003038 <_strtod_l+0x288>)
 8002dbe:	4682      	mov	sl, r0
 8002dc0:	681f      	ldr	r7, [r3, #0]
 8002dc2:	460e      	mov	r6, r1
 8002dc4:	4638      	mov	r0, r7
 8002dc6:	9215      	str	r2, [sp, #84]	; 0x54
 8002dc8:	f7fd fa2e 	bl	8000228 <strlen>
 8002dcc:	f04f 0800 	mov.w	r8, #0
 8002dd0:	4604      	mov	r4, r0
 8002dd2:	f04f 0900 	mov.w	r9, #0
 8002dd6:	9619      	str	r6, [sp, #100]	; 0x64
 8002dd8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002dda:	781a      	ldrb	r2, [r3, #0]
 8002ddc:	2a2b      	cmp	r2, #43	; 0x2b
 8002dde:	d04c      	beq.n	8002e7a <_strtod_l+0xca>
 8002de0:	d83a      	bhi.n	8002e58 <_strtod_l+0xa8>
 8002de2:	2a0d      	cmp	r2, #13
 8002de4:	d833      	bhi.n	8002e4e <_strtod_l+0x9e>
 8002de6:	2a08      	cmp	r2, #8
 8002de8:	d833      	bhi.n	8002e52 <_strtod_l+0xa2>
 8002dea:	2a00      	cmp	r2, #0
 8002dec:	d03d      	beq.n	8002e6a <_strtod_l+0xba>
 8002dee:	2300      	movs	r3, #0
 8002df0:	930a      	str	r3, [sp, #40]	; 0x28
 8002df2:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8002df4:	782b      	ldrb	r3, [r5, #0]
 8002df6:	2b30      	cmp	r3, #48	; 0x30
 8002df8:	f040 80aa 	bne.w	8002f50 <_strtod_l+0x1a0>
 8002dfc:	786b      	ldrb	r3, [r5, #1]
 8002dfe:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8002e02:	2b58      	cmp	r3, #88	; 0x58
 8002e04:	d166      	bne.n	8002ed4 <_strtod_l+0x124>
 8002e06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002e08:	4650      	mov	r0, sl
 8002e0a:	9301      	str	r3, [sp, #4]
 8002e0c:	ab1a      	add	r3, sp, #104	; 0x68
 8002e0e:	9300      	str	r3, [sp, #0]
 8002e10:	4a8a      	ldr	r2, [pc, #552]	; (800303c <_strtod_l+0x28c>)
 8002e12:	f8cd b008 	str.w	fp, [sp, #8]
 8002e16:	ab1b      	add	r3, sp, #108	; 0x6c
 8002e18:	a919      	add	r1, sp, #100	; 0x64
 8002e1a:	f001 fd17 	bl	800484c <__gethex>
 8002e1e:	f010 0607 	ands.w	r6, r0, #7
 8002e22:	4604      	mov	r4, r0
 8002e24:	d005      	beq.n	8002e32 <_strtod_l+0x82>
 8002e26:	2e06      	cmp	r6, #6
 8002e28:	d129      	bne.n	8002e7e <_strtod_l+0xce>
 8002e2a:	2300      	movs	r3, #0
 8002e2c:	3501      	adds	r5, #1
 8002e2e:	9519      	str	r5, [sp, #100]	; 0x64
 8002e30:	930a      	str	r3, [sp, #40]	; 0x28
 8002e32:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002e34:	2b00      	cmp	r3, #0
 8002e36:	f040 858a 	bne.w	800394e <_strtod_l+0xb9e>
 8002e3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002e3c:	b1d3      	cbz	r3, 8002e74 <_strtod_l+0xc4>
 8002e3e:	4642      	mov	r2, r8
 8002e40:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8002e44:	4610      	mov	r0, r2
 8002e46:	4619      	mov	r1, r3
 8002e48:	b01f      	add	sp, #124	; 0x7c
 8002e4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002e4e:	2a20      	cmp	r2, #32
 8002e50:	d1cd      	bne.n	8002dee <_strtod_l+0x3e>
 8002e52:	3301      	adds	r3, #1
 8002e54:	9319      	str	r3, [sp, #100]	; 0x64
 8002e56:	e7bf      	b.n	8002dd8 <_strtod_l+0x28>
 8002e58:	2a2d      	cmp	r2, #45	; 0x2d
 8002e5a:	d1c8      	bne.n	8002dee <_strtod_l+0x3e>
 8002e5c:	2201      	movs	r2, #1
 8002e5e:	920a      	str	r2, [sp, #40]	; 0x28
 8002e60:	1c5a      	adds	r2, r3, #1
 8002e62:	9219      	str	r2, [sp, #100]	; 0x64
 8002e64:	785b      	ldrb	r3, [r3, #1]
 8002e66:	2b00      	cmp	r3, #0
 8002e68:	d1c3      	bne.n	8002df2 <_strtod_l+0x42>
 8002e6a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002e6c:	9619      	str	r6, [sp, #100]	; 0x64
 8002e6e:	2b00      	cmp	r3, #0
 8002e70:	f040 856b 	bne.w	800394a <_strtod_l+0xb9a>
 8002e74:	4642      	mov	r2, r8
 8002e76:	464b      	mov	r3, r9
 8002e78:	e7e4      	b.n	8002e44 <_strtod_l+0x94>
 8002e7a:	2200      	movs	r2, #0
 8002e7c:	e7ef      	b.n	8002e5e <_strtod_l+0xae>
 8002e7e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8002e80:	b13a      	cbz	r2, 8002e92 <_strtod_l+0xe2>
 8002e82:	2135      	movs	r1, #53	; 0x35
 8002e84:	a81c      	add	r0, sp, #112	; 0x70
 8002e86:	f002 fc8d 	bl	80057a4 <__copybits>
 8002e8a:	4650      	mov	r0, sl
 8002e8c:	991a      	ldr	r1, [sp, #104]	; 0x68
 8002e8e:	f002 f855 	bl	8004f3c <_Bfree>
 8002e92:	3e01      	subs	r6, #1
 8002e94:	2e04      	cmp	r6, #4
 8002e96:	d806      	bhi.n	8002ea6 <_strtod_l+0xf6>
 8002e98:	e8df f006 	tbb	[pc, r6]
 8002e9c:	1714030a 	.word	0x1714030a
 8002ea0:	0a          	.byte	0x0a
 8002ea1:	00          	.byte	0x00
 8002ea2:	e9dd 891c 	ldrd	r8, r9, [sp, #112]	; 0x70
 8002ea6:	0721      	lsls	r1, r4, #28
 8002ea8:	d5c3      	bpl.n	8002e32 <_strtod_l+0x82>
 8002eaa:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 8002eae:	e7c0      	b.n	8002e32 <_strtod_l+0x82>
 8002eb0:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8002eb2:	e9dd 831c 	ldrd	r8, r3, [sp, #112]	; 0x70
 8002eb6:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8002eba:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8002ebe:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 8002ec2:	e7f0      	b.n	8002ea6 <_strtod_l+0xf6>
 8002ec4:	f8df 9178 	ldr.w	r9, [pc, #376]	; 8003040 <_strtod_l+0x290>
 8002ec8:	e7ed      	b.n	8002ea6 <_strtod_l+0xf6>
 8002eca:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 8002ece:	f04f 38ff 	mov.w	r8, #4294967295
 8002ed2:	e7e8      	b.n	8002ea6 <_strtod_l+0xf6>
 8002ed4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002ed6:	1c5a      	adds	r2, r3, #1
 8002ed8:	9219      	str	r2, [sp, #100]	; 0x64
 8002eda:	785b      	ldrb	r3, [r3, #1]
 8002edc:	2b30      	cmp	r3, #48	; 0x30
 8002ede:	d0f9      	beq.n	8002ed4 <_strtod_l+0x124>
 8002ee0:	2b00      	cmp	r3, #0
 8002ee2:	d0a6      	beq.n	8002e32 <_strtod_l+0x82>
 8002ee4:	2301      	movs	r3, #1
 8002ee6:	9307      	str	r3, [sp, #28]
 8002ee8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002eea:	220a      	movs	r2, #10
 8002eec:	9308      	str	r3, [sp, #32]
 8002eee:	2300      	movs	r3, #0
 8002ef0:	469b      	mov	fp, r3
 8002ef2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8002ef6:	9819      	ldr	r0, [sp, #100]	; 0x64
 8002ef8:	7805      	ldrb	r5, [r0, #0]
 8002efa:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 8002efe:	b2d9      	uxtb	r1, r3
 8002f00:	2909      	cmp	r1, #9
 8002f02:	d927      	bls.n	8002f54 <_strtod_l+0x1a4>
 8002f04:	4622      	mov	r2, r4
 8002f06:	4639      	mov	r1, r7
 8002f08:	f002 fef2 	bl	8005cf0 <strncmp>
 8002f0c:	2800      	cmp	r0, #0
 8002f0e:	d033      	beq.n	8002f78 <_strtod_l+0x1c8>
 8002f10:	2000      	movs	r0, #0
 8002f12:	462a      	mov	r2, r5
 8002f14:	465c      	mov	r4, fp
 8002f16:	4603      	mov	r3, r0
 8002f18:	9004      	str	r0, [sp, #16]
 8002f1a:	2a65      	cmp	r2, #101	; 0x65
 8002f1c:	d001      	beq.n	8002f22 <_strtod_l+0x172>
 8002f1e:	2a45      	cmp	r2, #69	; 0x45
 8002f20:	d114      	bne.n	8002f4c <_strtod_l+0x19c>
 8002f22:	b91c      	cbnz	r4, 8002f2c <_strtod_l+0x17c>
 8002f24:	9a07      	ldr	r2, [sp, #28]
 8002f26:	4302      	orrs	r2, r0
 8002f28:	d09f      	beq.n	8002e6a <_strtod_l+0xba>
 8002f2a:	2400      	movs	r4, #0
 8002f2c:	9e19      	ldr	r6, [sp, #100]	; 0x64
 8002f2e:	1c72      	adds	r2, r6, #1
 8002f30:	9219      	str	r2, [sp, #100]	; 0x64
 8002f32:	7872      	ldrb	r2, [r6, #1]
 8002f34:	2a2b      	cmp	r2, #43	; 0x2b
 8002f36:	d079      	beq.n	800302c <_strtod_l+0x27c>
 8002f38:	2a2d      	cmp	r2, #45	; 0x2d
 8002f3a:	f000 8083 	beq.w	8003044 <_strtod_l+0x294>
 8002f3e:	2700      	movs	r7, #0
 8002f40:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8002f44:	2909      	cmp	r1, #9
 8002f46:	f240 8083 	bls.w	8003050 <_strtod_l+0x2a0>
 8002f4a:	9619      	str	r6, [sp, #100]	; 0x64
 8002f4c:	2500      	movs	r5, #0
 8002f4e:	e09f      	b.n	8003090 <_strtod_l+0x2e0>
 8002f50:	2300      	movs	r3, #0
 8002f52:	e7c8      	b.n	8002ee6 <_strtod_l+0x136>
 8002f54:	f1bb 0f08 	cmp.w	fp, #8
 8002f58:	bfd5      	itete	le
 8002f5a:	9906      	ldrle	r1, [sp, #24]
 8002f5c:	9905      	ldrgt	r1, [sp, #20]
 8002f5e:	fb02 3301 	mlale	r3, r2, r1, r3
 8002f62:	fb02 3301 	mlagt	r3, r2, r1, r3
 8002f66:	f100 0001 	add.w	r0, r0, #1
 8002f6a:	bfd4      	ite	le
 8002f6c:	9306      	strle	r3, [sp, #24]
 8002f6e:	9305      	strgt	r3, [sp, #20]
 8002f70:	f10b 0b01 	add.w	fp, fp, #1
 8002f74:	9019      	str	r0, [sp, #100]	; 0x64
 8002f76:	e7be      	b.n	8002ef6 <_strtod_l+0x146>
 8002f78:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002f7a:	191a      	adds	r2, r3, r4
 8002f7c:	9219      	str	r2, [sp, #100]	; 0x64
 8002f7e:	5d1a      	ldrb	r2, [r3, r4]
 8002f80:	f1bb 0f00 	cmp.w	fp, #0
 8002f84:	d036      	beq.n	8002ff4 <_strtod_l+0x244>
 8002f86:	465c      	mov	r4, fp
 8002f88:	9004      	str	r0, [sp, #16]
 8002f8a:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8002f8e:	2b09      	cmp	r3, #9
 8002f90:	d912      	bls.n	8002fb8 <_strtod_l+0x208>
 8002f92:	2301      	movs	r3, #1
 8002f94:	e7c1      	b.n	8002f1a <_strtod_l+0x16a>
 8002f96:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002f98:	3001      	adds	r0, #1
 8002f9a:	1c5a      	adds	r2, r3, #1
 8002f9c:	9219      	str	r2, [sp, #100]	; 0x64
 8002f9e:	785a      	ldrb	r2, [r3, #1]
 8002fa0:	2a30      	cmp	r2, #48	; 0x30
 8002fa2:	d0f8      	beq.n	8002f96 <_strtod_l+0x1e6>
 8002fa4:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 8002fa8:	2b08      	cmp	r3, #8
 8002faa:	f200 84d5 	bhi.w	8003958 <_strtod_l+0xba8>
 8002fae:	9004      	str	r0, [sp, #16]
 8002fb0:	2000      	movs	r0, #0
 8002fb2:	4604      	mov	r4, r0
 8002fb4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002fb6:	9308      	str	r3, [sp, #32]
 8002fb8:	3a30      	subs	r2, #48	; 0x30
 8002fba:	f100 0301 	add.w	r3, r0, #1
 8002fbe:	d013      	beq.n	8002fe8 <_strtod_l+0x238>
 8002fc0:	9904      	ldr	r1, [sp, #16]
 8002fc2:	1905      	adds	r5, r0, r4
 8002fc4:	4419      	add	r1, r3
 8002fc6:	9104      	str	r1, [sp, #16]
 8002fc8:	4623      	mov	r3, r4
 8002fca:	210a      	movs	r1, #10
 8002fcc:	42ab      	cmp	r3, r5
 8002fce:	d113      	bne.n	8002ff8 <_strtod_l+0x248>
 8002fd0:	1823      	adds	r3, r4, r0
 8002fd2:	2b08      	cmp	r3, #8
 8002fd4:	f104 0401 	add.w	r4, r4, #1
 8002fd8:	4404      	add	r4, r0
 8002fda:	dc1b      	bgt.n	8003014 <_strtod_l+0x264>
 8002fdc:	230a      	movs	r3, #10
 8002fde:	9906      	ldr	r1, [sp, #24]
 8002fe0:	fb03 2301 	mla	r3, r3, r1, r2
 8002fe4:	9306      	str	r3, [sp, #24]
 8002fe6:	2300      	movs	r3, #0
 8002fe8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8002fea:	4618      	mov	r0, r3
 8002fec:	1c51      	adds	r1, r2, #1
 8002fee:	9119      	str	r1, [sp, #100]	; 0x64
 8002ff0:	7852      	ldrb	r2, [r2, #1]
 8002ff2:	e7ca      	b.n	8002f8a <_strtod_l+0x1da>
 8002ff4:	4658      	mov	r0, fp
 8002ff6:	e7d3      	b.n	8002fa0 <_strtod_l+0x1f0>
 8002ff8:	2b08      	cmp	r3, #8
 8002ffa:	dc04      	bgt.n	8003006 <_strtod_l+0x256>
 8002ffc:	9f06      	ldr	r7, [sp, #24]
 8002ffe:	434f      	muls	r7, r1
 8003000:	9706      	str	r7, [sp, #24]
 8003002:	3301      	adds	r3, #1
 8003004:	e7e2      	b.n	8002fcc <_strtod_l+0x21c>
 8003006:	1c5f      	adds	r7, r3, #1
 8003008:	2f10      	cmp	r7, #16
 800300a:	bfde      	ittt	le
 800300c:	9f05      	ldrle	r7, [sp, #20]
 800300e:	434f      	mulle	r7, r1
 8003010:	9705      	strle	r7, [sp, #20]
 8003012:	e7f6      	b.n	8003002 <_strtod_l+0x252>
 8003014:	2c10      	cmp	r4, #16
 8003016:	bfdf      	itttt	le
 8003018:	230a      	movle	r3, #10
 800301a:	9905      	ldrle	r1, [sp, #20]
 800301c:	fb03 2301 	mlale	r3, r3, r1, r2
 8003020:	9305      	strle	r3, [sp, #20]
 8003022:	e7e0      	b.n	8002fe6 <_strtod_l+0x236>
 8003024:	2300      	movs	r3, #0
 8003026:	9304      	str	r3, [sp, #16]
 8003028:	2301      	movs	r3, #1
 800302a:	e77b      	b.n	8002f24 <_strtod_l+0x174>
 800302c:	2700      	movs	r7, #0
 800302e:	1cb2      	adds	r2, r6, #2
 8003030:	9219      	str	r2, [sp, #100]	; 0x64
 8003032:	78b2      	ldrb	r2, [r6, #2]
 8003034:	e784      	b.n	8002f40 <_strtod_l+0x190>
 8003036:	bf00      	nop
 8003038:	08006b68 	.word	0x08006b68
 800303c:	08006920 	.word	0x08006920
 8003040:	7ff00000 	.word	0x7ff00000
 8003044:	2701      	movs	r7, #1
 8003046:	e7f2      	b.n	800302e <_strtod_l+0x27e>
 8003048:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800304a:	1c51      	adds	r1, r2, #1
 800304c:	9119      	str	r1, [sp, #100]	; 0x64
 800304e:	7852      	ldrb	r2, [r2, #1]
 8003050:	2a30      	cmp	r2, #48	; 0x30
 8003052:	d0f9      	beq.n	8003048 <_strtod_l+0x298>
 8003054:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8003058:	2908      	cmp	r1, #8
 800305a:	f63f af77 	bhi.w	8002f4c <_strtod_l+0x19c>
 800305e:	f04f 0e0a 	mov.w	lr, #10
 8003062:	f1a2 0c30 	sub.w	ip, r2, #48	; 0x30
 8003066:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8003068:	9209      	str	r2, [sp, #36]	; 0x24
 800306a:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800306c:	1c51      	adds	r1, r2, #1
 800306e:	9119      	str	r1, [sp, #100]	; 0x64
 8003070:	7852      	ldrb	r2, [r2, #1]
 8003072:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 8003076:	2d09      	cmp	r5, #9
 8003078:	d935      	bls.n	80030e6 <_strtod_l+0x336>
 800307a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800307c:	1b49      	subs	r1, r1, r5
 800307e:	2908      	cmp	r1, #8
 8003080:	f644 651f 	movw	r5, #19999	; 0x4e1f
 8003084:	dc02      	bgt.n	800308c <_strtod_l+0x2dc>
 8003086:	4565      	cmp	r5, ip
 8003088:	bfa8      	it	ge
 800308a:	4665      	movge	r5, ip
 800308c:	b107      	cbz	r7, 8003090 <_strtod_l+0x2e0>
 800308e:	426d      	negs	r5, r5
 8003090:	2c00      	cmp	r4, #0
 8003092:	d14c      	bne.n	800312e <_strtod_l+0x37e>
 8003094:	9907      	ldr	r1, [sp, #28]
 8003096:	4301      	orrs	r1, r0
 8003098:	f47f aecb 	bne.w	8002e32 <_strtod_l+0x82>
 800309c:	2b00      	cmp	r3, #0
 800309e:	f47f aee4 	bne.w	8002e6a <_strtod_l+0xba>
 80030a2:	2a69      	cmp	r2, #105	; 0x69
 80030a4:	d026      	beq.n	80030f4 <_strtod_l+0x344>
 80030a6:	dc23      	bgt.n	80030f0 <_strtod_l+0x340>
 80030a8:	2a49      	cmp	r2, #73	; 0x49
 80030aa:	d023      	beq.n	80030f4 <_strtod_l+0x344>
 80030ac:	2a4e      	cmp	r2, #78	; 0x4e
 80030ae:	f47f aedc 	bne.w	8002e6a <_strtod_l+0xba>
 80030b2:	499d      	ldr	r1, [pc, #628]	; (8003328 <_strtod_l+0x578>)
 80030b4:	a819      	add	r0, sp, #100	; 0x64
 80030b6:	f001 fe17 	bl	8004ce8 <__match>
 80030ba:	2800      	cmp	r0, #0
 80030bc:	f43f aed5 	beq.w	8002e6a <_strtod_l+0xba>
 80030c0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80030c2:	781b      	ldrb	r3, [r3, #0]
 80030c4:	2b28      	cmp	r3, #40	; 0x28
 80030c6:	d12c      	bne.n	8003122 <_strtod_l+0x372>
 80030c8:	4998      	ldr	r1, [pc, #608]	; (800332c <_strtod_l+0x57c>)
 80030ca:	aa1c      	add	r2, sp, #112	; 0x70
 80030cc:	a819      	add	r0, sp, #100	; 0x64
 80030ce:	f001 fe1f 	bl	8004d10 <__hexnan>
 80030d2:	2805      	cmp	r0, #5
 80030d4:	d125      	bne.n	8003122 <_strtod_l+0x372>
 80030d6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80030d8:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
 80030dc:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 80030e0:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 80030e4:	e6a5      	b.n	8002e32 <_strtod_l+0x82>
 80030e6:	fb0e 2c0c 	mla	ip, lr, ip, r2
 80030ea:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
 80030ee:	e7bc      	b.n	800306a <_strtod_l+0x2ba>
 80030f0:	2a6e      	cmp	r2, #110	; 0x6e
 80030f2:	e7dc      	b.n	80030ae <_strtod_l+0x2fe>
 80030f4:	498e      	ldr	r1, [pc, #568]	; (8003330 <_strtod_l+0x580>)
 80030f6:	a819      	add	r0, sp, #100	; 0x64
 80030f8:	f001 fdf6 	bl	8004ce8 <__match>
 80030fc:	2800      	cmp	r0, #0
 80030fe:	f43f aeb4 	beq.w	8002e6a <_strtod_l+0xba>
 8003102:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003104:	498b      	ldr	r1, [pc, #556]	; (8003334 <_strtod_l+0x584>)
 8003106:	3b01      	subs	r3, #1
 8003108:	a819      	add	r0, sp, #100	; 0x64
 800310a:	9319      	str	r3, [sp, #100]	; 0x64
 800310c:	f001 fdec 	bl	8004ce8 <__match>
 8003110:	b910      	cbnz	r0, 8003118 <_strtod_l+0x368>
 8003112:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003114:	3301      	adds	r3, #1
 8003116:	9319      	str	r3, [sp, #100]	; 0x64
 8003118:	f04f 0800 	mov.w	r8, #0
 800311c:	f8df 9218 	ldr.w	r9, [pc, #536]	; 8003338 <_strtod_l+0x588>
 8003120:	e687      	b.n	8002e32 <_strtod_l+0x82>
 8003122:	4886      	ldr	r0, [pc, #536]	; (800333c <_strtod_l+0x58c>)
 8003124:	f002 fdce 	bl	8005cc4 <nan>
 8003128:	4680      	mov	r8, r0
 800312a:	4689      	mov	r9, r1
 800312c:	e681      	b.n	8002e32 <_strtod_l+0x82>
 800312e:	9b04      	ldr	r3, [sp, #16]
 8003130:	f1bb 0f00 	cmp.w	fp, #0
 8003134:	bf08      	it	eq
 8003136:	46a3      	moveq	fp, r4
 8003138:	1aeb      	subs	r3, r5, r3
 800313a:	2c10      	cmp	r4, #16
 800313c:	9806      	ldr	r0, [sp, #24]
 800313e:	4626      	mov	r6, r4
 8003140:	9307      	str	r3, [sp, #28]
 8003142:	bfa8      	it	ge
 8003144:	2610      	movge	r6, #16
 8003146:	f7fd f9b9 	bl	80004bc <__aeabi_ui2d>
 800314a:	2c09      	cmp	r4, #9
 800314c:	4680      	mov	r8, r0
 800314e:	4689      	mov	r9, r1
 8003150:	dd13      	ble.n	800317a <_strtod_l+0x3ca>
 8003152:	4b7b      	ldr	r3, [pc, #492]	; (8003340 <_strtod_l+0x590>)
 8003154:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8003158:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800315c:	f7fd fa28 	bl	80005b0 <__aeabi_dmul>
 8003160:	4680      	mov	r8, r0
 8003162:	9805      	ldr	r0, [sp, #20]
 8003164:	4689      	mov	r9, r1
 8003166:	f7fd f9a9 	bl	80004bc <__aeabi_ui2d>
 800316a:	4602      	mov	r2, r0
 800316c:	460b      	mov	r3, r1
 800316e:	4640      	mov	r0, r8
 8003170:	4649      	mov	r1, r9
 8003172:	f7fd f867 	bl	8000244 <__adddf3>
 8003176:	4680      	mov	r8, r0
 8003178:	4689      	mov	r9, r1
 800317a:	2c0f      	cmp	r4, #15
 800317c:	dc36      	bgt.n	80031ec <_strtod_l+0x43c>
 800317e:	9b07      	ldr	r3, [sp, #28]
 8003180:	2b00      	cmp	r3, #0
 8003182:	f43f ae56 	beq.w	8002e32 <_strtod_l+0x82>
 8003186:	dd22      	ble.n	80031ce <_strtod_l+0x41e>
 8003188:	2b16      	cmp	r3, #22
 800318a:	dc09      	bgt.n	80031a0 <_strtod_l+0x3f0>
 800318c:	496c      	ldr	r1, [pc, #432]	; (8003340 <_strtod_l+0x590>)
 800318e:	4642      	mov	r2, r8
 8003190:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8003194:	464b      	mov	r3, r9
 8003196:	e9d1 0100 	ldrd	r0, r1, [r1]
 800319a:	f7fd fa09 	bl	80005b0 <__aeabi_dmul>
 800319e:	e7c3      	b.n	8003128 <_strtod_l+0x378>
 80031a0:	9a07      	ldr	r2, [sp, #28]
 80031a2:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 80031a6:	4293      	cmp	r3, r2
 80031a8:	db20      	blt.n	80031ec <_strtod_l+0x43c>
 80031aa:	4d65      	ldr	r5, [pc, #404]	; (8003340 <_strtod_l+0x590>)
 80031ac:	f1c4 040f 	rsb	r4, r4, #15
 80031b0:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 80031b4:	4642      	mov	r2, r8
 80031b6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80031ba:	464b      	mov	r3, r9
 80031bc:	f7fd f9f8 	bl	80005b0 <__aeabi_dmul>
 80031c0:	9b07      	ldr	r3, [sp, #28]
 80031c2:	1b1c      	subs	r4, r3, r4
 80031c4:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 80031c8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80031cc:	e7e5      	b.n	800319a <_strtod_l+0x3ea>
 80031ce:	9b07      	ldr	r3, [sp, #28]
 80031d0:	3316      	adds	r3, #22
 80031d2:	db0b      	blt.n	80031ec <_strtod_l+0x43c>
 80031d4:	9b04      	ldr	r3, [sp, #16]
 80031d6:	4640      	mov	r0, r8
 80031d8:	1b5d      	subs	r5, r3, r5
 80031da:	4b59      	ldr	r3, [pc, #356]	; (8003340 <_strtod_l+0x590>)
 80031dc:	4649      	mov	r1, r9
 80031de:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 80031e2:	e9d5 2300 	ldrd	r2, r3, [r5]
 80031e6:	f7fd fb0d 	bl	8000804 <__aeabi_ddiv>
 80031ea:	e79d      	b.n	8003128 <_strtod_l+0x378>
 80031ec:	9b07      	ldr	r3, [sp, #28]
 80031ee:	1ba6      	subs	r6, r4, r6
 80031f0:	441e      	add	r6, r3
 80031f2:	2e00      	cmp	r6, #0
 80031f4:	dd74      	ble.n	80032e0 <_strtod_l+0x530>
 80031f6:	f016 030f 	ands.w	r3, r6, #15
 80031fa:	d00a      	beq.n	8003212 <_strtod_l+0x462>
 80031fc:	4950      	ldr	r1, [pc, #320]	; (8003340 <_strtod_l+0x590>)
 80031fe:	4642      	mov	r2, r8
 8003200:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8003204:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003208:	464b      	mov	r3, r9
 800320a:	f7fd f9d1 	bl	80005b0 <__aeabi_dmul>
 800320e:	4680      	mov	r8, r0
 8003210:	4689      	mov	r9, r1
 8003212:	f036 060f 	bics.w	r6, r6, #15
 8003216:	d052      	beq.n	80032be <_strtod_l+0x50e>
 8003218:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
 800321c:	dd27      	ble.n	800326e <_strtod_l+0x4be>
 800321e:	f04f 0b00 	mov.w	fp, #0
 8003222:	f8cd b010 	str.w	fp, [sp, #16]
 8003226:	f8cd b020 	str.w	fp, [sp, #32]
 800322a:	f8cd b018 	str.w	fp, [sp, #24]
 800322e:	2322      	movs	r3, #34	; 0x22
 8003230:	f04f 0800 	mov.w	r8, #0
 8003234:	f8df 9100 	ldr.w	r9, [pc, #256]	; 8003338 <_strtod_l+0x588>
 8003238:	f8ca 3000 	str.w	r3, [sl]
 800323c:	9b08      	ldr	r3, [sp, #32]
 800323e:	2b00      	cmp	r3, #0
 8003240:	f43f adf7 	beq.w	8002e32 <_strtod_l+0x82>
 8003244:	4650      	mov	r0, sl
 8003246:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003248:	f001 fe78 	bl	8004f3c <_Bfree>
 800324c:	4650      	mov	r0, sl
 800324e:	9906      	ldr	r1, [sp, #24]
 8003250:	f001 fe74 	bl	8004f3c <_Bfree>
 8003254:	4650      	mov	r0, sl
 8003256:	9904      	ldr	r1, [sp, #16]
 8003258:	f001 fe70 	bl	8004f3c <_Bfree>
 800325c:	4650      	mov	r0, sl
 800325e:	9908      	ldr	r1, [sp, #32]
 8003260:	f001 fe6c 	bl	8004f3c <_Bfree>
 8003264:	4659      	mov	r1, fp
 8003266:	4650      	mov	r0, sl
 8003268:	f001 fe68 	bl	8004f3c <_Bfree>
 800326c:	e5e1      	b.n	8002e32 <_strtod_l+0x82>
 800326e:	4b35      	ldr	r3, [pc, #212]	; (8003344 <_strtod_l+0x594>)
 8003270:	4640      	mov	r0, r8
 8003272:	9305      	str	r3, [sp, #20]
 8003274:	2300      	movs	r3, #0
 8003276:	4649      	mov	r1, r9
 8003278:	461f      	mov	r7, r3
 800327a:	1136      	asrs	r6, r6, #4
 800327c:	2e01      	cmp	r6, #1
 800327e:	dc21      	bgt.n	80032c4 <_strtod_l+0x514>
 8003280:	b10b      	cbz	r3, 8003286 <_strtod_l+0x4d6>
 8003282:	4680      	mov	r8, r0
 8003284:	4689      	mov	r9, r1
 8003286:	4b2f      	ldr	r3, [pc, #188]	; (8003344 <_strtod_l+0x594>)
 8003288:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 800328c:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8003290:	4642      	mov	r2, r8
 8003292:	e9d7 0100 	ldrd	r0, r1, [r7]
 8003296:	464b      	mov	r3, r9
 8003298:	f7fd f98a 	bl	80005b0 <__aeabi_dmul>
 800329c:	4b26      	ldr	r3, [pc, #152]	; (8003338 <_strtod_l+0x588>)
 800329e:	460a      	mov	r2, r1
 80032a0:	400b      	ands	r3, r1
 80032a2:	4929      	ldr	r1, [pc, #164]	; (8003348 <_strtod_l+0x598>)
 80032a4:	4680      	mov	r8, r0
 80032a6:	428b      	cmp	r3, r1
 80032a8:	d8b9      	bhi.n	800321e <_strtod_l+0x46e>
 80032aa:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 80032ae:	428b      	cmp	r3, r1
 80032b0:	bf86      	itte	hi
 80032b2:	f04f 38ff 	movhi.w	r8, #4294967295
 80032b6:	f8df 9094 	ldrhi.w	r9, [pc, #148]	; 800334c <_strtod_l+0x59c>
 80032ba:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 80032be:	2300      	movs	r3, #0
 80032c0:	9305      	str	r3, [sp, #20]
 80032c2:	e07f      	b.n	80033c4 <_strtod_l+0x614>
 80032c4:	07f2      	lsls	r2, r6, #31
 80032c6:	d505      	bpl.n	80032d4 <_strtod_l+0x524>
 80032c8:	9b05      	ldr	r3, [sp, #20]
 80032ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032ce:	f7fd f96f 	bl	80005b0 <__aeabi_dmul>
 80032d2:	2301      	movs	r3, #1
 80032d4:	9a05      	ldr	r2, [sp, #20]
 80032d6:	3701      	adds	r7, #1
 80032d8:	3208      	adds	r2, #8
 80032da:	1076      	asrs	r6, r6, #1
 80032dc:	9205      	str	r2, [sp, #20]
 80032de:	e7cd      	b.n	800327c <_strtod_l+0x4cc>
 80032e0:	d0ed      	beq.n	80032be <_strtod_l+0x50e>
 80032e2:	4276      	negs	r6, r6
 80032e4:	f016 020f 	ands.w	r2, r6, #15
 80032e8:	d00a      	beq.n	8003300 <_strtod_l+0x550>
 80032ea:	4b15      	ldr	r3, [pc, #84]	; (8003340 <_strtod_l+0x590>)
 80032ec:	4640      	mov	r0, r8
 80032ee:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80032f2:	4649      	mov	r1, r9
 80032f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032f8:	f7fd fa84 	bl	8000804 <__aeabi_ddiv>
 80032fc:	4680      	mov	r8, r0
 80032fe:	4689      	mov	r9, r1
 8003300:	1136      	asrs	r6, r6, #4
 8003302:	d0dc      	beq.n	80032be <_strtod_l+0x50e>
 8003304:	2e1f      	cmp	r6, #31
 8003306:	dd23      	ble.n	8003350 <_strtod_l+0x5a0>
 8003308:	f04f 0b00 	mov.w	fp, #0
 800330c:	f8cd b010 	str.w	fp, [sp, #16]
 8003310:	f8cd b020 	str.w	fp, [sp, #32]
 8003314:	f8cd b018 	str.w	fp, [sp, #24]
 8003318:	2322      	movs	r3, #34	; 0x22
 800331a:	f04f 0800 	mov.w	r8, #0
 800331e:	f04f 0900 	mov.w	r9, #0
 8003322:	f8ca 3000 	str.w	r3, [sl]
 8003326:	e789      	b.n	800323c <_strtod_l+0x48c>
 8003328:	080068f1 	.word	0x080068f1
 800332c:	08006934 	.word	0x08006934
 8003330:	080068e9 	.word	0x080068e9
 8003334:	08006a74 	.word	0x08006a74
 8003338:	7ff00000 	.word	0x7ff00000
 800333c:	08006d20 	.word	0x08006d20
 8003340:	08006c00 	.word	0x08006c00
 8003344:	08006bd8 	.word	0x08006bd8
 8003348:	7ca00000 	.word	0x7ca00000
 800334c:	7fefffff 	.word	0x7fefffff
 8003350:	f016 0310 	ands.w	r3, r6, #16
 8003354:	bf18      	it	ne
 8003356:	236a      	movne	r3, #106	; 0x6a
 8003358:	4640      	mov	r0, r8
 800335a:	9305      	str	r3, [sp, #20]
 800335c:	4649      	mov	r1, r9
 800335e:	2300      	movs	r3, #0
 8003360:	4fb0      	ldr	r7, [pc, #704]	; (8003624 <_strtod_l+0x874>)
 8003362:	07f2      	lsls	r2, r6, #31
 8003364:	d504      	bpl.n	8003370 <_strtod_l+0x5c0>
 8003366:	e9d7 2300 	ldrd	r2, r3, [r7]
 800336a:	f7fd f921 	bl	80005b0 <__aeabi_dmul>
 800336e:	2301      	movs	r3, #1
 8003370:	1076      	asrs	r6, r6, #1
 8003372:	f107 0708 	add.w	r7, r7, #8
 8003376:	d1f4      	bne.n	8003362 <_strtod_l+0x5b2>
 8003378:	b10b      	cbz	r3, 800337e <_strtod_l+0x5ce>
 800337a:	4680      	mov	r8, r0
 800337c:	4689      	mov	r9, r1
 800337e:	9b05      	ldr	r3, [sp, #20]
 8003380:	b1c3      	cbz	r3, 80033b4 <_strtod_l+0x604>
 8003382:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8003386:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 800338a:	2b00      	cmp	r3, #0
 800338c:	4649      	mov	r1, r9
 800338e:	dd11      	ble.n	80033b4 <_strtod_l+0x604>
 8003390:	2b1f      	cmp	r3, #31
 8003392:	f340 8127 	ble.w	80035e4 <_strtod_l+0x834>
 8003396:	2b34      	cmp	r3, #52	; 0x34
 8003398:	bfd8      	it	le
 800339a:	f04f 33ff 	movle.w	r3, #4294967295
 800339e:	f04f 0800 	mov.w	r8, #0
 80033a2:	bfcf      	iteee	gt
 80033a4:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 80033a8:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 80033ac:	fa03 f202 	lslle.w	r2, r3, r2
 80033b0:	ea02 0901 	andle.w	r9, r2, r1
 80033b4:	2200      	movs	r2, #0
 80033b6:	2300      	movs	r3, #0
 80033b8:	4640      	mov	r0, r8
 80033ba:	4649      	mov	r1, r9
 80033bc:	f7fd fb60 	bl	8000a80 <__aeabi_dcmpeq>
 80033c0:	2800      	cmp	r0, #0
 80033c2:	d1a1      	bne.n	8003308 <_strtod_l+0x558>
 80033c4:	9b06      	ldr	r3, [sp, #24]
 80033c6:	465a      	mov	r2, fp
 80033c8:	9300      	str	r3, [sp, #0]
 80033ca:	4650      	mov	r0, sl
 80033cc:	4623      	mov	r3, r4
 80033ce:	9908      	ldr	r1, [sp, #32]
 80033d0:	f001 fe1c 	bl	800500c <__s2b>
 80033d4:	9008      	str	r0, [sp, #32]
 80033d6:	2800      	cmp	r0, #0
 80033d8:	f43f af21 	beq.w	800321e <_strtod_l+0x46e>
 80033dc:	9b04      	ldr	r3, [sp, #16]
 80033de:	f04f 0b00 	mov.w	fp, #0
 80033e2:	1b5d      	subs	r5, r3, r5
 80033e4:	9b07      	ldr	r3, [sp, #28]
 80033e6:	f8cd b010 	str.w	fp, [sp, #16]
 80033ea:	2b00      	cmp	r3, #0
 80033ec:	bfb4      	ite	lt
 80033ee:	462b      	movlt	r3, r5
 80033f0:	2300      	movge	r3, #0
 80033f2:	930e      	str	r3, [sp, #56]	; 0x38
 80033f4:	9b07      	ldr	r3, [sp, #28]
 80033f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80033fa:	9314      	str	r3, [sp, #80]	; 0x50
 80033fc:	9b08      	ldr	r3, [sp, #32]
 80033fe:	4650      	mov	r0, sl
 8003400:	6859      	ldr	r1, [r3, #4]
 8003402:	f001 fd5b 	bl	8004ebc <_Balloc>
 8003406:	9006      	str	r0, [sp, #24]
 8003408:	2800      	cmp	r0, #0
 800340a:	f43f af10 	beq.w	800322e <_strtod_l+0x47e>
 800340e:	9b08      	ldr	r3, [sp, #32]
 8003410:	300c      	adds	r0, #12
 8003412:	691a      	ldr	r2, [r3, #16]
 8003414:	f103 010c 	add.w	r1, r3, #12
 8003418:	3202      	adds	r2, #2
 800341a:	0092      	lsls	r2, r2, #2
 800341c:	f001 fd40 	bl	8004ea0 <memcpy>
 8003420:	ab1c      	add	r3, sp, #112	; 0x70
 8003422:	9301      	str	r3, [sp, #4]
 8003424:	ab1b      	add	r3, sp, #108	; 0x6c
 8003426:	9300      	str	r3, [sp, #0]
 8003428:	4642      	mov	r2, r8
 800342a:	464b      	mov	r3, r9
 800342c:	4650      	mov	r0, sl
 800342e:	e9cd 890c 	strd	r8, r9, [sp, #48]	; 0x30
 8003432:	f002 f92d 	bl	8005690 <__d2b>
 8003436:	901a      	str	r0, [sp, #104]	; 0x68
 8003438:	2800      	cmp	r0, #0
 800343a:	f43f aef8 	beq.w	800322e <_strtod_l+0x47e>
 800343e:	2101      	movs	r1, #1
 8003440:	4650      	mov	r0, sl
 8003442:	f001 fe7b 	bl	800513c <__i2b>
 8003446:	4603      	mov	r3, r0
 8003448:	9004      	str	r0, [sp, #16]
 800344a:	2800      	cmp	r0, #0
 800344c:	f43f aeef 	beq.w	800322e <_strtod_l+0x47e>
 8003450:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8003452:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8003454:	2d00      	cmp	r5, #0
 8003456:	bfab      	itete	ge
 8003458:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 800345a:	9b14      	ldrlt	r3, [sp, #80]	; 0x50
 800345c:	18ee      	addge	r6, r5, r3
 800345e:	1b5c      	sublt	r4, r3, r5
 8003460:	9b05      	ldr	r3, [sp, #20]
 8003462:	bfa8      	it	ge
 8003464:	9c14      	ldrge	r4, [sp, #80]	; 0x50
 8003466:	eba5 0503 	sub.w	r5, r5, r3
 800346a:	4415      	add	r5, r2
 800346c:	4b6e      	ldr	r3, [pc, #440]	; (8003628 <_strtod_l+0x878>)
 800346e:	f105 35ff 	add.w	r5, r5, #4294967295
 8003472:	bfb8      	it	lt
 8003474:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 8003476:	429d      	cmp	r5, r3
 8003478:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 800347c:	f280 80c4 	bge.w	8003608 <_strtod_l+0x858>
 8003480:	1b5b      	subs	r3, r3, r5
 8003482:	2b1f      	cmp	r3, #31
 8003484:	f04f 0701 	mov.w	r7, #1
 8003488:	eba2 0203 	sub.w	r2, r2, r3
 800348c:	f300 80b1 	bgt.w	80035f2 <_strtod_l+0x842>
 8003490:	2500      	movs	r5, #0
 8003492:	fa07 f303 	lsl.w	r3, r7, r3
 8003496:	930f      	str	r3, [sp, #60]	; 0x3c
 8003498:	18b7      	adds	r7, r6, r2
 800349a:	9b05      	ldr	r3, [sp, #20]
 800349c:	42be      	cmp	r6, r7
 800349e:	4414      	add	r4, r2
 80034a0:	441c      	add	r4, r3
 80034a2:	4633      	mov	r3, r6
 80034a4:	bfa8      	it	ge
 80034a6:	463b      	movge	r3, r7
 80034a8:	42a3      	cmp	r3, r4
 80034aa:	bfa8      	it	ge
 80034ac:	4623      	movge	r3, r4
 80034ae:	2b00      	cmp	r3, #0
 80034b0:	bfc2      	ittt	gt
 80034b2:	1aff      	subgt	r7, r7, r3
 80034b4:	1ae4      	subgt	r4, r4, r3
 80034b6:	1af6      	subgt	r6, r6, r3
 80034b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80034ba:	2b00      	cmp	r3, #0
 80034bc:	dd17      	ble.n	80034ee <_strtod_l+0x73e>
 80034be:	461a      	mov	r2, r3
 80034c0:	4650      	mov	r0, sl
 80034c2:	9904      	ldr	r1, [sp, #16]
 80034c4:	f001 fef8 	bl	80052b8 <__pow5mult>
 80034c8:	9004      	str	r0, [sp, #16]
 80034ca:	2800      	cmp	r0, #0
 80034cc:	f43f aeaf 	beq.w	800322e <_strtod_l+0x47e>
 80034d0:	4601      	mov	r1, r0
 80034d2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80034d4:	4650      	mov	r0, sl
 80034d6:	f001 fe47 	bl	8005168 <__multiply>
 80034da:	9009      	str	r0, [sp, #36]	; 0x24
 80034dc:	2800      	cmp	r0, #0
 80034de:	f43f aea6 	beq.w	800322e <_strtod_l+0x47e>
 80034e2:	4650      	mov	r0, sl
 80034e4:	991a      	ldr	r1, [sp, #104]	; 0x68
 80034e6:	f001 fd29 	bl	8004f3c <_Bfree>
 80034ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80034ec:	931a      	str	r3, [sp, #104]	; 0x68
 80034ee:	2f00      	cmp	r7, #0
 80034f0:	f300 808e 	bgt.w	8003610 <_strtod_l+0x860>
 80034f4:	9b07      	ldr	r3, [sp, #28]
 80034f6:	2b00      	cmp	r3, #0
 80034f8:	dd08      	ble.n	800350c <_strtod_l+0x75c>
 80034fa:	4650      	mov	r0, sl
 80034fc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80034fe:	9906      	ldr	r1, [sp, #24]
 8003500:	f001 feda 	bl	80052b8 <__pow5mult>
 8003504:	9006      	str	r0, [sp, #24]
 8003506:	2800      	cmp	r0, #0
 8003508:	f43f ae91 	beq.w	800322e <_strtod_l+0x47e>
 800350c:	2c00      	cmp	r4, #0
 800350e:	dd08      	ble.n	8003522 <_strtod_l+0x772>
 8003510:	4622      	mov	r2, r4
 8003512:	4650      	mov	r0, sl
 8003514:	9906      	ldr	r1, [sp, #24]
 8003516:	f001 ff29 	bl	800536c <__lshift>
 800351a:	9006      	str	r0, [sp, #24]
 800351c:	2800      	cmp	r0, #0
 800351e:	f43f ae86 	beq.w	800322e <_strtod_l+0x47e>
 8003522:	2e00      	cmp	r6, #0
 8003524:	dd08      	ble.n	8003538 <_strtod_l+0x788>
 8003526:	4632      	mov	r2, r6
 8003528:	4650      	mov	r0, sl
 800352a:	9904      	ldr	r1, [sp, #16]
 800352c:	f001 ff1e 	bl	800536c <__lshift>
 8003530:	9004      	str	r0, [sp, #16]
 8003532:	2800      	cmp	r0, #0
 8003534:	f43f ae7b 	beq.w	800322e <_strtod_l+0x47e>
 8003538:	4650      	mov	r0, sl
 800353a:	9a06      	ldr	r2, [sp, #24]
 800353c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800353e:	f001 ffa1 	bl	8005484 <__mdiff>
 8003542:	4683      	mov	fp, r0
 8003544:	2800      	cmp	r0, #0
 8003546:	f43f ae72 	beq.w	800322e <_strtod_l+0x47e>
 800354a:	2400      	movs	r4, #0
 800354c:	68c3      	ldr	r3, [r0, #12]
 800354e:	9904      	ldr	r1, [sp, #16]
 8003550:	60c4      	str	r4, [r0, #12]
 8003552:	930b      	str	r3, [sp, #44]	; 0x2c
 8003554:	f001 ff7a 	bl	800544c <__mcmp>
 8003558:	42a0      	cmp	r0, r4
 800355a:	da6b      	bge.n	8003634 <_strtod_l+0x884>
 800355c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800355e:	ea53 0308 	orrs.w	r3, r3, r8
 8003562:	f040 8091 	bne.w	8003688 <_strtod_l+0x8d8>
 8003566:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800356a:	2b00      	cmp	r3, #0
 800356c:	f040 808c 	bne.w	8003688 <_strtod_l+0x8d8>
 8003570:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8003574:	0d1b      	lsrs	r3, r3, #20
 8003576:	051b      	lsls	r3, r3, #20
 8003578:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800357c:	f240 8084 	bls.w	8003688 <_strtod_l+0x8d8>
 8003580:	f8db 3014 	ldr.w	r3, [fp, #20]
 8003584:	b91b      	cbnz	r3, 800358e <_strtod_l+0x7de>
 8003586:	f8db 3010 	ldr.w	r3, [fp, #16]
 800358a:	2b01      	cmp	r3, #1
 800358c:	dd7c      	ble.n	8003688 <_strtod_l+0x8d8>
 800358e:	4659      	mov	r1, fp
 8003590:	2201      	movs	r2, #1
 8003592:	4650      	mov	r0, sl
 8003594:	f001 feea 	bl	800536c <__lshift>
 8003598:	9904      	ldr	r1, [sp, #16]
 800359a:	4683      	mov	fp, r0
 800359c:	f001 ff56 	bl	800544c <__mcmp>
 80035a0:	2800      	cmp	r0, #0
 80035a2:	dd71      	ble.n	8003688 <_strtod_l+0x8d8>
 80035a4:	9905      	ldr	r1, [sp, #20]
 80035a6:	464b      	mov	r3, r9
 80035a8:	4a20      	ldr	r2, [pc, #128]	; (800362c <_strtod_l+0x87c>)
 80035aa:	2900      	cmp	r1, #0
 80035ac:	f000 808c 	beq.w	80036c8 <_strtod_l+0x918>
 80035b0:	ea02 0109 	and.w	r1, r2, r9
 80035b4:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 80035b8:	f300 8086 	bgt.w	80036c8 <_strtod_l+0x918>
 80035bc:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 80035c0:	f77f aeaa 	ble.w	8003318 <_strtod_l+0x568>
 80035c4:	4640      	mov	r0, r8
 80035c6:	4649      	mov	r1, r9
 80035c8:	4b19      	ldr	r3, [pc, #100]	; (8003630 <_strtod_l+0x880>)
 80035ca:	2200      	movs	r2, #0
 80035cc:	f7fc fff0 	bl	80005b0 <__aeabi_dmul>
 80035d0:	460b      	mov	r3, r1
 80035d2:	4303      	orrs	r3, r0
 80035d4:	bf08      	it	eq
 80035d6:	2322      	moveq	r3, #34	; 0x22
 80035d8:	4680      	mov	r8, r0
 80035da:	4689      	mov	r9, r1
 80035dc:	bf08      	it	eq
 80035de:	f8ca 3000 	streq.w	r3, [sl]
 80035e2:	e62f      	b.n	8003244 <_strtod_l+0x494>
 80035e4:	f04f 32ff 	mov.w	r2, #4294967295
 80035e8:	fa02 f303 	lsl.w	r3, r2, r3
 80035ec:	ea03 0808 	and.w	r8, r3, r8
 80035f0:	e6e0      	b.n	80033b4 <_strtod_l+0x604>
 80035f2:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 80035f6:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 80035fa:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 80035fe:	35e2      	adds	r5, #226	; 0xe2
 8003600:	fa07 f505 	lsl.w	r5, r7, r5
 8003604:	970f      	str	r7, [sp, #60]	; 0x3c
 8003606:	e747      	b.n	8003498 <_strtod_l+0x6e8>
 8003608:	2301      	movs	r3, #1
 800360a:	2500      	movs	r5, #0
 800360c:	930f      	str	r3, [sp, #60]	; 0x3c
 800360e:	e743      	b.n	8003498 <_strtod_l+0x6e8>
 8003610:	463a      	mov	r2, r7
 8003612:	4650      	mov	r0, sl
 8003614:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003616:	f001 fea9 	bl	800536c <__lshift>
 800361a:	901a      	str	r0, [sp, #104]	; 0x68
 800361c:	2800      	cmp	r0, #0
 800361e:	f47f af69 	bne.w	80034f4 <_strtod_l+0x744>
 8003622:	e604      	b.n	800322e <_strtod_l+0x47e>
 8003624:	08006948 	.word	0x08006948
 8003628:	fffffc02 	.word	0xfffffc02
 800362c:	7ff00000 	.word	0x7ff00000
 8003630:	39500000 	.word	0x39500000
 8003634:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8003638:	d165      	bne.n	8003706 <_strtod_l+0x956>
 800363a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800363c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003640:	b35a      	cbz	r2, 800369a <_strtod_l+0x8ea>
 8003642:	4a99      	ldr	r2, [pc, #612]	; (80038a8 <_strtod_l+0xaf8>)
 8003644:	4293      	cmp	r3, r2
 8003646:	d12b      	bne.n	80036a0 <_strtod_l+0x8f0>
 8003648:	9b05      	ldr	r3, [sp, #20]
 800364a:	4641      	mov	r1, r8
 800364c:	b303      	cbz	r3, 8003690 <_strtod_l+0x8e0>
 800364e:	464a      	mov	r2, r9
 8003650:	4b96      	ldr	r3, [pc, #600]	; (80038ac <_strtod_l+0xafc>)
 8003652:	4013      	ands	r3, r2
 8003654:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8003658:	f04f 32ff 	mov.w	r2, #4294967295
 800365c:	d81b      	bhi.n	8003696 <_strtod_l+0x8e6>
 800365e:	0d1b      	lsrs	r3, r3, #20
 8003660:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8003664:	fa02 f303 	lsl.w	r3, r2, r3
 8003668:	4299      	cmp	r1, r3
 800366a:	d119      	bne.n	80036a0 <_strtod_l+0x8f0>
 800366c:	4b90      	ldr	r3, [pc, #576]	; (80038b0 <_strtod_l+0xb00>)
 800366e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003670:	429a      	cmp	r2, r3
 8003672:	d102      	bne.n	800367a <_strtod_l+0x8ca>
 8003674:	3101      	adds	r1, #1
 8003676:	f43f adda 	beq.w	800322e <_strtod_l+0x47e>
 800367a:	f04f 0800 	mov.w	r8, #0
 800367e:	4b8b      	ldr	r3, [pc, #556]	; (80038ac <_strtod_l+0xafc>)
 8003680:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003682:	401a      	ands	r2, r3
 8003684:	f502 1980 	add.w	r9, r2, #1048576	; 0x100000
 8003688:	9b05      	ldr	r3, [sp, #20]
 800368a:	2b00      	cmp	r3, #0
 800368c:	d19a      	bne.n	80035c4 <_strtod_l+0x814>
 800368e:	e5d9      	b.n	8003244 <_strtod_l+0x494>
 8003690:	f04f 33ff 	mov.w	r3, #4294967295
 8003694:	e7e8      	b.n	8003668 <_strtod_l+0x8b8>
 8003696:	4613      	mov	r3, r2
 8003698:	e7e6      	b.n	8003668 <_strtod_l+0x8b8>
 800369a:	ea53 0308 	orrs.w	r3, r3, r8
 800369e:	d081      	beq.n	80035a4 <_strtod_l+0x7f4>
 80036a0:	b1e5      	cbz	r5, 80036dc <_strtod_l+0x92c>
 80036a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80036a4:	421d      	tst	r5, r3
 80036a6:	d0ef      	beq.n	8003688 <_strtod_l+0x8d8>
 80036a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80036aa:	4640      	mov	r0, r8
 80036ac:	4649      	mov	r1, r9
 80036ae:	9a05      	ldr	r2, [sp, #20]
 80036b0:	b1c3      	cbz	r3, 80036e4 <_strtod_l+0x934>
 80036b2:	f7ff fb59 	bl	8002d68 <sulp>
 80036b6:	4602      	mov	r2, r0
 80036b8:	460b      	mov	r3, r1
 80036ba:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80036be:	f7fc fdc1 	bl	8000244 <__adddf3>
 80036c2:	4680      	mov	r8, r0
 80036c4:	4689      	mov	r9, r1
 80036c6:	e7df      	b.n	8003688 <_strtod_l+0x8d8>
 80036c8:	4013      	ands	r3, r2
 80036ca:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 80036ce:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 80036d2:	f04f 38ff 	mov.w	r8, #4294967295
 80036d6:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 80036da:	e7d5      	b.n	8003688 <_strtod_l+0x8d8>
 80036dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80036de:	ea13 0f08 	tst.w	r3, r8
 80036e2:	e7e0      	b.n	80036a6 <_strtod_l+0x8f6>
 80036e4:	f7ff fb40 	bl	8002d68 <sulp>
 80036e8:	4602      	mov	r2, r0
 80036ea:	460b      	mov	r3, r1
 80036ec:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80036f0:	f7fc fda6 	bl	8000240 <__aeabi_dsub>
 80036f4:	2200      	movs	r2, #0
 80036f6:	2300      	movs	r3, #0
 80036f8:	4680      	mov	r8, r0
 80036fa:	4689      	mov	r9, r1
 80036fc:	f7fd f9c0 	bl	8000a80 <__aeabi_dcmpeq>
 8003700:	2800      	cmp	r0, #0
 8003702:	d0c1      	beq.n	8003688 <_strtod_l+0x8d8>
 8003704:	e608      	b.n	8003318 <_strtod_l+0x568>
 8003706:	4658      	mov	r0, fp
 8003708:	9904      	ldr	r1, [sp, #16]
 800370a:	f002 f81d 	bl	8005748 <__ratio>
 800370e:	2200      	movs	r2, #0
 8003710:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003714:	4606      	mov	r6, r0
 8003716:	460f      	mov	r7, r1
 8003718:	f7fd f9c6 	bl	8000aa8 <__aeabi_dcmple>
 800371c:	2800      	cmp	r0, #0
 800371e:	d070      	beq.n	8003802 <_strtod_l+0xa52>
 8003720:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003722:	2b00      	cmp	r3, #0
 8003724:	d042      	beq.n	80037ac <_strtod_l+0x9fc>
 8003726:	2600      	movs	r6, #0
 8003728:	4f62      	ldr	r7, [pc, #392]	; (80038b4 <_strtod_l+0xb04>)
 800372a:	4d62      	ldr	r5, [pc, #392]	; (80038b4 <_strtod_l+0xb04>)
 800372c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800372e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003732:	0d1b      	lsrs	r3, r3, #20
 8003734:	051b      	lsls	r3, r3, #20
 8003736:	930f      	str	r3, [sp, #60]	; 0x3c
 8003738:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800373a:	4b5f      	ldr	r3, [pc, #380]	; (80038b8 <_strtod_l+0xb08>)
 800373c:	429a      	cmp	r2, r3
 800373e:	f040 80c3 	bne.w	80038c8 <_strtod_l+0xb18>
 8003742:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003744:	4640      	mov	r0, r8
 8003746:	f1a3 7954 	sub.w	r9, r3, #55574528	; 0x3500000
 800374a:	4649      	mov	r1, r9
 800374c:	f001 ff26 	bl	800559c <__ulp>
 8003750:	4602      	mov	r2, r0
 8003752:	460b      	mov	r3, r1
 8003754:	4630      	mov	r0, r6
 8003756:	4639      	mov	r1, r7
 8003758:	f7fc ff2a 	bl	80005b0 <__aeabi_dmul>
 800375c:	4642      	mov	r2, r8
 800375e:	464b      	mov	r3, r9
 8003760:	f7fc fd70 	bl	8000244 <__adddf3>
 8003764:	460b      	mov	r3, r1
 8003766:	4951      	ldr	r1, [pc, #324]	; (80038ac <_strtod_l+0xafc>)
 8003768:	4a54      	ldr	r2, [pc, #336]	; (80038bc <_strtod_l+0xb0c>)
 800376a:	4019      	ands	r1, r3
 800376c:	4291      	cmp	r1, r2
 800376e:	4680      	mov	r8, r0
 8003770:	d95d      	bls.n	800382e <_strtod_l+0xa7e>
 8003772:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003774:	4b4e      	ldr	r3, [pc, #312]	; (80038b0 <_strtod_l+0xb00>)
 8003776:	429a      	cmp	r2, r3
 8003778:	d103      	bne.n	8003782 <_strtod_l+0x9d2>
 800377a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800377c:	3301      	adds	r3, #1
 800377e:	f43f ad56 	beq.w	800322e <_strtod_l+0x47e>
 8003782:	f04f 38ff 	mov.w	r8, #4294967295
 8003786:	f8df 9128 	ldr.w	r9, [pc, #296]	; 80038b0 <_strtod_l+0xb00>
 800378a:	4650      	mov	r0, sl
 800378c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800378e:	f001 fbd5 	bl	8004f3c <_Bfree>
 8003792:	4650      	mov	r0, sl
 8003794:	9906      	ldr	r1, [sp, #24]
 8003796:	f001 fbd1 	bl	8004f3c <_Bfree>
 800379a:	4650      	mov	r0, sl
 800379c:	9904      	ldr	r1, [sp, #16]
 800379e:	f001 fbcd 	bl	8004f3c <_Bfree>
 80037a2:	4659      	mov	r1, fp
 80037a4:	4650      	mov	r0, sl
 80037a6:	f001 fbc9 	bl	8004f3c <_Bfree>
 80037aa:	e627      	b.n	80033fc <_strtod_l+0x64c>
 80037ac:	f1b8 0f00 	cmp.w	r8, #0
 80037b0:	d119      	bne.n	80037e6 <_strtod_l+0xa36>
 80037b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80037b4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80037b8:	b9e3      	cbnz	r3, 80037f4 <_strtod_l+0xa44>
 80037ba:	2200      	movs	r2, #0
 80037bc:	4630      	mov	r0, r6
 80037be:	4639      	mov	r1, r7
 80037c0:	4b3c      	ldr	r3, [pc, #240]	; (80038b4 <_strtod_l+0xb04>)
 80037c2:	f7fd f967 	bl	8000a94 <__aeabi_dcmplt>
 80037c6:	b9c8      	cbnz	r0, 80037fc <_strtod_l+0xa4c>
 80037c8:	2200      	movs	r2, #0
 80037ca:	4630      	mov	r0, r6
 80037cc:	4639      	mov	r1, r7
 80037ce:	4b3c      	ldr	r3, [pc, #240]	; (80038c0 <_strtod_l+0xb10>)
 80037d0:	f7fc feee 	bl	80005b0 <__aeabi_dmul>
 80037d4:	4604      	mov	r4, r0
 80037d6:	460d      	mov	r5, r1
 80037d8:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 80037dc:	9416      	str	r4, [sp, #88]	; 0x58
 80037de:	9317      	str	r3, [sp, #92]	; 0x5c
 80037e0:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
 80037e4:	e7a2      	b.n	800372c <_strtod_l+0x97c>
 80037e6:	f1b8 0f01 	cmp.w	r8, #1
 80037ea:	d103      	bne.n	80037f4 <_strtod_l+0xa44>
 80037ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80037ee:	2b00      	cmp	r3, #0
 80037f0:	f43f ad92 	beq.w	8003318 <_strtod_l+0x568>
 80037f4:	2600      	movs	r6, #0
 80037f6:	2400      	movs	r4, #0
 80037f8:	4f32      	ldr	r7, [pc, #200]	; (80038c4 <_strtod_l+0xb14>)
 80037fa:	e796      	b.n	800372a <_strtod_l+0x97a>
 80037fc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80037fe:	4d30      	ldr	r5, [pc, #192]	; (80038c0 <_strtod_l+0xb10>)
 8003800:	e7ea      	b.n	80037d8 <_strtod_l+0xa28>
 8003802:	4b2f      	ldr	r3, [pc, #188]	; (80038c0 <_strtod_l+0xb10>)
 8003804:	2200      	movs	r2, #0
 8003806:	4630      	mov	r0, r6
 8003808:	4639      	mov	r1, r7
 800380a:	f7fc fed1 	bl	80005b0 <__aeabi_dmul>
 800380e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003810:	4604      	mov	r4, r0
 8003812:	460d      	mov	r5, r1
 8003814:	b933      	cbnz	r3, 8003824 <_strtod_l+0xa74>
 8003816:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800381a:	9010      	str	r0, [sp, #64]	; 0x40
 800381c:	9311      	str	r3, [sp, #68]	; 0x44
 800381e:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8003822:	e783      	b.n	800372c <_strtod_l+0x97c>
 8003824:	4602      	mov	r2, r0
 8003826:	460b      	mov	r3, r1
 8003828:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 800382c:	e7f7      	b.n	800381e <_strtod_l+0xa6e>
 800382e:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 8003832:	9b05      	ldr	r3, [sp, #20]
 8003834:	2b00      	cmp	r3, #0
 8003836:	d1a8      	bne.n	800378a <_strtod_l+0x9da>
 8003838:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800383c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800383e:	0d1b      	lsrs	r3, r3, #20
 8003840:	051b      	lsls	r3, r3, #20
 8003842:	429a      	cmp	r2, r3
 8003844:	d1a1      	bne.n	800378a <_strtod_l+0x9da>
 8003846:	4620      	mov	r0, r4
 8003848:	4629      	mov	r1, r5
 800384a:	f7fd f9f9 	bl	8000c40 <__aeabi_d2lz>
 800384e:	f7fc fe81 	bl	8000554 <__aeabi_l2d>
 8003852:	4602      	mov	r2, r0
 8003854:	460b      	mov	r3, r1
 8003856:	4620      	mov	r0, r4
 8003858:	4629      	mov	r1, r5
 800385a:	f7fc fcf1 	bl	8000240 <__aeabi_dsub>
 800385e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003860:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003864:	ea43 0308 	orr.w	r3, r3, r8
 8003868:	4313      	orrs	r3, r2
 800386a:	4604      	mov	r4, r0
 800386c:	460d      	mov	r5, r1
 800386e:	d066      	beq.n	800393e <_strtod_l+0xb8e>
 8003870:	a309      	add	r3, pc, #36	; (adr r3, 8003898 <_strtod_l+0xae8>)
 8003872:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003876:	f7fd f90d 	bl	8000a94 <__aeabi_dcmplt>
 800387a:	2800      	cmp	r0, #0
 800387c:	f47f ace2 	bne.w	8003244 <_strtod_l+0x494>
 8003880:	a307      	add	r3, pc, #28	; (adr r3, 80038a0 <_strtod_l+0xaf0>)
 8003882:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003886:	4620      	mov	r0, r4
 8003888:	4629      	mov	r1, r5
 800388a:	f7fd f921 	bl	8000ad0 <__aeabi_dcmpgt>
 800388e:	2800      	cmp	r0, #0
 8003890:	f43f af7b 	beq.w	800378a <_strtod_l+0x9da>
 8003894:	e4d6      	b.n	8003244 <_strtod_l+0x494>
 8003896:	bf00      	nop
 8003898:	94a03595 	.word	0x94a03595
 800389c:	3fdfffff 	.word	0x3fdfffff
 80038a0:	35afe535 	.word	0x35afe535
 80038a4:	3fe00000 	.word	0x3fe00000
 80038a8:	000fffff 	.word	0x000fffff
 80038ac:	7ff00000 	.word	0x7ff00000
 80038b0:	7fefffff 	.word	0x7fefffff
 80038b4:	3ff00000 	.word	0x3ff00000
 80038b8:	7fe00000 	.word	0x7fe00000
 80038bc:	7c9fffff 	.word	0x7c9fffff
 80038c0:	3fe00000 	.word	0x3fe00000
 80038c4:	bff00000 	.word	0xbff00000
 80038c8:	9b05      	ldr	r3, [sp, #20]
 80038ca:	b313      	cbz	r3, 8003912 <_strtod_l+0xb62>
 80038cc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80038ce:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 80038d2:	d81e      	bhi.n	8003912 <_strtod_l+0xb62>
 80038d4:	a326      	add	r3, pc, #152	; (adr r3, 8003970 <_strtod_l+0xbc0>)
 80038d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80038da:	4620      	mov	r0, r4
 80038dc:	4629      	mov	r1, r5
 80038de:	f7fd f8e3 	bl	8000aa8 <__aeabi_dcmple>
 80038e2:	b190      	cbz	r0, 800390a <_strtod_l+0xb5a>
 80038e4:	4629      	mov	r1, r5
 80038e6:	4620      	mov	r0, r4
 80038e8:	f7fd f93a 	bl	8000b60 <__aeabi_d2uiz>
 80038ec:	2801      	cmp	r0, #1
 80038ee:	bf38      	it	cc
 80038f0:	2001      	movcc	r0, #1
 80038f2:	f7fc fde3 	bl	80004bc <__aeabi_ui2d>
 80038f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80038f8:	4604      	mov	r4, r0
 80038fa:	460d      	mov	r5, r1
 80038fc:	b9d3      	cbnz	r3, 8003934 <_strtod_l+0xb84>
 80038fe:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003902:	9012      	str	r0, [sp, #72]	; 0x48
 8003904:	9313      	str	r3, [sp, #76]	; 0x4c
 8003906:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 800390a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800390c:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 8003910:	1a9f      	subs	r7, r3, r2
 8003912:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003916:	f001 fe41 	bl	800559c <__ulp>
 800391a:	4602      	mov	r2, r0
 800391c:	460b      	mov	r3, r1
 800391e:	4630      	mov	r0, r6
 8003920:	4639      	mov	r1, r7
 8003922:	f7fc fe45 	bl	80005b0 <__aeabi_dmul>
 8003926:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800392a:	f7fc fc8b 	bl	8000244 <__adddf3>
 800392e:	4680      	mov	r8, r0
 8003930:	4689      	mov	r9, r1
 8003932:	e77e      	b.n	8003832 <_strtod_l+0xa82>
 8003934:	4602      	mov	r2, r0
 8003936:	460b      	mov	r3, r1
 8003938:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 800393c:	e7e3      	b.n	8003906 <_strtod_l+0xb56>
 800393e:	a30e      	add	r3, pc, #56	; (adr r3, 8003978 <_strtod_l+0xbc8>)
 8003940:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003944:	f7fd f8a6 	bl	8000a94 <__aeabi_dcmplt>
 8003948:	e7a1      	b.n	800388e <_strtod_l+0xade>
 800394a:	2300      	movs	r3, #0
 800394c:	930a      	str	r3, [sp, #40]	; 0x28
 800394e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003950:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8003952:	6013      	str	r3, [r2, #0]
 8003954:	f7ff ba71 	b.w	8002e3a <_strtod_l+0x8a>
 8003958:	2a65      	cmp	r2, #101	; 0x65
 800395a:	f43f ab63 	beq.w	8003024 <_strtod_l+0x274>
 800395e:	2a45      	cmp	r2, #69	; 0x45
 8003960:	f43f ab60 	beq.w	8003024 <_strtod_l+0x274>
 8003964:	2301      	movs	r3, #1
 8003966:	f7ff bb95 	b.w	8003094 <_strtod_l+0x2e4>
 800396a:	bf00      	nop
 800396c:	f3af 8000 	nop.w
 8003970:	ffc00000 	.word	0xffc00000
 8003974:	41dfffff 	.word	0x41dfffff
 8003978:	94a03595 	.word	0x94a03595
 800397c:	3fcfffff 	.word	0x3fcfffff

08003980 <_strtod_r>:
 8003980:	4b01      	ldr	r3, [pc, #4]	; (8003988 <_strtod_r+0x8>)
 8003982:	f7ff ba15 	b.w	8002db0 <_strtod_l>
 8003986:	bf00      	nop
 8003988:	20000074 	.word	0x20000074

0800398c <_strtol_l.constprop.0>:
 800398c:	2b01      	cmp	r3, #1
 800398e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003992:	4680      	mov	r8, r0
 8003994:	d001      	beq.n	800399a <_strtol_l.constprop.0+0xe>
 8003996:	2b24      	cmp	r3, #36	; 0x24
 8003998:	d906      	bls.n	80039a8 <_strtol_l.constprop.0+0x1c>
 800399a:	f7fe fb21 	bl	8001fe0 <__errno>
 800399e:	2316      	movs	r3, #22
 80039a0:	6003      	str	r3, [r0, #0]
 80039a2:	2000      	movs	r0, #0
 80039a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80039a8:	460d      	mov	r5, r1
 80039aa:	4f35      	ldr	r7, [pc, #212]	; (8003a80 <_strtol_l.constprop.0+0xf4>)
 80039ac:	4628      	mov	r0, r5
 80039ae:	f815 4b01 	ldrb.w	r4, [r5], #1
 80039b2:	5de6      	ldrb	r6, [r4, r7]
 80039b4:	f016 0608 	ands.w	r6, r6, #8
 80039b8:	d1f8      	bne.n	80039ac <_strtol_l.constprop.0+0x20>
 80039ba:	2c2d      	cmp	r4, #45	; 0x2d
 80039bc:	d12f      	bne.n	8003a1e <_strtol_l.constprop.0+0x92>
 80039be:	2601      	movs	r6, #1
 80039c0:	782c      	ldrb	r4, [r5, #0]
 80039c2:	1c85      	adds	r5, r0, #2
 80039c4:	2b00      	cmp	r3, #0
 80039c6:	d057      	beq.n	8003a78 <_strtol_l.constprop.0+0xec>
 80039c8:	2b10      	cmp	r3, #16
 80039ca:	d109      	bne.n	80039e0 <_strtol_l.constprop.0+0x54>
 80039cc:	2c30      	cmp	r4, #48	; 0x30
 80039ce:	d107      	bne.n	80039e0 <_strtol_l.constprop.0+0x54>
 80039d0:	7828      	ldrb	r0, [r5, #0]
 80039d2:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 80039d6:	2858      	cmp	r0, #88	; 0x58
 80039d8:	d149      	bne.n	8003a6e <_strtol_l.constprop.0+0xe2>
 80039da:	2310      	movs	r3, #16
 80039dc:	786c      	ldrb	r4, [r5, #1]
 80039de:	3502      	adds	r5, #2
 80039e0:	2700      	movs	r7, #0
 80039e2:	f106 4e00 	add.w	lr, r6, #2147483648	; 0x80000000
 80039e6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80039ea:	fbbe f9f3 	udiv	r9, lr, r3
 80039ee:	4638      	mov	r0, r7
 80039f0:	fb03 ea19 	mls	sl, r3, r9, lr
 80039f4:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80039f8:	f1bc 0f09 	cmp.w	ip, #9
 80039fc:	d814      	bhi.n	8003a28 <_strtol_l.constprop.0+0x9c>
 80039fe:	4664      	mov	r4, ip
 8003a00:	42a3      	cmp	r3, r4
 8003a02:	dd22      	ble.n	8003a4a <_strtol_l.constprop.0+0xbe>
 8003a04:	2f00      	cmp	r7, #0
 8003a06:	db1d      	blt.n	8003a44 <_strtol_l.constprop.0+0xb8>
 8003a08:	4581      	cmp	r9, r0
 8003a0a:	d31b      	bcc.n	8003a44 <_strtol_l.constprop.0+0xb8>
 8003a0c:	d101      	bne.n	8003a12 <_strtol_l.constprop.0+0x86>
 8003a0e:	45a2      	cmp	sl, r4
 8003a10:	db18      	blt.n	8003a44 <_strtol_l.constprop.0+0xb8>
 8003a12:	2701      	movs	r7, #1
 8003a14:	fb00 4003 	mla	r0, r0, r3, r4
 8003a18:	f815 4b01 	ldrb.w	r4, [r5], #1
 8003a1c:	e7ea      	b.n	80039f4 <_strtol_l.constprop.0+0x68>
 8003a1e:	2c2b      	cmp	r4, #43	; 0x2b
 8003a20:	bf04      	itt	eq
 8003a22:	782c      	ldrbeq	r4, [r5, #0]
 8003a24:	1c85      	addeq	r5, r0, #2
 8003a26:	e7cd      	b.n	80039c4 <_strtol_l.constprop.0+0x38>
 8003a28:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8003a2c:	f1bc 0f19 	cmp.w	ip, #25
 8003a30:	d801      	bhi.n	8003a36 <_strtol_l.constprop.0+0xaa>
 8003a32:	3c37      	subs	r4, #55	; 0x37
 8003a34:	e7e4      	b.n	8003a00 <_strtol_l.constprop.0+0x74>
 8003a36:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8003a3a:	f1bc 0f19 	cmp.w	ip, #25
 8003a3e:	d804      	bhi.n	8003a4a <_strtol_l.constprop.0+0xbe>
 8003a40:	3c57      	subs	r4, #87	; 0x57
 8003a42:	e7dd      	b.n	8003a00 <_strtol_l.constprop.0+0x74>
 8003a44:	f04f 37ff 	mov.w	r7, #4294967295
 8003a48:	e7e6      	b.n	8003a18 <_strtol_l.constprop.0+0x8c>
 8003a4a:	2f00      	cmp	r7, #0
 8003a4c:	da07      	bge.n	8003a5e <_strtol_l.constprop.0+0xd2>
 8003a4e:	2322      	movs	r3, #34	; 0x22
 8003a50:	4670      	mov	r0, lr
 8003a52:	f8c8 3000 	str.w	r3, [r8]
 8003a56:	2a00      	cmp	r2, #0
 8003a58:	d0a4      	beq.n	80039a4 <_strtol_l.constprop.0+0x18>
 8003a5a:	1e69      	subs	r1, r5, #1
 8003a5c:	e005      	b.n	8003a6a <_strtol_l.constprop.0+0xde>
 8003a5e:	b106      	cbz	r6, 8003a62 <_strtol_l.constprop.0+0xd6>
 8003a60:	4240      	negs	r0, r0
 8003a62:	2a00      	cmp	r2, #0
 8003a64:	d09e      	beq.n	80039a4 <_strtol_l.constprop.0+0x18>
 8003a66:	2f00      	cmp	r7, #0
 8003a68:	d1f7      	bne.n	8003a5a <_strtol_l.constprop.0+0xce>
 8003a6a:	6011      	str	r1, [r2, #0]
 8003a6c:	e79a      	b.n	80039a4 <_strtol_l.constprop.0+0x18>
 8003a6e:	2430      	movs	r4, #48	; 0x30
 8003a70:	2b00      	cmp	r3, #0
 8003a72:	d1b5      	bne.n	80039e0 <_strtol_l.constprop.0+0x54>
 8003a74:	2308      	movs	r3, #8
 8003a76:	e7b3      	b.n	80039e0 <_strtol_l.constprop.0+0x54>
 8003a78:	2c30      	cmp	r4, #48	; 0x30
 8003a7a:	d0a9      	beq.n	80039d0 <_strtol_l.constprop.0+0x44>
 8003a7c:	230a      	movs	r3, #10
 8003a7e:	e7af      	b.n	80039e0 <_strtol_l.constprop.0+0x54>
 8003a80:	08006971 	.word	0x08006971

08003a84 <_strtol_r>:
 8003a84:	f7ff bf82 	b.w	800398c <_strtol_l.constprop.0>

08003a88 <quorem>:
 8003a88:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a8c:	6903      	ldr	r3, [r0, #16]
 8003a8e:	690c      	ldr	r4, [r1, #16]
 8003a90:	4607      	mov	r7, r0
 8003a92:	42a3      	cmp	r3, r4
 8003a94:	f2c0 8082 	blt.w	8003b9c <quorem+0x114>
 8003a98:	3c01      	subs	r4, #1
 8003a9a:	f100 0514 	add.w	r5, r0, #20
 8003a9e:	f101 0814 	add.w	r8, r1, #20
 8003aa2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003aa6:	9301      	str	r3, [sp, #4]
 8003aa8:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8003aac:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003ab0:	3301      	adds	r3, #1
 8003ab2:	429a      	cmp	r2, r3
 8003ab4:	fbb2 f6f3 	udiv	r6, r2, r3
 8003ab8:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8003abc:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8003ac0:	d331      	bcc.n	8003b26 <quorem+0x9e>
 8003ac2:	f04f 0e00 	mov.w	lr, #0
 8003ac6:	4640      	mov	r0, r8
 8003ac8:	46ac      	mov	ip, r5
 8003aca:	46f2      	mov	sl, lr
 8003acc:	f850 2b04 	ldr.w	r2, [r0], #4
 8003ad0:	b293      	uxth	r3, r2
 8003ad2:	fb06 e303 	mla	r3, r6, r3, lr
 8003ad6:	0c12      	lsrs	r2, r2, #16
 8003ad8:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8003adc:	b29b      	uxth	r3, r3
 8003ade:	fb06 e202 	mla	r2, r6, r2, lr
 8003ae2:	ebaa 0303 	sub.w	r3, sl, r3
 8003ae6:	f8dc a000 	ldr.w	sl, [ip]
 8003aea:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8003aee:	fa1f fa8a 	uxth.w	sl, sl
 8003af2:	4453      	add	r3, sl
 8003af4:	f8dc a000 	ldr.w	sl, [ip]
 8003af8:	b292      	uxth	r2, r2
 8003afa:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8003afe:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003b02:	b29b      	uxth	r3, r3
 8003b04:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003b08:	4581      	cmp	r9, r0
 8003b0a:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8003b0e:	f84c 3b04 	str.w	r3, [ip], #4
 8003b12:	d2db      	bcs.n	8003acc <quorem+0x44>
 8003b14:	f855 300b 	ldr.w	r3, [r5, fp]
 8003b18:	b92b      	cbnz	r3, 8003b26 <quorem+0x9e>
 8003b1a:	9b01      	ldr	r3, [sp, #4]
 8003b1c:	3b04      	subs	r3, #4
 8003b1e:	429d      	cmp	r5, r3
 8003b20:	461a      	mov	r2, r3
 8003b22:	d32f      	bcc.n	8003b84 <quorem+0xfc>
 8003b24:	613c      	str	r4, [r7, #16]
 8003b26:	4638      	mov	r0, r7
 8003b28:	f001 fc90 	bl	800544c <__mcmp>
 8003b2c:	2800      	cmp	r0, #0
 8003b2e:	db25      	blt.n	8003b7c <quorem+0xf4>
 8003b30:	4628      	mov	r0, r5
 8003b32:	f04f 0c00 	mov.w	ip, #0
 8003b36:	3601      	adds	r6, #1
 8003b38:	f858 1b04 	ldr.w	r1, [r8], #4
 8003b3c:	f8d0 e000 	ldr.w	lr, [r0]
 8003b40:	b28b      	uxth	r3, r1
 8003b42:	ebac 0303 	sub.w	r3, ip, r3
 8003b46:	fa1f f28e 	uxth.w	r2, lr
 8003b4a:	4413      	add	r3, r2
 8003b4c:	0c0a      	lsrs	r2, r1, #16
 8003b4e:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8003b52:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003b56:	b29b      	uxth	r3, r3
 8003b58:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003b5c:	45c1      	cmp	r9, r8
 8003b5e:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8003b62:	f840 3b04 	str.w	r3, [r0], #4
 8003b66:	d2e7      	bcs.n	8003b38 <quorem+0xb0>
 8003b68:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003b6c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003b70:	b922      	cbnz	r2, 8003b7c <quorem+0xf4>
 8003b72:	3b04      	subs	r3, #4
 8003b74:	429d      	cmp	r5, r3
 8003b76:	461a      	mov	r2, r3
 8003b78:	d30a      	bcc.n	8003b90 <quorem+0x108>
 8003b7a:	613c      	str	r4, [r7, #16]
 8003b7c:	4630      	mov	r0, r6
 8003b7e:	b003      	add	sp, #12
 8003b80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b84:	6812      	ldr	r2, [r2, #0]
 8003b86:	3b04      	subs	r3, #4
 8003b88:	2a00      	cmp	r2, #0
 8003b8a:	d1cb      	bne.n	8003b24 <quorem+0x9c>
 8003b8c:	3c01      	subs	r4, #1
 8003b8e:	e7c6      	b.n	8003b1e <quorem+0x96>
 8003b90:	6812      	ldr	r2, [r2, #0]
 8003b92:	3b04      	subs	r3, #4
 8003b94:	2a00      	cmp	r2, #0
 8003b96:	d1f0      	bne.n	8003b7a <quorem+0xf2>
 8003b98:	3c01      	subs	r4, #1
 8003b9a:	e7eb      	b.n	8003b74 <quorem+0xec>
 8003b9c:	2000      	movs	r0, #0
 8003b9e:	e7ee      	b.n	8003b7e <quorem+0xf6>

08003ba0 <_dtoa_r>:
 8003ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ba4:	4616      	mov	r6, r2
 8003ba6:	461f      	mov	r7, r3
 8003ba8:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8003baa:	b099      	sub	sp, #100	; 0x64
 8003bac:	4605      	mov	r5, r0
 8003bae:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8003bb2:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 8003bb6:	b974      	cbnz	r4, 8003bd6 <_dtoa_r+0x36>
 8003bb8:	2010      	movs	r0, #16
 8003bba:	f001 f949 	bl	8004e50 <malloc>
 8003bbe:	4602      	mov	r2, r0
 8003bc0:	6268      	str	r0, [r5, #36]	; 0x24
 8003bc2:	b920      	cbnz	r0, 8003bce <_dtoa_r+0x2e>
 8003bc4:	21ea      	movs	r1, #234	; 0xea
 8003bc6:	4ba8      	ldr	r3, [pc, #672]	; (8003e68 <_dtoa_r+0x2c8>)
 8003bc8:	48a8      	ldr	r0, [pc, #672]	; (8003e6c <_dtoa_r+0x2cc>)
 8003bca:	f002 f8b3 	bl	8005d34 <__assert_func>
 8003bce:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003bd2:	6004      	str	r4, [r0, #0]
 8003bd4:	60c4      	str	r4, [r0, #12]
 8003bd6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8003bd8:	6819      	ldr	r1, [r3, #0]
 8003bda:	b151      	cbz	r1, 8003bf2 <_dtoa_r+0x52>
 8003bdc:	685a      	ldr	r2, [r3, #4]
 8003bde:	2301      	movs	r3, #1
 8003be0:	4093      	lsls	r3, r2
 8003be2:	604a      	str	r2, [r1, #4]
 8003be4:	608b      	str	r3, [r1, #8]
 8003be6:	4628      	mov	r0, r5
 8003be8:	f001 f9a8 	bl	8004f3c <_Bfree>
 8003bec:	2200      	movs	r2, #0
 8003bee:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8003bf0:	601a      	str	r2, [r3, #0]
 8003bf2:	1e3b      	subs	r3, r7, #0
 8003bf4:	bfaf      	iteee	ge
 8003bf6:	2300      	movge	r3, #0
 8003bf8:	2201      	movlt	r2, #1
 8003bfa:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8003bfe:	9305      	strlt	r3, [sp, #20]
 8003c00:	bfa8      	it	ge
 8003c02:	f8c8 3000 	strge.w	r3, [r8]
 8003c06:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8003c0a:	4b99      	ldr	r3, [pc, #612]	; (8003e70 <_dtoa_r+0x2d0>)
 8003c0c:	bfb8      	it	lt
 8003c0e:	f8c8 2000 	strlt.w	r2, [r8]
 8003c12:	ea33 0309 	bics.w	r3, r3, r9
 8003c16:	d119      	bne.n	8003c4c <_dtoa_r+0xac>
 8003c18:	f242 730f 	movw	r3, #9999	; 0x270f
 8003c1c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8003c1e:	6013      	str	r3, [r2, #0]
 8003c20:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003c24:	4333      	orrs	r3, r6
 8003c26:	f000 857f 	beq.w	8004728 <_dtoa_r+0xb88>
 8003c2a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003c2c:	b953      	cbnz	r3, 8003c44 <_dtoa_r+0xa4>
 8003c2e:	4b91      	ldr	r3, [pc, #580]	; (8003e74 <_dtoa_r+0x2d4>)
 8003c30:	e022      	b.n	8003c78 <_dtoa_r+0xd8>
 8003c32:	4b91      	ldr	r3, [pc, #580]	; (8003e78 <_dtoa_r+0x2d8>)
 8003c34:	9303      	str	r3, [sp, #12]
 8003c36:	3308      	adds	r3, #8
 8003c38:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8003c3a:	6013      	str	r3, [r2, #0]
 8003c3c:	9803      	ldr	r0, [sp, #12]
 8003c3e:	b019      	add	sp, #100	; 0x64
 8003c40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003c44:	4b8b      	ldr	r3, [pc, #556]	; (8003e74 <_dtoa_r+0x2d4>)
 8003c46:	9303      	str	r3, [sp, #12]
 8003c48:	3303      	adds	r3, #3
 8003c4a:	e7f5      	b.n	8003c38 <_dtoa_r+0x98>
 8003c4c:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8003c50:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8003c54:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003c58:	2200      	movs	r2, #0
 8003c5a:	2300      	movs	r3, #0
 8003c5c:	f7fc ff10 	bl	8000a80 <__aeabi_dcmpeq>
 8003c60:	4680      	mov	r8, r0
 8003c62:	b158      	cbz	r0, 8003c7c <_dtoa_r+0xdc>
 8003c64:	2301      	movs	r3, #1
 8003c66:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8003c68:	6013      	str	r3, [r2, #0]
 8003c6a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003c6c:	2b00      	cmp	r3, #0
 8003c6e:	f000 8558 	beq.w	8004722 <_dtoa_r+0xb82>
 8003c72:	4882      	ldr	r0, [pc, #520]	; (8003e7c <_dtoa_r+0x2dc>)
 8003c74:	6018      	str	r0, [r3, #0]
 8003c76:	1e43      	subs	r3, r0, #1
 8003c78:	9303      	str	r3, [sp, #12]
 8003c7a:	e7df      	b.n	8003c3c <_dtoa_r+0x9c>
 8003c7c:	ab16      	add	r3, sp, #88	; 0x58
 8003c7e:	9301      	str	r3, [sp, #4]
 8003c80:	ab17      	add	r3, sp, #92	; 0x5c
 8003c82:	9300      	str	r3, [sp, #0]
 8003c84:	4628      	mov	r0, r5
 8003c86:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8003c8a:	f001 fd01 	bl	8005690 <__d2b>
 8003c8e:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8003c92:	4683      	mov	fp, r0
 8003c94:	2c00      	cmp	r4, #0
 8003c96:	d07f      	beq.n	8003d98 <_dtoa_r+0x1f8>
 8003c98:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003c9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003c9e:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 8003ca2:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003ca6:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8003caa:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8003cae:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 8003cb2:	2200      	movs	r2, #0
 8003cb4:	4b72      	ldr	r3, [pc, #456]	; (8003e80 <_dtoa_r+0x2e0>)
 8003cb6:	f7fc fac3 	bl	8000240 <__aeabi_dsub>
 8003cba:	a365      	add	r3, pc, #404	; (adr r3, 8003e50 <_dtoa_r+0x2b0>)
 8003cbc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003cc0:	f7fc fc76 	bl	80005b0 <__aeabi_dmul>
 8003cc4:	a364      	add	r3, pc, #400	; (adr r3, 8003e58 <_dtoa_r+0x2b8>)
 8003cc6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003cca:	f7fc fabb 	bl	8000244 <__adddf3>
 8003cce:	4606      	mov	r6, r0
 8003cd0:	4620      	mov	r0, r4
 8003cd2:	460f      	mov	r7, r1
 8003cd4:	f7fc fc02 	bl	80004dc <__aeabi_i2d>
 8003cd8:	a361      	add	r3, pc, #388	; (adr r3, 8003e60 <_dtoa_r+0x2c0>)
 8003cda:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003cde:	f7fc fc67 	bl	80005b0 <__aeabi_dmul>
 8003ce2:	4602      	mov	r2, r0
 8003ce4:	460b      	mov	r3, r1
 8003ce6:	4630      	mov	r0, r6
 8003ce8:	4639      	mov	r1, r7
 8003cea:	f7fc faab 	bl	8000244 <__adddf3>
 8003cee:	4606      	mov	r6, r0
 8003cf0:	460f      	mov	r7, r1
 8003cf2:	f7fc ff0d 	bl	8000b10 <__aeabi_d2iz>
 8003cf6:	2200      	movs	r2, #0
 8003cf8:	4682      	mov	sl, r0
 8003cfa:	2300      	movs	r3, #0
 8003cfc:	4630      	mov	r0, r6
 8003cfe:	4639      	mov	r1, r7
 8003d00:	f7fc fec8 	bl	8000a94 <__aeabi_dcmplt>
 8003d04:	b148      	cbz	r0, 8003d1a <_dtoa_r+0x17a>
 8003d06:	4650      	mov	r0, sl
 8003d08:	f7fc fbe8 	bl	80004dc <__aeabi_i2d>
 8003d0c:	4632      	mov	r2, r6
 8003d0e:	463b      	mov	r3, r7
 8003d10:	f7fc feb6 	bl	8000a80 <__aeabi_dcmpeq>
 8003d14:	b908      	cbnz	r0, 8003d1a <_dtoa_r+0x17a>
 8003d16:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003d1a:	f1ba 0f16 	cmp.w	sl, #22
 8003d1e:	d858      	bhi.n	8003dd2 <_dtoa_r+0x232>
 8003d20:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003d24:	4b57      	ldr	r3, [pc, #348]	; (8003e84 <_dtoa_r+0x2e4>)
 8003d26:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8003d2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d2e:	f7fc feb1 	bl	8000a94 <__aeabi_dcmplt>
 8003d32:	2800      	cmp	r0, #0
 8003d34:	d04f      	beq.n	8003dd6 <_dtoa_r+0x236>
 8003d36:	2300      	movs	r3, #0
 8003d38:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003d3c:	930f      	str	r3, [sp, #60]	; 0x3c
 8003d3e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8003d40:	1b1c      	subs	r4, r3, r4
 8003d42:	1e63      	subs	r3, r4, #1
 8003d44:	9309      	str	r3, [sp, #36]	; 0x24
 8003d46:	bf49      	itett	mi
 8003d48:	f1c4 0301 	rsbmi	r3, r4, #1
 8003d4c:	2300      	movpl	r3, #0
 8003d4e:	9306      	strmi	r3, [sp, #24]
 8003d50:	2300      	movmi	r3, #0
 8003d52:	bf54      	ite	pl
 8003d54:	9306      	strpl	r3, [sp, #24]
 8003d56:	9309      	strmi	r3, [sp, #36]	; 0x24
 8003d58:	f1ba 0f00 	cmp.w	sl, #0
 8003d5c:	db3d      	blt.n	8003dda <_dtoa_r+0x23a>
 8003d5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003d60:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 8003d64:	4453      	add	r3, sl
 8003d66:	9309      	str	r3, [sp, #36]	; 0x24
 8003d68:	2300      	movs	r3, #0
 8003d6a:	930a      	str	r3, [sp, #40]	; 0x28
 8003d6c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003d6e:	2b09      	cmp	r3, #9
 8003d70:	f200 808c 	bhi.w	8003e8c <_dtoa_r+0x2ec>
 8003d74:	2b05      	cmp	r3, #5
 8003d76:	bfc4      	itt	gt
 8003d78:	3b04      	subgt	r3, #4
 8003d7a:	9322      	strgt	r3, [sp, #136]	; 0x88
 8003d7c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003d7e:	bfc8      	it	gt
 8003d80:	2400      	movgt	r4, #0
 8003d82:	f1a3 0302 	sub.w	r3, r3, #2
 8003d86:	bfd8      	it	le
 8003d88:	2401      	movle	r4, #1
 8003d8a:	2b03      	cmp	r3, #3
 8003d8c:	f200 808a 	bhi.w	8003ea4 <_dtoa_r+0x304>
 8003d90:	e8df f003 	tbb	[pc, r3]
 8003d94:	5b4d4f2d 	.word	0x5b4d4f2d
 8003d98:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 8003d9c:	441c      	add	r4, r3
 8003d9e:	f204 4332 	addw	r3, r4, #1074	; 0x432
 8003da2:	2b20      	cmp	r3, #32
 8003da4:	bfc3      	ittte	gt
 8003da6:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8003daa:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 8003dae:	fa09 f303 	lslgt.w	r3, r9, r3
 8003db2:	f1c3 0320 	rsble	r3, r3, #32
 8003db6:	bfc6      	itte	gt
 8003db8:	fa26 f000 	lsrgt.w	r0, r6, r0
 8003dbc:	4318      	orrgt	r0, r3
 8003dbe:	fa06 f003 	lslle.w	r0, r6, r3
 8003dc2:	f7fc fb7b 	bl	80004bc <__aeabi_ui2d>
 8003dc6:	2301      	movs	r3, #1
 8003dc8:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8003dcc:	3c01      	subs	r4, #1
 8003dce:	9313      	str	r3, [sp, #76]	; 0x4c
 8003dd0:	e76f      	b.n	8003cb2 <_dtoa_r+0x112>
 8003dd2:	2301      	movs	r3, #1
 8003dd4:	e7b2      	b.n	8003d3c <_dtoa_r+0x19c>
 8003dd6:	900f      	str	r0, [sp, #60]	; 0x3c
 8003dd8:	e7b1      	b.n	8003d3e <_dtoa_r+0x19e>
 8003dda:	9b06      	ldr	r3, [sp, #24]
 8003ddc:	eba3 030a 	sub.w	r3, r3, sl
 8003de0:	9306      	str	r3, [sp, #24]
 8003de2:	f1ca 0300 	rsb	r3, sl, #0
 8003de6:	930a      	str	r3, [sp, #40]	; 0x28
 8003de8:	2300      	movs	r3, #0
 8003dea:	930e      	str	r3, [sp, #56]	; 0x38
 8003dec:	e7be      	b.n	8003d6c <_dtoa_r+0x1cc>
 8003dee:	2300      	movs	r3, #0
 8003df0:	930b      	str	r3, [sp, #44]	; 0x2c
 8003df2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003df4:	2b00      	cmp	r3, #0
 8003df6:	dc58      	bgt.n	8003eaa <_dtoa_r+0x30a>
 8003df8:	f04f 0901 	mov.w	r9, #1
 8003dfc:	464b      	mov	r3, r9
 8003dfe:	f8cd 9020 	str.w	r9, [sp, #32]
 8003e02:	f8cd 908c 	str.w	r9, [sp, #140]	; 0x8c
 8003e06:	2200      	movs	r2, #0
 8003e08:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8003e0a:	6042      	str	r2, [r0, #4]
 8003e0c:	2204      	movs	r2, #4
 8003e0e:	f102 0614 	add.w	r6, r2, #20
 8003e12:	429e      	cmp	r6, r3
 8003e14:	6841      	ldr	r1, [r0, #4]
 8003e16:	d94e      	bls.n	8003eb6 <_dtoa_r+0x316>
 8003e18:	4628      	mov	r0, r5
 8003e1a:	f001 f84f 	bl	8004ebc <_Balloc>
 8003e1e:	9003      	str	r0, [sp, #12]
 8003e20:	2800      	cmp	r0, #0
 8003e22:	d14c      	bne.n	8003ebe <_dtoa_r+0x31e>
 8003e24:	4602      	mov	r2, r0
 8003e26:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8003e2a:	4b17      	ldr	r3, [pc, #92]	; (8003e88 <_dtoa_r+0x2e8>)
 8003e2c:	e6cc      	b.n	8003bc8 <_dtoa_r+0x28>
 8003e2e:	2301      	movs	r3, #1
 8003e30:	e7de      	b.n	8003df0 <_dtoa_r+0x250>
 8003e32:	2300      	movs	r3, #0
 8003e34:	930b      	str	r3, [sp, #44]	; 0x2c
 8003e36:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003e38:	eb0a 0903 	add.w	r9, sl, r3
 8003e3c:	f109 0301 	add.w	r3, r9, #1
 8003e40:	2b01      	cmp	r3, #1
 8003e42:	9308      	str	r3, [sp, #32]
 8003e44:	bfb8      	it	lt
 8003e46:	2301      	movlt	r3, #1
 8003e48:	e7dd      	b.n	8003e06 <_dtoa_r+0x266>
 8003e4a:	2301      	movs	r3, #1
 8003e4c:	e7f2      	b.n	8003e34 <_dtoa_r+0x294>
 8003e4e:	bf00      	nop
 8003e50:	636f4361 	.word	0x636f4361
 8003e54:	3fd287a7 	.word	0x3fd287a7
 8003e58:	8b60c8b3 	.word	0x8b60c8b3
 8003e5c:	3fc68a28 	.word	0x3fc68a28
 8003e60:	509f79fb 	.word	0x509f79fb
 8003e64:	3fd34413 	.word	0x3fd34413
 8003e68:	08006a7e 	.word	0x08006a7e
 8003e6c:	08006a95 	.word	0x08006a95
 8003e70:	7ff00000 	.word	0x7ff00000
 8003e74:	08006a7a 	.word	0x08006a7a
 8003e78:	08006a71 	.word	0x08006a71
 8003e7c:	080068f5 	.word	0x080068f5
 8003e80:	3ff80000 	.word	0x3ff80000
 8003e84:	08006c00 	.word	0x08006c00
 8003e88:	08006af0 	.word	0x08006af0
 8003e8c:	2401      	movs	r4, #1
 8003e8e:	2300      	movs	r3, #0
 8003e90:	940b      	str	r4, [sp, #44]	; 0x2c
 8003e92:	9322      	str	r3, [sp, #136]	; 0x88
 8003e94:	f04f 39ff 	mov.w	r9, #4294967295
 8003e98:	2200      	movs	r2, #0
 8003e9a:	2312      	movs	r3, #18
 8003e9c:	f8cd 9020 	str.w	r9, [sp, #32]
 8003ea0:	9223      	str	r2, [sp, #140]	; 0x8c
 8003ea2:	e7b0      	b.n	8003e06 <_dtoa_r+0x266>
 8003ea4:	2301      	movs	r3, #1
 8003ea6:	930b      	str	r3, [sp, #44]	; 0x2c
 8003ea8:	e7f4      	b.n	8003e94 <_dtoa_r+0x2f4>
 8003eaa:	f8dd 908c 	ldr.w	r9, [sp, #140]	; 0x8c
 8003eae:	464b      	mov	r3, r9
 8003eb0:	f8cd 9020 	str.w	r9, [sp, #32]
 8003eb4:	e7a7      	b.n	8003e06 <_dtoa_r+0x266>
 8003eb6:	3101      	adds	r1, #1
 8003eb8:	6041      	str	r1, [r0, #4]
 8003eba:	0052      	lsls	r2, r2, #1
 8003ebc:	e7a7      	b.n	8003e0e <_dtoa_r+0x26e>
 8003ebe:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8003ec0:	9a03      	ldr	r2, [sp, #12]
 8003ec2:	601a      	str	r2, [r3, #0]
 8003ec4:	9b08      	ldr	r3, [sp, #32]
 8003ec6:	2b0e      	cmp	r3, #14
 8003ec8:	f200 80a8 	bhi.w	800401c <_dtoa_r+0x47c>
 8003ecc:	2c00      	cmp	r4, #0
 8003ece:	f000 80a5 	beq.w	800401c <_dtoa_r+0x47c>
 8003ed2:	f1ba 0f00 	cmp.w	sl, #0
 8003ed6:	dd34      	ble.n	8003f42 <_dtoa_r+0x3a2>
 8003ed8:	4a9a      	ldr	r2, [pc, #616]	; (8004144 <_dtoa_r+0x5a4>)
 8003eda:	f00a 030f 	and.w	r3, sl, #15
 8003ede:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8003ee2:	f41a 7f80 	tst.w	sl, #256	; 0x100
 8003ee6:	e9d3 3400 	ldrd	r3, r4, [r3]
 8003eea:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8003eee:	ea4f 142a 	mov.w	r4, sl, asr #4
 8003ef2:	d016      	beq.n	8003f22 <_dtoa_r+0x382>
 8003ef4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003ef8:	4b93      	ldr	r3, [pc, #588]	; (8004148 <_dtoa_r+0x5a8>)
 8003efa:	2703      	movs	r7, #3
 8003efc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003f00:	f7fc fc80 	bl	8000804 <__aeabi_ddiv>
 8003f04:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003f08:	f004 040f 	and.w	r4, r4, #15
 8003f0c:	4e8e      	ldr	r6, [pc, #568]	; (8004148 <_dtoa_r+0x5a8>)
 8003f0e:	b954      	cbnz	r4, 8003f26 <_dtoa_r+0x386>
 8003f10:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003f14:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003f18:	f7fc fc74 	bl	8000804 <__aeabi_ddiv>
 8003f1c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003f20:	e029      	b.n	8003f76 <_dtoa_r+0x3d6>
 8003f22:	2702      	movs	r7, #2
 8003f24:	e7f2      	b.n	8003f0c <_dtoa_r+0x36c>
 8003f26:	07e1      	lsls	r1, r4, #31
 8003f28:	d508      	bpl.n	8003f3c <_dtoa_r+0x39c>
 8003f2a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003f2e:	e9d6 2300 	ldrd	r2, r3, [r6]
 8003f32:	f7fc fb3d 	bl	80005b0 <__aeabi_dmul>
 8003f36:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003f3a:	3701      	adds	r7, #1
 8003f3c:	1064      	asrs	r4, r4, #1
 8003f3e:	3608      	adds	r6, #8
 8003f40:	e7e5      	b.n	8003f0e <_dtoa_r+0x36e>
 8003f42:	f000 80a5 	beq.w	8004090 <_dtoa_r+0x4f0>
 8003f46:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003f4a:	f1ca 0400 	rsb	r4, sl, #0
 8003f4e:	4b7d      	ldr	r3, [pc, #500]	; (8004144 <_dtoa_r+0x5a4>)
 8003f50:	f004 020f 	and.w	r2, r4, #15
 8003f54:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003f58:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f5c:	f7fc fb28 	bl	80005b0 <__aeabi_dmul>
 8003f60:	2702      	movs	r7, #2
 8003f62:	2300      	movs	r3, #0
 8003f64:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003f68:	4e77      	ldr	r6, [pc, #476]	; (8004148 <_dtoa_r+0x5a8>)
 8003f6a:	1124      	asrs	r4, r4, #4
 8003f6c:	2c00      	cmp	r4, #0
 8003f6e:	f040 8084 	bne.w	800407a <_dtoa_r+0x4da>
 8003f72:	2b00      	cmp	r3, #0
 8003f74:	d1d2      	bne.n	8003f1c <_dtoa_r+0x37c>
 8003f76:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003f78:	2b00      	cmp	r3, #0
 8003f7a:	f000 808b 	beq.w	8004094 <_dtoa_r+0x4f4>
 8003f7e:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8003f82:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8003f86:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003f8a:	2200      	movs	r2, #0
 8003f8c:	4b6f      	ldr	r3, [pc, #444]	; (800414c <_dtoa_r+0x5ac>)
 8003f8e:	f7fc fd81 	bl	8000a94 <__aeabi_dcmplt>
 8003f92:	2800      	cmp	r0, #0
 8003f94:	d07e      	beq.n	8004094 <_dtoa_r+0x4f4>
 8003f96:	9b08      	ldr	r3, [sp, #32]
 8003f98:	2b00      	cmp	r3, #0
 8003f9a:	d07b      	beq.n	8004094 <_dtoa_r+0x4f4>
 8003f9c:	f1b9 0f00 	cmp.w	r9, #0
 8003fa0:	dd38      	ble.n	8004014 <_dtoa_r+0x474>
 8003fa2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003fa6:	2200      	movs	r2, #0
 8003fa8:	4b69      	ldr	r3, [pc, #420]	; (8004150 <_dtoa_r+0x5b0>)
 8003faa:	f7fc fb01 	bl	80005b0 <__aeabi_dmul>
 8003fae:	464c      	mov	r4, r9
 8003fb0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003fb4:	f10a 38ff 	add.w	r8, sl, #4294967295
 8003fb8:	3701      	adds	r7, #1
 8003fba:	4638      	mov	r0, r7
 8003fbc:	f7fc fa8e 	bl	80004dc <__aeabi_i2d>
 8003fc0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003fc4:	f7fc faf4 	bl	80005b0 <__aeabi_dmul>
 8003fc8:	2200      	movs	r2, #0
 8003fca:	4b62      	ldr	r3, [pc, #392]	; (8004154 <_dtoa_r+0x5b4>)
 8003fcc:	f7fc f93a 	bl	8000244 <__adddf3>
 8003fd0:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8003fd4:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003fd8:	9611      	str	r6, [sp, #68]	; 0x44
 8003fda:	2c00      	cmp	r4, #0
 8003fdc:	d15d      	bne.n	800409a <_dtoa_r+0x4fa>
 8003fde:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003fe2:	2200      	movs	r2, #0
 8003fe4:	4b5c      	ldr	r3, [pc, #368]	; (8004158 <_dtoa_r+0x5b8>)
 8003fe6:	f7fc f92b 	bl	8000240 <__aeabi_dsub>
 8003fea:	4602      	mov	r2, r0
 8003fec:	460b      	mov	r3, r1
 8003fee:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8003ff2:	4633      	mov	r3, r6
 8003ff4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003ff6:	f7fc fd6b 	bl	8000ad0 <__aeabi_dcmpgt>
 8003ffa:	2800      	cmp	r0, #0
 8003ffc:	f040 829c 	bne.w	8004538 <_dtoa_r+0x998>
 8004000:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004004:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004006:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800400a:	f7fc fd43 	bl	8000a94 <__aeabi_dcmplt>
 800400e:	2800      	cmp	r0, #0
 8004010:	f040 8290 	bne.w	8004534 <_dtoa_r+0x994>
 8004014:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8004018:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800401c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800401e:	2b00      	cmp	r3, #0
 8004020:	f2c0 8152 	blt.w	80042c8 <_dtoa_r+0x728>
 8004024:	f1ba 0f0e 	cmp.w	sl, #14
 8004028:	f300 814e 	bgt.w	80042c8 <_dtoa_r+0x728>
 800402c:	4b45      	ldr	r3, [pc, #276]	; (8004144 <_dtoa_r+0x5a4>)
 800402e:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8004032:	e9d3 3400 	ldrd	r3, r4, [r3]
 8004036:	e9cd 3406 	strd	r3, r4, [sp, #24]
 800403a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800403c:	2b00      	cmp	r3, #0
 800403e:	f280 80db 	bge.w	80041f8 <_dtoa_r+0x658>
 8004042:	9b08      	ldr	r3, [sp, #32]
 8004044:	2b00      	cmp	r3, #0
 8004046:	f300 80d7 	bgt.w	80041f8 <_dtoa_r+0x658>
 800404a:	f040 8272 	bne.w	8004532 <_dtoa_r+0x992>
 800404e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004052:	2200      	movs	r2, #0
 8004054:	4b40      	ldr	r3, [pc, #256]	; (8004158 <_dtoa_r+0x5b8>)
 8004056:	f7fc faab 	bl	80005b0 <__aeabi_dmul>
 800405a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800405e:	f7fc fd2d 	bl	8000abc <__aeabi_dcmpge>
 8004062:	9c08      	ldr	r4, [sp, #32]
 8004064:	4626      	mov	r6, r4
 8004066:	2800      	cmp	r0, #0
 8004068:	f040 8248 	bne.w	80044fc <_dtoa_r+0x95c>
 800406c:	2331      	movs	r3, #49	; 0x31
 800406e:	9f03      	ldr	r7, [sp, #12]
 8004070:	f10a 0a01 	add.w	sl, sl, #1
 8004074:	f807 3b01 	strb.w	r3, [r7], #1
 8004078:	e244      	b.n	8004504 <_dtoa_r+0x964>
 800407a:	07e2      	lsls	r2, r4, #31
 800407c:	d505      	bpl.n	800408a <_dtoa_r+0x4ea>
 800407e:	e9d6 2300 	ldrd	r2, r3, [r6]
 8004082:	f7fc fa95 	bl	80005b0 <__aeabi_dmul>
 8004086:	2301      	movs	r3, #1
 8004088:	3701      	adds	r7, #1
 800408a:	1064      	asrs	r4, r4, #1
 800408c:	3608      	adds	r6, #8
 800408e:	e76d      	b.n	8003f6c <_dtoa_r+0x3cc>
 8004090:	2702      	movs	r7, #2
 8004092:	e770      	b.n	8003f76 <_dtoa_r+0x3d6>
 8004094:	46d0      	mov	r8, sl
 8004096:	9c08      	ldr	r4, [sp, #32]
 8004098:	e78f      	b.n	8003fba <_dtoa_r+0x41a>
 800409a:	9903      	ldr	r1, [sp, #12]
 800409c:	4b29      	ldr	r3, [pc, #164]	; (8004144 <_dtoa_r+0x5a4>)
 800409e:	4421      	add	r1, r4
 80040a0:	9112      	str	r1, [sp, #72]	; 0x48
 80040a2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80040a4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80040a8:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 80040ac:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80040b0:	2900      	cmp	r1, #0
 80040b2:	d055      	beq.n	8004160 <_dtoa_r+0x5c0>
 80040b4:	2000      	movs	r0, #0
 80040b6:	4929      	ldr	r1, [pc, #164]	; (800415c <_dtoa_r+0x5bc>)
 80040b8:	f7fc fba4 	bl	8000804 <__aeabi_ddiv>
 80040bc:	463b      	mov	r3, r7
 80040be:	4632      	mov	r2, r6
 80040c0:	f7fc f8be 	bl	8000240 <__aeabi_dsub>
 80040c4:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80040c8:	9f03      	ldr	r7, [sp, #12]
 80040ca:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80040ce:	f7fc fd1f 	bl	8000b10 <__aeabi_d2iz>
 80040d2:	4604      	mov	r4, r0
 80040d4:	f7fc fa02 	bl	80004dc <__aeabi_i2d>
 80040d8:	4602      	mov	r2, r0
 80040da:	460b      	mov	r3, r1
 80040dc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80040e0:	f7fc f8ae 	bl	8000240 <__aeabi_dsub>
 80040e4:	4602      	mov	r2, r0
 80040e6:	460b      	mov	r3, r1
 80040e8:	3430      	adds	r4, #48	; 0x30
 80040ea:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80040ee:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80040f2:	f807 4b01 	strb.w	r4, [r7], #1
 80040f6:	f7fc fccd 	bl	8000a94 <__aeabi_dcmplt>
 80040fa:	2800      	cmp	r0, #0
 80040fc:	d174      	bne.n	80041e8 <_dtoa_r+0x648>
 80040fe:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004102:	2000      	movs	r0, #0
 8004104:	4911      	ldr	r1, [pc, #68]	; (800414c <_dtoa_r+0x5ac>)
 8004106:	f7fc f89b 	bl	8000240 <__aeabi_dsub>
 800410a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800410e:	f7fc fcc1 	bl	8000a94 <__aeabi_dcmplt>
 8004112:	2800      	cmp	r0, #0
 8004114:	f040 80b7 	bne.w	8004286 <_dtoa_r+0x6e6>
 8004118:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800411a:	429f      	cmp	r7, r3
 800411c:	f43f af7a 	beq.w	8004014 <_dtoa_r+0x474>
 8004120:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004124:	2200      	movs	r2, #0
 8004126:	4b0a      	ldr	r3, [pc, #40]	; (8004150 <_dtoa_r+0x5b0>)
 8004128:	f7fc fa42 	bl	80005b0 <__aeabi_dmul>
 800412c:	2200      	movs	r2, #0
 800412e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8004132:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004136:	4b06      	ldr	r3, [pc, #24]	; (8004150 <_dtoa_r+0x5b0>)
 8004138:	f7fc fa3a 	bl	80005b0 <__aeabi_dmul>
 800413c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8004140:	e7c3      	b.n	80040ca <_dtoa_r+0x52a>
 8004142:	bf00      	nop
 8004144:	08006c00 	.word	0x08006c00
 8004148:	08006bd8 	.word	0x08006bd8
 800414c:	3ff00000 	.word	0x3ff00000
 8004150:	40240000 	.word	0x40240000
 8004154:	401c0000 	.word	0x401c0000
 8004158:	40140000 	.word	0x40140000
 800415c:	3fe00000 	.word	0x3fe00000
 8004160:	4630      	mov	r0, r6
 8004162:	4639      	mov	r1, r7
 8004164:	f7fc fa24 	bl	80005b0 <__aeabi_dmul>
 8004168:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800416a:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800416e:	9c03      	ldr	r4, [sp, #12]
 8004170:	9314      	str	r3, [sp, #80]	; 0x50
 8004172:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004176:	f7fc fccb 	bl	8000b10 <__aeabi_d2iz>
 800417a:	9015      	str	r0, [sp, #84]	; 0x54
 800417c:	f7fc f9ae 	bl	80004dc <__aeabi_i2d>
 8004180:	4602      	mov	r2, r0
 8004182:	460b      	mov	r3, r1
 8004184:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8004188:	f7fc f85a 	bl	8000240 <__aeabi_dsub>
 800418c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800418e:	4606      	mov	r6, r0
 8004190:	3330      	adds	r3, #48	; 0x30
 8004192:	f804 3b01 	strb.w	r3, [r4], #1
 8004196:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004198:	460f      	mov	r7, r1
 800419a:	429c      	cmp	r4, r3
 800419c:	f04f 0200 	mov.w	r2, #0
 80041a0:	d124      	bne.n	80041ec <_dtoa_r+0x64c>
 80041a2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80041a6:	4bb0      	ldr	r3, [pc, #704]	; (8004468 <_dtoa_r+0x8c8>)
 80041a8:	f7fc f84c 	bl	8000244 <__adddf3>
 80041ac:	4602      	mov	r2, r0
 80041ae:	460b      	mov	r3, r1
 80041b0:	4630      	mov	r0, r6
 80041b2:	4639      	mov	r1, r7
 80041b4:	f7fc fc8c 	bl	8000ad0 <__aeabi_dcmpgt>
 80041b8:	2800      	cmp	r0, #0
 80041ba:	d163      	bne.n	8004284 <_dtoa_r+0x6e4>
 80041bc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80041c0:	2000      	movs	r0, #0
 80041c2:	49a9      	ldr	r1, [pc, #676]	; (8004468 <_dtoa_r+0x8c8>)
 80041c4:	f7fc f83c 	bl	8000240 <__aeabi_dsub>
 80041c8:	4602      	mov	r2, r0
 80041ca:	460b      	mov	r3, r1
 80041cc:	4630      	mov	r0, r6
 80041ce:	4639      	mov	r1, r7
 80041d0:	f7fc fc60 	bl	8000a94 <__aeabi_dcmplt>
 80041d4:	2800      	cmp	r0, #0
 80041d6:	f43f af1d 	beq.w	8004014 <_dtoa_r+0x474>
 80041da:	9f14      	ldr	r7, [sp, #80]	; 0x50
 80041dc:	1e7b      	subs	r3, r7, #1
 80041de:	9314      	str	r3, [sp, #80]	; 0x50
 80041e0:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 80041e4:	2b30      	cmp	r3, #48	; 0x30
 80041e6:	d0f8      	beq.n	80041da <_dtoa_r+0x63a>
 80041e8:	46c2      	mov	sl, r8
 80041ea:	e03b      	b.n	8004264 <_dtoa_r+0x6c4>
 80041ec:	4b9f      	ldr	r3, [pc, #636]	; (800446c <_dtoa_r+0x8cc>)
 80041ee:	f7fc f9df 	bl	80005b0 <__aeabi_dmul>
 80041f2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80041f6:	e7bc      	b.n	8004172 <_dtoa_r+0x5d2>
 80041f8:	9f03      	ldr	r7, [sp, #12]
 80041fa:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 80041fe:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004202:	4640      	mov	r0, r8
 8004204:	4649      	mov	r1, r9
 8004206:	f7fc fafd 	bl	8000804 <__aeabi_ddiv>
 800420a:	f7fc fc81 	bl	8000b10 <__aeabi_d2iz>
 800420e:	4604      	mov	r4, r0
 8004210:	f7fc f964 	bl	80004dc <__aeabi_i2d>
 8004214:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004218:	f7fc f9ca 	bl	80005b0 <__aeabi_dmul>
 800421c:	4602      	mov	r2, r0
 800421e:	460b      	mov	r3, r1
 8004220:	4640      	mov	r0, r8
 8004222:	4649      	mov	r1, r9
 8004224:	f7fc f80c 	bl	8000240 <__aeabi_dsub>
 8004228:	f104 0630 	add.w	r6, r4, #48	; 0x30
 800422c:	f807 6b01 	strb.w	r6, [r7], #1
 8004230:	9e03      	ldr	r6, [sp, #12]
 8004232:	f8dd c020 	ldr.w	ip, [sp, #32]
 8004236:	1bbe      	subs	r6, r7, r6
 8004238:	45b4      	cmp	ip, r6
 800423a:	4602      	mov	r2, r0
 800423c:	460b      	mov	r3, r1
 800423e:	d136      	bne.n	80042ae <_dtoa_r+0x70e>
 8004240:	f7fc f800 	bl	8000244 <__adddf3>
 8004244:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004248:	4680      	mov	r8, r0
 800424a:	4689      	mov	r9, r1
 800424c:	f7fc fc40 	bl	8000ad0 <__aeabi_dcmpgt>
 8004250:	bb58      	cbnz	r0, 80042aa <_dtoa_r+0x70a>
 8004252:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004256:	4640      	mov	r0, r8
 8004258:	4649      	mov	r1, r9
 800425a:	f7fc fc11 	bl	8000a80 <__aeabi_dcmpeq>
 800425e:	b108      	cbz	r0, 8004264 <_dtoa_r+0x6c4>
 8004260:	07e1      	lsls	r1, r4, #31
 8004262:	d422      	bmi.n	80042aa <_dtoa_r+0x70a>
 8004264:	4628      	mov	r0, r5
 8004266:	4659      	mov	r1, fp
 8004268:	f000 fe68 	bl	8004f3c <_Bfree>
 800426c:	2300      	movs	r3, #0
 800426e:	703b      	strb	r3, [r7, #0]
 8004270:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8004272:	f10a 0001 	add.w	r0, sl, #1
 8004276:	6018      	str	r0, [r3, #0]
 8004278:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800427a:	2b00      	cmp	r3, #0
 800427c:	f43f acde 	beq.w	8003c3c <_dtoa_r+0x9c>
 8004280:	601f      	str	r7, [r3, #0]
 8004282:	e4db      	b.n	8003c3c <_dtoa_r+0x9c>
 8004284:	4627      	mov	r7, r4
 8004286:	463b      	mov	r3, r7
 8004288:	461f      	mov	r7, r3
 800428a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800428e:	2a39      	cmp	r2, #57	; 0x39
 8004290:	d107      	bne.n	80042a2 <_dtoa_r+0x702>
 8004292:	9a03      	ldr	r2, [sp, #12]
 8004294:	429a      	cmp	r2, r3
 8004296:	d1f7      	bne.n	8004288 <_dtoa_r+0x6e8>
 8004298:	2230      	movs	r2, #48	; 0x30
 800429a:	9903      	ldr	r1, [sp, #12]
 800429c:	f108 0801 	add.w	r8, r8, #1
 80042a0:	700a      	strb	r2, [r1, #0]
 80042a2:	781a      	ldrb	r2, [r3, #0]
 80042a4:	3201      	adds	r2, #1
 80042a6:	701a      	strb	r2, [r3, #0]
 80042a8:	e79e      	b.n	80041e8 <_dtoa_r+0x648>
 80042aa:	46d0      	mov	r8, sl
 80042ac:	e7eb      	b.n	8004286 <_dtoa_r+0x6e6>
 80042ae:	2200      	movs	r2, #0
 80042b0:	4b6e      	ldr	r3, [pc, #440]	; (800446c <_dtoa_r+0x8cc>)
 80042b2:	f7fc f97d 	bl	80005b0 <__aeabi_dmul>
 80042b6:	2200      	movs	r2, #0
 80042b8:	2300      	movs	r3, #0
 80042ba:	4680      	mov	r8, r0
 80042bc:	4689      	mov	r9, r1
 80042be:	f7fc fbdf 	bl	8000a80 <__aeabi_dcmpeq>
 80042c2:	2800      	cmp	r0, #0
 80042c4:	d09b      	beq.n	80041fe <_dtoa_r+0x65e>
 80042c6:	e7cd      	b.n	8004264 <_dtoa_r+0x6c4>
 80042c8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80042ca:	2a00      	cmp	r2, #0
 80042cc:	f000 80d0 	beq.w	8004470 <_dtoa_r+0x8d0>
 80042d0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80042d2:	2a01      	cmp	r2, #1
 80042d4:	f300 80ae 	bgt.w	8004434 <_dtoa_r+0x894>
 80042d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80042da:	2a00      	cmp	r2, #0
 80042dc:	f000 80a6 	beq.w	800442c <_dtoa_r+0x88c>
 80042e0:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80042e4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80042e6:	9f06      	ldr	r7, [sp, #24]
 80042e8:	9a06      	ldr	r2, [sp, #24]
 80042ea:	2101      	movs	r1, #1
 80042ec:	441a      	add	r2, r3
 80042ee:	9206      	str	r2, [sp, #24]
 80042f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80042f2:	4628      	mov	r0, r5
 80042f4:	441a      	add	r2, r3
 80042f6:	9209      	str	r2, [sp, #36]	; 0x24
 80042f8:	f000 ff20 	bl	800513c <__i2b>
 80042fc:	4606      	mov	r6, r0
 80042fe:	2f00      	cmp	r7, #0
 8004300:	dd0c      	ble.n	800431c <_dtoa_r+0x77c>
 8004302:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004304:	2b00      	cmp	r3, #0
 8004306:	dd09      	ble.n	800431c <_dtoa_r+0x77c>
 8004308:	42bb      	cmp	r3, r7
 800430a:	bfa8      	it	ge
 800430c:	463b      	movge	r3, r7
 800430e:	9a06      	ldr	r2, [sp, #24]
 8004310:	1aff      	subs	r7, r7, r3
 8004312:	1ad2      	subs	r2, r2, r3
 8004314:	9206      	str	r2, [sp, #24]
 8004316:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004318:	1ad3      	subs	r3, r2, r3
 800431a:	9309      	str	r3, [sp, #36]	; 0x24
 800431c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800431e:	b1f3      	cbz	r3, 800435e <_dtoa_r+0x7be>
 8004320:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004322:	2b00      	cmp	r3, #0
 8004324:	f000 80a8 	beq.w	8004478 <_dtoa_r+0x8d8>
 8004328:	2c00      	cmp	r4, #0
 800432a:	dd10      	ble.n	800434e <_dtoa_r+0x7ae>
 800432c:	4631      	mov	r1, r6
 800432e:	4622      	mov	r2, r4
 8004330:	4628      	mov	r0, r5
 8004332:	f000 ffc1 	bl	80052b8 <__pow5mult>
 8004336:	465a      	mov	r2, fp
 8004338:	4601      	mov	r1, r0
 800433a:	4606      	mov	r6, r0
 800433c:	4628      	mov	r0, r5
 800433e:	f000 ff13 	bl	8005168 <__multiply>
 8004342:	4680      	mov	r8, r0
 8004344:	4659      	mov	r1, fp
 8004346:	4628      	mov	r0, r5
 8004348:	f000 fdf8 	bl	8004f3c <_Bfree>
 800434c:	46c3      	mov	fp, r8
 800434e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004350:	1b1a      	subs	r2, r3, r4
 8004352:	d004      	beq.n	800435e <_dtoa_r+0x7be>
 8004354:	4659      	mov	r1, fp
 8004356:	4628      	mov	r0, r5
 8004358:	f000 ffae 	bl	80052b8 <__pow5mult>
 800435c:	4683      	mov	fp, r0
 800435e:	2101      	movs	r1, #1
 8004360:	4628      	mov	r0, r5
 8004362:	f000 feeb 	bl	800513c <__i2b>
 8004366:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004368:	4604      	mov	r4, r0
 800436a:	2b00      	cmp	r3, #0
 800436c:	f340 8086 	ble.w	800447c <_dtoa_r+0x8dc>
 8004370:	461a      	mov	r2, r3
 8004372:	4601      	mov	r1, r0
 8004374:	4628      	mov	r0, r5
 8004376:	f000 ff9f 	bl	80052b8 <__pow5mult>
 800437a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800437c:	4604      	mov	r4, r0
 800437e:	2b01      	cmp	r3, #1
 8004380:	dd7f      	ble.n	8004482 <_dtoa_r+0x8e2>
 8004382:	f04f 0800 	mov.w	r8, #0
 8004386:	6923      	ldr	r3, [r4, #16]
 8004388:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800438c:	6918      	ldr	r0, [r3, #16]
 800438e:	f000 fe87 	bl	80050a0 <__hi0bits>
 8004392:	f1c0 0020 	rsb	r0, r0, #32
 8004396:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004398:	4418      	add	r0, r3
 800439a:	f010 001f 	ands.w	r0, r0, #31
 800439e:	f000 8092 	beq.w	80044c6 <_dtoa_r+0x926>
 80043a2:	f1c0 0320 	rsb	r3, r0, #32
 80043a6:	2b04      	cmp	r3, #4
 80043a8:	f340 808a 	ble.w	80044c0 <_dtoa_r+0x920>
 80043ac:	f1c0 001c 	rsb	r0, r0, #28
 80043b0:	9b06      	ldr	r3, [sp, #24]
 80043b2:	4407      	add	r7, r0
 80043b4:	4403      	add	r3, r0
 80043b6:	9306      	str	r3, [sp, #24]
 80043b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80043ba:	4403      	add	r3, r0
 80043bc:	9309      	str	r3, [sp, #36]	; 0x24
 80043be:	9b06      	ldr	r3, [sp, #24]
 80043c0:	2b00      	cmp	r3, #0
 80043c2:	dd05      	ble.n	80043d0 <_dtoa_r+0x830>
 80043c4:	4659      	mov	r1, fp
 80043c6:	461a      	mov	r2, r3
 80043c8:	4628      	mov	r0, r5
 80043ca:	f000 ffcf 	bl	800536c <__lshift>
 80043ce:	4683      	mov	fp, r0
 80043d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80043d2:	2b00      	cmp	r3, #0
 80043d4:	dd05      	ble.n	80043e2 <_dtoa_r+0x842>
 80043d6:	4621      	mov	r1, r4
 80043d8:	461a      	mov	r2, r3
 80043da:	4628      	mov	r0, r5
 80043dc:	f000 ffc6 	bl	800536c <__lshift>
 80043e0:	4604      	mov	r4, r0
 80043e2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80043e4:	2b00      	cmp	r3, #0
 80043e6:	d070      	beq.n	80044ca <_dtoa_r+0x92a>
 80043e8:	4621      	mov	r1, r4
 80043ea:	4658      	mov	r0, fp
 80043ec:	f001 f82e 	bl	800544c <__mcmp>
 80043f0:	2800      	cmp	r0, #0
 80043f2:	da6a      	bge.n	80044ca <_dtoa_r+0x92a>
 80043f4:	2300      	movs	r3, #0
 80043f6:	4659      	mov	r1, fp
 80043f8:	220a      	movs	r2, #10
 80043fa:	4628      	mov	r0, r5
 80043fc:	f000 fdc0 	bl	8004f80 <__multadd>
 8004400:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004402:	4683      	mov	fp, r0
 8004404:	f10a 3aff 	add.w	sl, sl, #4294967295
 8004408:	2b00      	cmp	r3, #0
 800440a:	f000 8194 	beq.w	8004736 <_dtoa_r+0xb96>
 800440e:	4631      	mov	r1, r6
 8004410:	2300      	movs	r3, #0
 8004412:	220a      	movs	r2, #10
 8004414:	4628      	mov	r0, r5
 8004416:	f000 fdb3 	bl	8004f80 <__multadd>
 800441a:	f1b9 0f00 	cmp.w	r9, #0
 800441e:	4606      	mov	r6, r0
 8004420:	f300 8093 	bgt.w	800454a <_dtoa_r+0x9aa>
 8004424:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004426:	2b02      	cmp	r3, #2
 8004428:	dc57      	bgt.n	80044da <_dtoa_r+0x93a>
 800442a:	e08e      	b.n	800454a <_dtoa_r+0x9aa>
 800442c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800442e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8004432:	e757      	b.n	80042e4 <_dtoa_r+0x744>
 8004434:	9b08      	ldr	r3, [sp, #32]
 8004436:	1e5c      	subs	r4, r3, #1
 8004438:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800443a:	42a3      	cmp	r3, r4
 800443c:	bfb7      	itett	lt
 800443e:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8004440:	1b1c      	subge	r4, r3, r4
 8004442:	1ae2      	sublt	r2, r4, r3
 8004444:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8004446:	bfbe      	ittt	lt
 8004448:	940a      	strlt	r4, [sp, #40]	; 0x28
 800444a:	189b      	addlt	r3, r3, r2
 800444c:	930e      	strlt	r3, [sp, #56]	; 0x38
 800444e:	9b08      	ldr	r3, [sp, #32]
 8004450:	bfb8      	it	lt
 8004452:	2400      	movlt	r4, #0
 8004454:	2b00      	cmp	r3, #0
 8004456:	bfbb      	ittet	lt
 8004458:	9b06      	ldrlt	r3, [sp, #24]
 800445a:	9a08      	ldrlt	r2, [sp, #32]
 800445c:	9f06      	ldrge	r7, [sp, #24]
 800445e:	1a9f      	sublt	r7, r3, r2
 8004460:	bfac      	ite	ge
 8004462:	9b08      	ldrge	r3, [sp, #32]
 8004464:	2300      	movlt	r3, #0
 8004466:	e73f      	b.n	80042e8 <_dtoa_r+0x748>
 8004468:	3fe00000 	.word	0x3fe00000
 800446c:	40240000 	.word	0x40240000
 8004470:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004472:	9f06      	ldr	r7, [sp, #24]
 8004474:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004476:	e742      	b.n	80042fe <_dtoa_r+0x75e>
 8004478:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800447a:	e76b      	b.n	8004354 <_dtoa_r+0x7b4>
 800447c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800447e:	2b01      	cmp	r3, #1
 8004480:	dc19      	bgt.n	80044b6 <_dtoa_r+0x916>
 8004482:	9b04      	ldr	r3, [sp, #16]
 8004484:	b9bb      	cbnz	r3, 80044b6 <_dtoa_r+0x916>
 8004486:	9b05      	ldr	r3, [sp, #20]
 8004488:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800448c:	b99b      	cbnz	r3, 80044b6 <_dtoa_r+0x916>
 800448e:	9b05      	ldr	r3, [sp, #20]
 8004490:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004494:	0d1b      	lsrs	r3, r3, #20
 8004496:	051b      	lsls	r3, r3, #20
 8004498:	b183      	cbz	r3, 80044bc <_dtoa_r+0x91c>
 800449a:	f04f 0801 	mov.w	r8, #1
 800449e:	9b06      	ldr	r3, [sp, #24]
 80044a0:	3301      	adds	r3, #1
 80044a2:	9306      	str	r3, [sp, #24]
 80044a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80044a6:	3301      	adds	r3, #1
 80044a8:	9309      	str	r3, [sp, #36]	; 0x24
 80044aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80044ac:	2b00      	cmp	r3, #0
 80044ae:	f47f af6a 	bne.w	8004386 <_dtoa_r+0x7e6>
 80044b2:	2001      	movs	r0, #1
 80044b4:	e76f      	b.n	8004396 <_dtoa_r+0x7f6>
 80044b6:	f04f 0800 	mov.w	r8, #0
 80044ba:	e7f6      	b.n	80044aa <_dtoa_r+0x90a>
 80044bc:	4698      	mov	r8, r3
 80044be:	e7f4      	b.n	80044aa <_dtoa_r+0x90a>
 80044c0:	f43f af7d 	beq.w	80043be <_dtoa_r+0x81e>
 80044c4:	4618      	mov	r0, r3
 80044c6:	301c      	adds	r0, #28
 80044c8:	e772      	b.n	80043b0 <_dtoa_r+0x810>
 80044ca:	9b08      	ldr	r3, [sp, #32]
 80044cc:	2b00      	cmp	r3, #0
 80044ce:	dc36      	bgt.n	800453e <_dtoa_r+0x99e>
 80044d0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80044d2:	2b02      	cmp	r3, #2
 80044d4:	dd33      	ble.n	800453e <_dtoa_r+0x99e>
 80044d6:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80044da:	f1b9 0f00 	cmp.w	r9, #0
 80044de:	d10d      	bne.n	80044fc <_dtoa_r+0x95c>
 80044e0:	4621      	mov	r1, r4
 80044e2:	464b      	mov	r3, r9
 80044e4:	2205      	movs	r2, #5
 80044e6:	4628      	mov	r0, r5
 80044e8:	f000 fd4a 	bl	8004f80 <__multadd>
 80044ec:	4601      	mov	r1, r0
 80044ee:	4604      	mov	r4, r0
 80044f0:	4658      	mov	r0, fp
 80044f2:	f000 ffab 	bl	800544c <__mcmp>
 80044f6:	2800      	cmp	r0, #0
 80044f8:	f73f adb8 	bgt.w	800406c <_dtoa_r+0x4cc>
 80044fc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80044fe:	9f03      	ldr	r7, [sp, #12]
 8004500:	ea6f 0a03 	mvn.w	sl, r3
 8004504:	f04f 0800 	mov.w	r8, #0
 8004508:	4621      	mov	r1, r4
 800450a:	4628      	mov	r0, r5
 800450c:	f000 fd16 	bl	8004f3c <_Bfree>
 8004510:	2e00      	cmp	r6, #0
 8004512:	f43f aea7 	beq.w	8004264 <_dtoa_r+0x6c4>
 8004516:	f1b8 0f00 	cmp.w	r8, #0
 800451a:	d005      	beq.n	8004528 <_dtoa_r+0x988>
 800451c:	45b0      	cmp	r8, r6
 800451e:	d003      	beq.n	8004528 <_dtoa_r+0x988>
 8004520:	4641      	mov	r1, r8
 8004522:	4628      	mov	r0, r5
 8004524:	f000 fd0a 	bl	8004f3c <_Bfree>
 8004528:	4631      	mov	r1, r6
 800452a:	4628      	mov	r0, r5
 800452c:	f000 fd06 	bl	8004f3c <_Bfree>
 8004530:	e698      	b.n	8004264 <_dtoa_r+0x6c4>
 8004532:	2400      	movs	r4, #0
 8004534:	4626      	mov	r6, r4
 8004536:	e7e1      	b.n	80044fc <_dtoa_r+0x95c>
 8004538:	46c2      	mov	sl, r8
 800453a:	4626      	mov	r6, r4
 800453c:	e596      	b.n	800406c <_dtoa_r+0x4cc>
 800453e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004540:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8004544:	2b00      	cmp	r3, #0
 8004546:	f000 80fd 	beq.w	8004744 <_dtoa_r+0xba4>
 800454a:	2f00      	cmp	r7, #0
 800454c:	dd05      	ble.n	800455a <_dtoa_r+0x9ba>
 800454e:	4631      	mov	r1, r6
 8004550:	463a      	mov	r2, r7
 8004552:	4628      	mov	r0, r5
 8004554:	f000 ff0a 	bl	800536c <__lshift>
 8004558:	4606      	mov	r6, r0
 800455a:	f1b8 0f00 	cmp.w	r8, #0
 800455e:	d05c      	beq.n	800461a <_dtoa_r+0xa7a>
 8004560:	4628      	mov	r0, r5
 8004562:	6871      	ldr	r1, [r6, #4]
 8004564:	f000 fcaa 	bl	8004ebc <_Balloc>
 8004568:	4607      	mov	r7, r0
 800456a:	b928      	cbnz	r0, 8004578 <_dtoa_r+0x9d8>
 800456c:	4602      	mov	r2, r0
 800456e:	f240 21ea 	movw	r1, #746	; 0x2ea
 8004572:	4b7f      	ldr	r3, [pc, #508]	; (8004770 <_dtoa_r+0xbd0>)
 8004574:	f7ff bb28 	b.w	8003bc8 <_dtoa_r+0x28>
 8004578:	6932      	ldr	r2, [r6, #16]
 800457a:	f106 010c 	add.w	r1, r6, #12
 800457e:	3202      	adds	r2, #2
 8004580:	0092      	lsls	r2, r2, #2
 8004582:	300c      	adds	r0, #12
 8004584:	f000 fc8c 	bl	8004ea0 <memcpy>
 8004588:	2201      	movs	r2, #1
 800458a:	4639      	mov	r1, r7
 800458c:	4628      	mov	r0, r5
 800458e:	f000 feed 	bl	800536c <__lshift>
 8004592:	46b0      	mov	r8, r6
 8004594:	4606      	mov	r6, r0
 8004596:	9b03      	ldr	r3, [sp, #12]
 8004598:	3301      	adds	r3, #1
 800459a:	9308      	str	r3, [sp, #32]
 800459c:	9b03      	ldr	r3, [sp, #12]
 800459e:	444b      	add	r3, r9
 80045a0:	930a      	str	r3, [sp, #40]	; 0x28
 80045a2:	9b04      	ldr	r3, [sp, #16]
 80045a4:	f003 0301 	and.w	r3, r3, #1
 80045a8:	9309      	str	r3, [sp, #36]	; 0x24
 80045aa:	9b08      	ldr	r3, [sp, #32]
 80045ac:	4621      	mov	r1, r4
 80045ae:	3b01      	subs	r3, #1
 80045b0:	4658      	mov	r0, fp
 80045b2:	9304      	str	r3, [sp, #16]
 80045b4:	f7ff fa68 	bl	8003a88 <quorem>
 80045b8:	4603      	mov	r3, r0
 80045ba:	4641      	mov	r1, r8
 80045bc:	3330      	adds	r3, #48	; 0x30
 80045be:	9006      	str	r0, [sp, #24]
 80045c0:	4658      	mov	r0, fp
 80045c2:	930b      	str	r3, [sp, #44]	; 0x2c
 80045c4:	f000 ff42 	bl	800544c <__mcmp>
 80045c8:	4632      	mov	r2, r6
 80045ca:	4681      	mov	r9, r0
 80045cc:	4621      	mov	r1, r4
 80045ce:	4628      	mov	r0, r5
 80045d0:	f000 ff58 	bl	8005484 <__mdiff>
 80045d4:	68c2      	ldr	r2, [r0, #12]
 80045d6:	4607      	mov	r7, r0
 80045d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80045da:	bb02      	cbnz	r2, 800461e <_dtoa_r+0xa7e>
 80045dc:	4601      	mov	r1, r0
 80045de:	4658      	mov	r0, fp
 80045e0:	f000 ff34 	bl	800544c <__mcmp>
 80045e4:	4602      	mov	r2, r0
 80045e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80045e8:	4639      	mov	r1, r7
 80045ea:	4628      	mov	r0, r5
 80045ec:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 80045f0:	f000 fca4 	bl	8004f3c <_Bfree>
 80045f4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80045f6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80045f8:	9f08      	ldr	r7, [sp, #32]
 80045fa:	ea43 0102 	orr.w	r1, r3, r2
 80045fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004600:	430b      	orrs	r3, r1
 8004602:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004604:	d10d      	bne.n	8004622 <_dtoa_r+0xa82>
 8004606:	2b39      	cmp	r3, #57	; 0x39
 8004608:	d029      	beq.n	800465e <_dtoa_r+0xabe>
 800460a:	f1b9 0f00 	cmp.w	r9, #0
 800460e:	dd01      	ble.n	8004614 <_dtoa_r+0xa74>
 8004610:	9b06      	ldr	r3, [sp, #24]
 8004612:	3331      	adds	r3, #49	; 0x31
 8004614:	9a04      	ldr	r2, [sp, #16]
 8004616:	7013      	strb	r3, [r2, #0]
 8004618:	e776      	b.n	8004508 <_dtoa_r+0x968>
 800461a:	4630      	mov	r0, r6
 800461c:	e7b9      	b.n	8004592 <_dtoa_r+0x9f2>
 800461e:	2201      	movs	r2, #1
 8004620:	e7e2      	b.n	80045e8 <_dtoa_r+0xa48>
 8004622:	f1b9 0f00 	cmp.w	r9, #0
 8004626:	db06      	blt.n	8004636 <_dtoa_r+0xa96>
 8004628:	9922      	ldr	r1, [sp, #136]	; 0x88
 800462a:	ea41 0909 	orr.w	r9, r1, r9
 800462e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004630:	ea59 0101 	orrs.w	r1, r9, r1
 8004634:	d120      	bne.n	8004678 <_dtoa_r+0xad8>
 8004636:	2a00      	cmp	r2, #0
 8004638:	ddec      	ble.n	8004614 <_dtoa_r+0xa74>
 800463a:	4659      	mov	r1, fp
 800463c:	2201      	movs	r2, #1
 800463e:	4628      	mov	r0, r5
 8004640:	9308      	str	r3, [sp, #32]
 8004642:	f000 fe93 	bl	800536c <__lshift>
 8004646:	4621      	mov	r1, r4
 8004648:	4683      	mov	fp, r0
 800464a:	f000 feff 	bl	800544c <__mcmp>
 800464e:	2800      	cmp	r0, #0
 8004650:	9b08      	ldr	r3, [sp, #32]
 8004652:	dc02      	bgt.n	800465a <_dtoa_r+0xaba>
 8004654:	d1de      	bne.n	8004614 <_dtoa_r+0xa74>
 8004656:	07da      	lsls	r2, r3, #31
 8004658:	d5dc      	bpl.n	8004614 <_dtoa_r+0xa74>
 800465a:	2b39      	cmp	r3, #57	; 0x39
 800465c:	d1d8      	bne.n	8004610 <_dtoa_r+0xa70>
 800465e:	2339      	movs	r3, #57	; 0x39
 8004660:	9a04      	ldr	r2, [sp, #16]
 8004662:	7013      	strb	r3, [r2, #0]
 8004664:	463b      	mov	r3, r7
 8004666:	461f      	mov	r7, r3
 8004668:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 800466c:	3b01      	subs	r3, #1
 800466e:	2a39      	cmp	r2, #57	; 0x39
 8004670:	d050      	beq.n	8004714 <_dtoa_r+0xb74>
 8004672:	3201      	adds	r2, #1
 8004674:	701a      	strb	r2, [r3, #0]
 8004676:	e747      	b.n	8004508 <_dtoa_r+0x968>
 8004678:	2a00      	cmp	r2, #0
 800467a:	dd03      	ble.n	8004684 <_dtoa_r+0xae4>
 800467c:	2b39      	cmp	r3, #57	; 0x39
 800467e:	d0ee      	beq.n	800465e <_dtoa_r+0xabe>
 8004680:	3301      	adds	r3, #1
 8004682:	e7c7      	b.n	8004614 <_dtoa_r+0xa74>
 8004684:	9a08      	ldr	r2, [sp, #32]
 8004686:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004688:	f802 3c01 	strb.w	r3, [r2, #-1]
 800468c:	428a      	cmp	r2, r1
 800468e:	d02a      	beq.n	80046e6 <_dtoa_r+0xb46>
 8004690:	4659      	mov	r1, fp
 8004692:	2300      	movs	r3, #0
 8004694:	220a      	movs	r2, #10
 8004696:	4628      	mov	r0, r5
 8004698:	f000 fc72 	bl	8004f80 <__multadd>
 800469c:	45b0      	cmp	r8, r6
 800469e:	4683      	mov	fp, r0
 80046a0:	f04f 0300 	mov.w	r3, #0
 80046a4:	f04f 020a 	mov.w	r2, #10
 80046a8:	4641      	mov	r1, r8
 80046aa:	4628      	mov	r0, r5
 80046ac:	d107      	bne.n	80046be <_dtoa_r+0xb1e>
 80046ae:	f000 fc67 	bl	8004f80 <__multadd>
 80046b2:	4680      	mov	r8, r0
 80046b4:	4606      	mov	r6, r0
 80046b6:	9b08      	ldr	r3, [sp, #32]
 80046b8:	3301      	adds	r3, #1
 80046ba:	9308      	str	r3, [sp, #32]
 80046bc:	e775      	b.n	80045aa <_dtoa_r+0xa0a>
 80046be:	f000 fc5f 	bl	8004f80 <__multadd>
 80046c2:	4631      	mov	r1, r6
 80046c4:	4680      	mov	r8, r0
 80046c6:	2300      	movs	r3, #0
 80046c8:	220a      	movs	r2, #10
 80046ca:	4628      	mov	r0, r5
 80046cc:	f000 fc58 	bl	8004f80 <__multadd>
 80046d0:	4606      	mov	r6, r0
 80046d2:	e7f0      	b.n	80046b6 <_dtoa_r+0xb16>
 80046d4:	f1b9 0f00 	cmp.w	r9, #0
 80046d8:	bfcc      	ite	gt
 80046da:	464f      	movgt	r7, r9
 80046dc:	2701      	movle	r7, #1
 80046de:	f04f 0800 	mov.w	r8, #0
 80046e2:	9a03      	ldr	r2, [sp, #12]
 80046e4:	4417      	add	r7, r2
 80046e6:	4659      	mov	r1, fp
 80046e8:	2201      	movs	r2, #1
 80046ea:	4628      	mov	r0, r5
 80046ec:	9308      	str	r3, [sp, #32]
 80046ee:	f000 fe3d 	bl	800536c <__lshift>
 80046f2:	4621      	mov	r1, r4
 80046f4:	4683      	mov	fp, r0
 80046f6:	f000 fea9 	bl	800544c <__mcmp>
 80046fa:	2800      	cmp	r0, #0
 80046fc:	dcb2      	bgt.n	8004664 <_dtoa_r+0xac4>
 80046fe:	d102      	bne.n	8004706 <_dtoa_r+0xb66>
 8004700:	9b08      	ldr	r3, [sp, #32]
 8004702:	07db      	lsls	r3, r3, #31
 8004704:	d4ae      	bmi.n	8004664 <_dtoa_r+0xac4>
 8004706:	463b      	mov	r3, r7
 8004708:	461f      	mov	r7, r3
 800470a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800470e:	2a30      	cmp	r2, #48	; 0x30
 8004710:	d0fa      	beq.n	8004708 <_dtoa_r+0xb68>
 8004712:	e6f9      	b.n	8004508 <_dtoa_r+0x968>
 8004714:	9a03      	ldr	r2, [sp, #12]
 8004716:	429a      	cmp	r2, r3
 8004718:	d1a5      	bne.n	8004666 <_dtoa_r+0xac6>
 800471a:	2331      	movs	r3, #49	; 0x31
 800471c:	f10a 0a01 	add.w	sl, sl, #1
 8004720:	e779      	b.n	8004616 <_dtoa_r+0xa76>
 8004722:	4b14      	ldr	r3, [pc, #80]	; (8004774 <_dtoa_r+0xbd4>)
 8004724:	f7ff baa8 	b.w	8003c78 <_dtoa_r+0xd8>
 8004728:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800472a:	2b00      	cmp	r3, #0
 800472c:	f47f aa81 	bne.w	8003c32 <_dtoa_r+0x92>
 8004730:	4b11      	ldr	r3, [pc, #68]	; (8004778 <_dtoa_r+0xbd8>)
 8004732:	f7ff baa1 	b.w	8003c78 <_dtoa_r+0xd8>
 8004736:	f1b9 0f00 	cmp.w	r9, #0
 800473a:	dc03      	bgt.n	8004744 <_dtoa_r+0xba4>
 800473c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800473e:	2b02      	cmp	r3, #2
 8004740:	f73f aecb 	bgt.w	80044da <_dtoa_r+0x93a>
 8004744:	9f03      	ldr	r7, [sp, #12]
 8004746:	4621      	mov	r1, r4
 8004748:	4658      	mov	r0, fp
 800474a:	f7ff f99d 	bl	8003a88 <quorem>
 800474e:	9a03      	ldr	r2, [sp, #12]
 8004750:	f100 0330 	add.w	r3, r0, #48	; 0x30
 8004754:	f807 3b01 	strb.w	r3, [r7], #1
 8004758:	1aba      	subs	r2, r7, r2
 800475a:	4591      	cmp	r9, r2
 800475c:	ddba      	ble.n	80046d4 <_dtoa_r+0xb34>
 800475e:	4659      	mov	r1, fp
 8004760:	2300      	movs	r3, #0
 8004762:	220a      	movs	r2, #10
 8004764:	4628      	mov	r0, r5
 8004766:	f000 fc0b 	bl	8004f80 <__multadd>
 800476a:	4683      	mov	fp, r0
 800476c:	e7eb      	b.n	8004746 <_dtoa_r+0xba6>
 800476e:	bf00      	nop
 8004770:	08006af0 	.word	0x08006af0
 8004774:	080068f4 	.word	0x080068f4
 8004778:	08006a71 	.word	0x08006a71

0800477c <rshift>:
 800477c:	6903      	ldr	r3, [r0, #16]
 800477e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004782:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8004786:	f100 0414 	add.w	r4, r0, #20
 800478a:	ea4f 1261 	mov.w	r2, r1, asr #5
 800478e:	dd46      	ble.n	800481e <rshift+0xa2>
 8004790:	f011 011f 	ands.w	r1, r1, #31
 8004794:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8004798:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800479c:	d10c      	bne.n	80047b8 <rshift+0x3c>
 800479e:	4629      	mov	r1, r5
 80047a0:	f100 0710 	add.w	r7, r0, #16
 80047a4:	42b1      	cmp	r1, r6
 80047a6:	d335      	bcc.n	8004814 <rshift+0x98>
 80047a8:	1a9b      	subs	r3, r3, r2
 80047aa:	009b      	lsls	r3, r3, #2
 80047ac:	1eea      	subs	r2, r5, #3
 80047ae:	4296      	cmp	r6, r2
 80047b0:	bf38      	it	cc
 80047b2:	2300      	movcc	r3, #0
 80047b4:	4423      	add	r3, r4
 80047b6:	e015      	b.n	80047e4 <rshift+0x68>
 80047b8:	46a1      	mov	r9, r4
 80047ba:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80047be:	f1c1 0820 	rsb	r8, r1, #32
 80047c2:	40cf      	lsrs	r7, r1
 80047c4:	f105 0e04 	add.w	lr, r5, #4
 80047c8:	4576      	cmp	r6, lr
 80047ca:	46f4      	mov	ip, lr
 80047cc:	d816      	bhi.n	80047fc <rshift+0x80>
 80047ce:	1a9a      	subs	r2, r3, r2
 80047d0:	0092      	lsls	r2, r2, #2
 80047d2:	3a04      	subs	r2, #4
 80047d4:	3501      	adds	r5, #1
 80047d6:	42ae      	cmp	r6, r5
 80047d8:	bf38      	it	cc
 80047da:	2200      	movcc	r2, #0
 80047dc:	18a3      	adds	r3, r4, r2
 80047de:	50a7      	str	r7, [r4, r2]
 80047e0:	b107      	cbz	r7, 80047e4 <rshift+0x68>
 80047e2:	3304      	adds	r3, #4
 80047e4:	42a3      	cmp	r3, r4
 80047e6:	eba3 0204 	sub.w	r2, r3, r4
 80047ea:	bf08      	it	eq
 80047ec:	2300      	moveq	r3, #0
 80047ee:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80047f2:	6102      	str	r2, [r0, #16]
 80047f4:	bf08      	it	eq
 80047f6:	6143      	streq	r3, [r0, #20]
 80047f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80047fc:	f8dc c000 	ldr.w	ip, [ip]
 8004800:	fa0c fc08 	lsl.w	ip, ip, r8
 8004804:	ea4c 0707 	orr.w	r7, ip, r7
 8004808:	f849 7b04 	str.w	r7, [r9], #4
 800480c:	f85e 7b04 	ldr.w	r7, [lr], #4
 8004810:	40cf      	lsrs	r7, r1
 8004812:	e7d9      	b.n	80047c8 <rshift+0x4c>
 8004814:	f851 cb04 	ldr.w	ip, [r1], #4
 8004818:	f847 cf04 	str.w	ip, [r7, #4]!
 800481c:	e7c2      	b.n	80047a4 <rshift+0x28>
 800481e:	4623      	mov	r3, r4
 8004820:	e7e0      	b.n	80047e4 <rshift+0x68>

08004822 <__hexdig_fun>:
 8004822:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8004826:	2b09      	cmp	r3, #9
 8004828:	d802      	bhi.n	8004830 <__hexdig_fun+0xe>
 800482a:	3820      	subs	r0, #32
 800482c:	b2c0      	uxtb	r0, r0
 800482e:	4770      	bx	lr
 8004830:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8004834:	2b05      	cmp	r3, #5
 8004836:	d801      	bhi.n	800483c <__hexdig_fun+0x1a>
 8004838:	3847      	subs	r0, #71	; 0x47
 800483a:	e7f7      	b.n	800482c <__hexdig_fun+0xa>
 800483c:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8004840:	2b05      	cmp	r3, #5
 8004842:	d801      	bhi.n	8004848 <__hexdig_fun+0x26>
 8004844:	3827      	subs	r0, #39	; 0x27
 8004846:	e7f1      	b.n	800482c <__hexdig_fun+0xa>
 8004848:	2000      	movs	r0, #0
 800484a:	4770      	bx	lr

0800484c <__gethex>:
 800484c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004850:	b08b      	sub	sp, #44	; 0x2c
 8004852:	9305      	str	r3, [sp, #20]
 8004854:	4bb2      	ldr	r3, [pc, #712]	; (8004b20 <__gethex+0x2d4>)
 8004856:	9002      	str	r0, [sp, #8]
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	468b      	mov	fp, r1
 800485c:	4618      	mov	r0, r3
 800485e:	4690      	mov	r8, r2
 8004860:	9303      	str	r3, [sp, #12]
 8004862:	f7fb fce1 	bl	8000228 <strlen>
 8004866:	4682      	mov	sl, r0
 8004868:	9b03      	ldr	r3, [sp, #12]
 800486a:	f8db 2000 	ldr.w	r2, [fp]
 800486e:	4403      	add	r3, r0
 8004870:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8004874:	9306      	str	r3, [sp, #24]
 8004876:	1c93      	adds	r3, r2, #2
 8004878:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800487c:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8004880:	32fe      	adds	r2, #254	; 0xfe
 8004882:	18d1      	adds	r1, r2, r3
 8004884:	461f      	mov	r7, r3
 8004886:	f813 0b01 	ldrb.w	r0, [r3], #1
 800488a:	9101      	str	r1, [sp, #4]
 800488c:	2830      	cmp	r0, #48	; 0x30
 800488e:	d0f8      	beq.n	8004882 <__gethex+0x36>
 8004890:	f7ff ffc7 	bl	8004822 <__hexdig_fun>
 8004894:	4604      	mov	r4, r0
 8004896:	2800      	cmp	r0, #0
 8004898:	d13a      	bne.n	8004910 <__gethex+0xc4>
 800489a:	4652      	mov	r2, sl
 800489c:	4638      	mov	r0, r7
 800489e:	9903      	ldr	r1, [sp, #12]
 80048a0:	f001 fa26 	bl	8005cf0 <strncmp>
 80048a4:	4605      	mov	r5, r0
 80048a6:	2800      	cmp	r0, #0
 80048a8:	d166      	bne.n	8004978 <__gethex+0x12c>
 80048aa:	f817 000a 	ldrb.w	r0, [r7, sl]
 80048ae:	eb07 060a 	add.w	r6, r7, sl
 80048b2:	f7ff ffb6 	bl	8004822 <__hexdig_fun>
 80048b6:	2800      	cmp	r0, #0
 80048b8:	d060      	beq.n	800497c <__gethex+0x130>
 80048ba:	4633      	mov	r3, r6
 80048bc:	7818      	ldrb	r0, [r3, #0]
 80048be:	461f      	mov	r7, r3
 80048c0:	2830      	cmp	r0, #48	; 0x30
 80048c2:	f103 0301 	add.w	r3, r3, #1
 80048c6:	d0f9      	beq.n	80048bc <__gethex+0x70>
 80048c8:	f7ff ffab 	bl	8004822 <__hexdig_fun>
 80048cc:	2301      	movs	r3, #1
 80048ce:	fab0 f480 	clz	r4, r0
 80048d2:	4635      	mov	r5, r6
 80048d4:	0964      	lsrs	r4, r4, #5
 80048d6:	9301      	str	r3, [sp, #4]
 80048d8:	463a      	mov	r2, r7
 80048da:	4616      	mov	r6, r2
 80048dc:	7830      	ldrb	r0, [r6, #0]
 80048de:	3201      	adds	r2, #1
 80048e0:	f7ff ff9f 	bl	8004822 <__hexdig_fun>
 80048e4:	2800      	cmp	r0, #0
 80048e6:	d1f8      	bne.n	80048da <__gethex+0x8e>
 80048e8:	4652      	mov	r2, sl
 80048ea:	4630      	mov	r0, r6
 80048ec:	9903      	ldr	r1, [sp, #12]
 80048ee:	f001 f9ff 	bl	8005cf0 <strncmp>
 80048f2:	b980      	cbnz	r0, 8004916 <__gethex+0xca>
 80048f4:	b94d      	cbnz	r5, 800490a <__gethex+0xbe>
 80048f6:	eb06 050a 	add.w	r5, r6, sl
 80048fa:	462a      	mov	r2, r5
 80048fc:	4616      	mov	r6, r2
 80048fe:	7830      	ldrb	r0, [r6, #0]
 8004900:	3201      	adds	r2, #1
 8004902:	f7ff ff8e 	bl	8004822 <__hexdig_fun>
 8004906:	2800      	cmp	r0, #0
 8004908:	d1f8      	bne.n	80048fc <__gethex+0xb0>
 800490a:	1bad      	subs	r5, r5, r6
 800490c:	00ad      	lsls	r5, r5, #2
 800490e:	e004      	b.n	800491a <__gethex+0xce>
 8004910:	2400      	movs	r4, #0
 8004912:	4625      	mov	r5, r4
 8004914:	e7e0      	b.n	80048d8 <__gethex+0x8c>
 8004916:	2d00      	cmp	r5, #0
 8004918:	d1f7      	bne.n	800490a <__gethex+0xbe>
 800491a:	7833      	ldrb	r3, [r6, #0]
 800491c:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8004920:	2b50      	cmp	r3, #80	; 0x50
 8004922:	d139      	bne.n	8004998 <__gethex+0x14c>
 8004924:	7873      	ldrb	r3, [r6, #1]
 8004926:	2b2b      	cmp	r3, #43	; 0x2b
 8004928:	d02a      	beq.n	8004980 <__gethex+0x134>
 800492a:	2b2d      	cmp	r3, #45	; 0x2d
 800492c:	d02c      	beq.n	8004988 <__gethex+0x13c>
 800492e:	f04f 0900 	mov.w	r9, #0
 8004932:	1c71      	adds	r1, r6, #1
 8004934:	7808      	ldrb	r0, [r1, #0]
 8004936:	f7ff ff74 	bl	8004822 <__hexdig_fun>
 800493a:	1e43      	subs	r3, r0, #1
 800493c:	b2db      	uxtb	r3, r3
 800493e:	2b18      	cmp	r3, #24
 8004940:	d82a      	bhi.n	8004998 <__gethex+0x14c>
 8004942:	f1a0 0210 	sub.w	r2, r0, #16
 8004946:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800494a:	f7ff ff6a 	bl	8004822 <__hexdig_fun>
 800494e:	1e43      	subs	r3, r0, #1
 8004950:	b2db      	uxtb	r3, r3
 8004952:	2b18      	cmp	r3, #24
 8004954:	d91b      	bls.n	800498e <__gethex+0x142>
 8004956:	f1b9 0f00 	cmp.w	r9, #0
 800495a:	d000      	beq.n	800495e <__gethex+0x112>
 800495c:	4252      	negs	r2, r2
 800495e:	4415      	add	r5, r2
 8004960:	f8cb 1000 	str.w	r1, [fp]
 8004964:	b1d4      	cbz	r4, 800499c <__gethex+0x150>
 8004966:	9b01      	ldr	r3, [sp, #4]
 8004968:	2b00      	cmp	r3, #0
 800496a:	bf14      	ite	ne
 800496c:	2700      	movne	r7, #0
 800496e:	2706      	moveq	r7, #6
 8004970:	4638      	mov	r0, r7
 8004972:	b00b      	add	sp, #44	; 0x2c
 8004974:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004978:	463e      	mov	r6, r7
 800497a:	4625      	mov	r5, r4
 800497c:	2401      	movs	r4, #1
 800497e:	e7cc      	b.n	800491a <__gethex+0xce>
 8004980:	f04f 0900 	mov.w	r9, #0
 8004984:	1cb1      	adds	r1, r6, #2
 8004986:	e7d5      	b.n	8004934 <__gethex+0xe8>
 8004988:	f04f 0901 	mov.w	r9, #1
 800498c:	e7fa      	b.n	8004984 <__gethex+0x138>
 800498e:	230a      	movs	r3, #10
 8004990:	fb03 0202 	mla	r2, r3, r2, r0
 8004994:	3a10      	subs	r2, #16
 8004996:	e7d6      	b.n	8004946 <__gethex+0xfa>
 8004998:	4631      	mov	r1, r6
 800499a:	e7e1      	b.n	8004960 <__gethex+0x114>
 800499c:	4621      	mov	r1, r4
 800499e:	1bf3      	subs	r3, r6, r7
 80049a0:	3b01      	subs	r3, #1
 80049a2:	2b07      	cmp	r3, #7
 80049a4:	dc0a      	bgt.n	80049bc <__gethex+0x170>
 80049a6:	9802      	ldr	r0, [sp, #8]
 80049a8:	f000 fa88 	bl	8004ebc <_Balloc>
 80049ac:	4604      	mov	r4, r0
 80049ae:	b940      	cbnz	r0, 80049c2 <__gethex+0x176>
 80049b0:	4602      	mov	r2, r0
 80049b2:	21de      	movs	r1, #222	; 0xde
 80049b4:	4b5b      	ldr	r3, [pc, #364]	; (8004b24 <__gethex+0x2d8>)
 80049b6:	485c      	ldr	r0, [pc, #368]	; (8004b28 <__gethex+0x2dc>)
 80049b8:	f001 f9bc 	bl	8005d34 <__assert_func>
 80049bc:	3101      	adds	r1, #1
 80049be:	105b      	asrs	r3, r3, #1
 80049c0:	e7ef      	b.n	80049a2 <__gethex+0x156>
 80049c2:	f04f 0b00 	mov.w	fp, #0
 80049c6:	f100 0914 	add.w	r9, r0, #20
 80049ca:	f1ca 0301 	rsb	r3, sl, #1
 80049ce:	f8cd 9010 	str.w	r9, [sp, #16]
 80049d2:	f8cd b004 	str.w	fp, [sp, #4]
 80049d6:	9308      	str	r3, [sp, #32]
 80049d8:	42b7      	cmp	r7, r6
 80049da:	d33f      	bcc.n	8004a5c <__gethex+0x210>
 80049dc:	9f04      	ldr	r7, [sp, #16]
 80049de:	9b01      	ldr	r3, [sp, #4]
 80049e0:	f847 3b04 	str.w	r3, [r7], #4
 80049e4:	eba7 0709 	sub.w	r7, r7, r9
 80049e8:	10bf      	asrs	r7, r7, #2
 80049ea:	6127      	str	r7, [r4, #16]
 80049ec:	4618      	mov	r0, r3
 80049ee:	f000 fb57 	bl	80050a0 <__hi0bits>
 80049f2:	017f      	lsls	r7, r7, #5
 80049f4:	f8d8 6000 	ldr.w	r6, [r8]
 80049f8:	1a3f      	subs	r7, r7, r0
 80049fa:	42b7      	cmp	r7, r6
 80049fc:	dd62      	ble.n	8004ac4 <__gethex+0x278>
 80049fe:	1bbf      	subs	r7, r7, r6
 8004a00:	4639      	mov	r1, r7
 8004a02:	4620      	mov	r0, r4
 8004a04:	f000 fef1 	bl	80057ea <__any_on>
 8004a08:	4682      	mov	sl, r0
 8004a0a:	b1a8      	cbz	r0, 8004a38 <__gethex+0x1ec>
 8004a0c:	f04f 0a01 	mov.w	sl, #1
 8004a10:	1e7b      	subs	r3, r7, #1
 8004a12:	1159      	asrs	r1, r3, #5
 8004a14:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8004a18:	f003 021f 	and.w	r2, r3, #31
 8004a1c:	fa0a f202 	lsl.w	r2, sl, r2
 8004a20:	420a      	tst	r2, r1
 8004a22:	d009      	beq.n	8004a38 <__gethex+0x1ec>
 8004a24:	4553      	cmp	r3, sl
 8004a26:	dd05      	ble.n	8004a34 <__gethex+0x1e8>
 8004a28:	4620      	mov	r0, r4
 8004a2a:	1eb9      	subs	r1, r7, #2
 8004a2c:	f000 fedd 	bl	80057ea <__any_on>
 8004a30:	2800      	cmp	r0, #0
 8004a32:	d144      	bne.n	8004abe <__gethex+0x272>
 8004a34:	f04f 0a02 	mov.w	sl, #2
 8004a38:	4639      	mov	r1, r7
 8004a3a:	4620      	mov	r0, r4
 8004a3c:	f7ff fe9e 	bl	800477c <rshift>
 8004a40:	443d      	add	r5, r7
 8004a42:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8004a46:	42ab      	cmp	r3, r5
 8004a48:	da4a      	bge.n	8004ae0 <__gethex+0x294>
 8004a4a:	4621      	mov	r1, r4
 8004a4c:	9802      	ldr	r0, [sp, #8]
 8004a4e:	f000 fa75 	bl	8004f3c <_Bfree>
 8004a52:	2300      	movs	r3, #0
 8004a54:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8004a56:	27a3      	movs	r7, #163	; 0xa3
 8004a58:	6013      	str	r3, [r2, #0]
 8004a5a:	e789      	b.n	8004970 <__gethex+0x124>
 8004a5c:	1e73      	subs	r3, r6, #1
 8004a5e:	9a06      	ldr	r2, [sp, #24]
 8004a60:	9307      	str	r3, [sp, #28]
 8004a62:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8004a66:	4293      	cmp	r3, r2
 8004a68:	d019      	beq.n	8004a9e <__gethex+0x252>
 8004a6a:	f1bb 0f20 	cmp.w	fp, #32
 8004a6e:	d107      	bne.n	8004a80 <__gethex+0x234>
 8004a70:	9b04      	ldr	r3, [sp, #16]
 8004a72:	9a01      	ldr	r2, [sp, #4]
 8004a74:	f843 2b04 	str.w	r2, [r3], #4
 8004a78:	9304      	str	r3, [sp, #16]
 8004a7a:	2300      	movs	r3, #0
 8004a7c:	469b      	mov	fp, r3
 8004a7e:	9301      	str	r3, [sp, #4]
 8004a80:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 8004a84:	f7ff fecd 	bl	8004822 <__hexdig_fun>
 8004a88:	9b01      	ldr	r3, [sp, #4]
 8004a8a:	f000 000f 	and.w	r0, r0, #15
 8004a8e:	fa00 f00b 	lsl.w	r0, r0, fp
 8004a92:	4303      	orrs	r3, r0
 8004a94:	9301      	str	r3, [sp, #4]
 8004a96:	f10b 0b04 	add.w	fp, fp, #4
 8004a9a:	9b07      	ldr	r3, [sp, #28]
 8004a9c:	e00d      	b.n	8004aba <__gethex+0x26e>
 8004a9e:	9a08      	ldr	r2, [sp, #32]
 8004aa0:	1e73      	subs	r3, r6, #1
 8004aa2:	4413      	add	r3, r2
 8004aa4:	42bb      	cmp	r3, r7
 8004aa6:	d3e0      	bcc.n	8004a6a <__gethex+0x21e>
 8004aa8:	4618      	mov	r0, r3
 8004aaa:	4652      	mov	r2, sl
 8004aac:	9903      	ldr	r1, [sp, #12]
 8004aae:	9309      	str	r3, [sp, #36]	; 0x24
 8004ab0:	f001 f91e 	bl	8005cf0 <strncmp>
 8004ab4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004ab6:	2800      	cmp	r0, #0
 8004ab8:	d1d7      	bne.n	8004a6a <__gethex+0x21e>
 8004aba:	461e      	mov	r6, r3
 8004abc:	e78c      	b.n	80049d8 <__gethex+0x18c>
 8004abe:	f04f 0a03 	mov.w	sl, #3
 8004ac2:	e7b9      	b.n	8004a38 <__gethex+0x1ec>
 8004ac4:	da09      	bge.n	8004ada <__gethex+0x28e>
 8004ac6:	1bf7      	subs	r7, r6, r7
 8004ac8:	4621      	mov	r1, r4
 8004aca:	463a      	mov	r2, r7
 8004acc:	9802      	ldr	r0, [sp, #8]
 8004ace:	f000 fc4d 	bl	800536c <__lshift>
 8004ad2:	4604      	mov	r4, r0
 8004ad4:	1bed      	subs	r5, r5, r7
 8004ad6:	f100 0914 	add.w	r9, r0, #20
 8004ada:	f04f 0a00 	mov.w	sl, #0
 8004ade:	e7b0      	b.n	8004a42 <__gethex+0x1f6>
 8004ae0:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8004ae4:	42a8      	cmp	r0, r5
 8004ae6:	dd72      	ble.n	8004bce <__gethex+0x382>
 8004ae8:	1b45      	subs	r5, r0, r5
 8004aea:	42ae      	cmp	r6, r5
 8004aec:	dc35      	bgt.n	8004b5a <__gethex+0x30e>
 8004aee:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8004af2:	2b02      	cmp	r3, #2
 8004af4:	d029      	beq.n	8004b4a <__gethex+0x2fe>
 8004af6:	2b03      	cmp	r3, #3
 8004af8:	d02b      	beq.n	8004b52 <__gethex+0x306>
 8004afa:	2b01      	cmp	r3, #1
 8004afc:	d11c      	bne.n	8004b38 <__gethex+0x2ec>
 8004afe:	42ae      	cmp	r6, r5
 8004b00:	d11a      	bne.n	8004b38 <__gethex+0x2ec>
 8004b02:	2e01      	cmp	r6, #1
 8004b04:	d112      	bne.n	8004b2c <__gethex+0x2e0>
 8004b06:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8004b0a:	9a05      	ldr	r2, [sp, #20]
 8004b0c:	2762      	movs	r7, #98	; 0x62
 8004b0e:	6013      	str	r3, [r2, #0]
 8004b10:	2301      	movs	r3, #1
 8004b12:	6123      	str	r3, [r4, #16]
 8004b14:	f8c9 3000 	str.w	r3, [r9]
 8004b18:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004b1a:	601c      	str	r4, [r3, #0]
 8004b1c:	e728      	b.n	8004970 <__gethex+0x124>
 8004b1e:	bf00      	nop
 8004b20:	08006b68 	.word	0x08006b68
 8004b24:	08006af0 	.word	0x08006af0
 8004b28:	08006b01 	.word	0x08006b01
 8004b2c:	4620      	mov	r0, r4
 8004b2e:	1e71      	subs	r1, r6, #1
 8004b30:	f000 fe5b 	bl	80057ea <__any_on>
 8004b34:	2800      	cmp	r0, #0
 8004b36:	d1e6      	bne.n	8004b06 <__gethex+0x2ba>
 8004b38:	4621      	mov	r1, r4
 8004b3a:	9802      	ldr	r0, [sp, #8]
 8004b3c:	f000 f9fe 	bl	8004f3c <_Bfree>
 8004b40:	2300      	movs	r3, #0
 8004b42:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8004b44:	2750      	movs	r7, #80	; 0x50
 8004b46:	6013      	str	r3, [r2, #0]
 8004b48:	e712      	b.n	8004970 <__gethex+0x124>
 8004b4a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004b4c:	2b00      	cmp	r3, #0
 8004b4e:	d1f3      	bne.n	8004b38 <__gethex+0x2ec>
 8004b50:	e7d9      	b.n	8004b06 <__gethex+0x2ba>
 8004b52:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004b54:	2b00      	cmp	r3, #0
 8004b56:	d1d6      	bne.n	8004b06 <__gethex+0x2ba>
 8004b58:	e7ee      	b.n	8004b38 <__gethex+0x2ec>
 8004b5a:	1e6f      	subs	r7, r5, #1
 8004b5c:	f1ba 0f00 	cmp.w	sl, #0
 8004b60:	d132      	bne.n	8004bc8 <__gethex+0x37c>
 8004b62:	b127      	cbz	r7, 8004b6e <__gethex+0x322>
 8004b64:	4639      	mov	r1, r7
 8004b66:	4620      	mov	r0, r4
 8004b68:	f000 fe3f 	bl	80057ea <__any_on>
 8004b6c:	4682      	mov	sl, r0
 8004b6e:	2101      	movs	r1, #1
 8004b70:	117b      	asrs	r3, r7, #5
 8004b72:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8004b76:	f007 071f 	and.w	r7, r7, #31
 8004b7a:	fa01 f707 	lsl.w	r7, r1, r7
 8004b7e:	421f      	tst	r7, r3
 8004b80:	f04f 0702 	mov.w	r7, #2
 8004b84:	4629      	mov	r1, r5
 8004b86:	4620      	mov	r0, r4
 8004b88:	bf18      	it	ne
 8004b8a:	f04a 0a02 	orrne.w	sl, sl, #2
 8004b8e:	1b76      	subs	r6, r6, r5
 8004b90:	f7ff fdf4 	bl	800477c <rshift>
 8004b94:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8004b98:	f1ba 0f00 	cmp.w	sl, #0
 8004b9c:	d048      	beq.n	8004c30 <__gethex+0x3e4>
 8004b9e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8004ba2:	2b02      	cmp	r3, #2
 8004ba4:	d015      	beq.n	8004bd2 <__gethex+0x386>
 8004ba6:	2b03      	cmp	r3, #3
 8004ba8:	d017      	beq.n	8004bda <__gethex+0x38e>
 8004baa:	2b01      	cmp	r3, #1
 8004bac:	d109      	bne.n	8004bc2 <__gethex+0x376>
 8004bae:	f01a 0f02 	tst.w	sl, #2
 8004bb2:	d006      	beq.n	8004bc2 <__gethex+0x376>
 8004bb4:	f8d9 0000 	ldr.w	r0, [r9]
 8004bb8:	ea4a 0a00 	orr.w	sl, sl, r0
 8004bbc:	f01a 0f01 	tst.w	sl, #1
 8004bc0:	d10e      	bne.n	8004be0 <__gethex+0x394>
 8004bc2:	f047 0710 	orr.w	r7, r7, #16
 8004bc6:	e033      	b.n	8004c30 <__gethex+0x3e4>
 8004bc8:	f04f 0a01 	mov.w	sl, #1
 8004bcc:	e7cf      	b.n	8004b6e <__gethex+0x322>
 8004bce:	2701      	movs	r7, #1
 8004bd0:	e7e2      	b.n	8004b98 <__gethex+0x34c>
 8004bd2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004bd4:	f1c3 0301 	rsb	r3, r3, #1
 8004bd8:	9315      	str	r3, [sp, #84]	; 0x54
 8004bda:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004bdc:	2b00      	cmp	r3, #0
 8004bde:	d0f0      	beq.n	8004bc2 <__gethex+0x376>
 8004be0:	f04f 0c00 	mov.w	ip, #0
 8004be4:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8004be8:	f104 0314 	add.w	r3, r4, #20
 8004bec:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8004bf0:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8004bf4:	4618      	mov	r0, r3
 8004bf6:	f853 2b04 	ldr.w	r2, [r3], #4
 8004bfa:	f1b2 3fff 	cmp.w	r2, #4294967295
 8004bfe:	d01c      	beq.n	8004c3a <__gethex+0x3ee>
 8004c00:	3201      	adds	r2, #1
 8004c02:	6002      	str	r2, [r0, #0]
 8004c04:	2f02      	cmp	r7, #2
 8004c06:	f104 0314 	add.w	r3, r4, #20
 8004c0a:	d13d      	bne.n	8004c88 <__gethex+0x43c>
 8004c0c:	f8d8 2000 	ldr.w	r2, [r8]
 8004c10:	3a01      	subs	r2, #1
 8004c12:	42b2      	cmp	r2, r6
 8004c14:	d10a      	bne.n	8004c2c <__gethex+0x3e0>
 8004c16:	2201      	movs	r2, #1
 8004c18:	1171      	asrs	r1, r6, #5
 8004c1a:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8004c1e:	f006 061f 	and.w	r6, r6, #31
 8004c22:	fa02 f606 	lsl.w	r6, r2, r6
 8004c26:	421e      	tst	r6, r3
 8004c28:	bf18      	it	ne
 8004c2a:	4617      	movne	r7, r2
 8004c2c:	f047 0720 	orr.w	r7, r7, #32
 8004c30:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004c32:	601c      	str	r4, [r3, #0]
 8004c34:	9b05      	ldr	r3, [sp, #20]
 8004c36:	601d      	str	r5, [r3, #0]
 8004c38:	e69a      	b.n	8004970 <__gethex+0x124>
 8004c3a:	4299      	cmp	r1, r3
 8004c3c:	f843 cc04 	str.w	ip, [r3, #-4]
 8004c40:	d8d8      	bhi.n	8004bf4 <__gethex+0x3a8>
 8004c42:	68a3      	ldr	r3, [r4, #8]
 8004c44:	459b      	cmp	fp, r3
 8004c46:	db17      	blt.n	8004c78 <__gethex+0x42c>
 8004c48:	6861      	ldr	r1, [r4, #4]
 8004c4a:	9802      	ldr	r0, [sp, #8]
 8004c4c:	3101      	adds	r1, #1
 8004c4e:	f000 f935 	bl	8004ebc <_Balloc>
 8004c52:	4681      	mov	r9, r0
 8004c54:	b918      	cbnz	r0, 8004c5e <__gethex+0x412>
 8004c56:	4602      	mov	r2, r0
 8004c58:	2184      	movs	r1, #132	; 0x84
 8004c5a:	4b19      	ldr	r3, [pc, #100]	; (8004cc0 <__gethex+0x474>)
 8004c5c:	e6ab      	b.n	80049b6 <__gethex+0x16a>
 8004c5e:	6922      	ldr	r2, [r4, #16]
 8004c60:	f104 010c 	add.w	r1, r4, #12
 8004c64:	3202      	adds	r2, #2
 8004c66:	0092      	lsls	r2, r2, #2
 8004c68:	300c      	adds	r0, #12
 8004c6a:	f000 f919 	bl	8004ea0 <memcpy>
 8004c6e:	4621      	mov	r1, r4
 8004c70:	9802      	ldr	r0, [sp, #8]
 8004c72:	f000 f963 	bl	8004f3c <_Bfree>
 8004c76:	464c      	mov	r4, r9
 8004c78:	6923      	ldr	r3, [r4, #16]
 8004c7a:	1c5a      	adds	r2, r3, #1
 8004c7c:	6122      	str	r2, [r4, #16]
 8004c7e:	2201      	movs	r2, #1
 8004c80:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8004c84:	615a      	str	r2, [r3, #20]
 8004c86:	e7bd      	b.n	8004c04 <__gethex+0x3b8>
 8004c88:	6922      	ldr	r2, [r4, #16]
 8004c8a:	455a      	cmp	r2, fp
 8004c8c:	dd0b      	ble.n	8004ca6 <__gethex+0x45a>
 8004c8e:	2101      	movs	r1, #1
 8004c90:	4620      	mov	r0, r4
 8004c92:	f7ff fd73 	bl	800477c <rshift>
 8004c96:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8004c9a:	3501      	adds	r5, #1
 8004c9c:	42ab      	cmp	r3, r5
 8004c9e:	f6ff aed4 	blt.w	8004a4a <__gethex+0x1fe>
 8004ca2:	2701      	movs	r7, #1
 8004ca4:	e7c2      	b.n	8004c2c <__gethex+0x3e0>
 8004ca6:	f016 061f 	ands.w	r6, r6, #31
 8004caa:	d0fa      	beq.n	8004ca2 <__gethex+0x456>
 8004cac:	4453      	add	r3, sl
 8004cae:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8004cb2:	f000 f9f5 	bl	80050a0 <__hi0bits>
 8004cb6:	f1c6 0620 	rsb	r6, r6, #32
 8004cba:	42b0      	cmp	r0, r6
 8004cbc:	dbe7      	blt.n	8004c8e <__gethex+0x442>
 8004cbe:	e7f0      	b.n	8004ca2 <__gethex+0x456>
 8004cc0:	08006af0 	.word	0x08006af0

08004cc4 <L_shift>:
 8004cc4:	f1c2 0208 	rsb	r2, r2, #8
 8004cc8:	0092      	lsls	r2, r2, #2
 8004cca:	b570      	push	{r4, r5, r6, lr}
 8004ccc:	f1c2 0620 	rsb	r6, r2, #32
 8004cd0:	6843      	ldr	r3, [r0, #4]
 8004cd2:	6804      	ldr	r4, [r0, #0]
 8004cd4:	fa03 f506 	lsl.w	r5, r3, r6
 8004cd8:	432c      	orrs	r4, r5
 8004cda:	40d3      	lsrs	r3, r2
 8004cdc:	6004      	str	r4, [r0, #0]
 8004cde:	f840 3f04 	str.w	r3, [r0, #4]!
 8004ce2:	4288      	cmp	r0, r1
 8004ce4:	d3f4      	bcc.n	8004cd0 <L_shift+0xc>
 8004ce6:	bd70      	pop	{r4, r5, r6, pc}

08004ce8 <__match>:
 8004ce8:	b530      	push	{r4, r5, lr}
 8004cea:	6803      	ldr	r3, [r0, #0]
 8004cec:	3301      	adds	r3, #1
 8004cee:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004cf2:	b914      	cbnz	r4, 8004cfa <__match+0x12>
 8004cf4:	6003      	str	r3, [r0, #0]
 8004cf6:	2001      	movs	r0, #1
 8004cf8:	bd30      	pop	{r4, r5, pc}
 8004cfa:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004cfe:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8004d02:	2d19      	cmp	r5, #25
 8004d04:	bf98      	it	ls
 8004d06:	3220      	addls	r2, #32
 8004d08:	42a2      	cmp	r2, r4
 8004d0a:	d0f0      	beq.n	8004cee <__match+0x6>
 8004d0c:	2000      	movs	r0, #0
 8004d0e:	e7f3      	b.n	8004cf8 <__match+0x10>

08004d10 <__hexnan>:
 8004d10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004d14:	2500      	movs	r5, #0
 8004d16:	680b      	ldr	r3, [r1, #0]
 8004d18:	4682      	mov	sl, r0
 8004d1a:	115e      	asrs	r6, r3, #5
 8004d1c:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8004d20:	f013 031f 	ands.w	r3, r3, #31
 8004d24:	bf18      	it	ne
 8004d26:	3604      	addne	r6, #4
 8004d28:	1f37      	subs	r7, r6, #4
 8004d2a:	46b9      	mov	r9, r7
 8004d2c:	463c      	mov	r4, r7
 8004d2e:	46ab      	mov	fp, r5
 8004d30:	b087      	sub	sp, #28
 8004d32:	4690      	mov	r8, r2
 8004d34:	6802      	ldr	r2, [r0, #0]
 8004d36:	9301      	str	r3, [sp, #4]
 8004d38:	f846 5c04 	str.w	r5, [r6, #-4]
 8004d3c:	9502      	str	r5, [sp, #8]
 8004d3e:	7851      	ldrb	r1, [r2, #1]
 8004d40:	1c53      	adds	r3, r2, #1
 8004d42:	9303      	str	r3, [sp, #12]
 8004d44:	b341      	cbz	r1, 8004d98 <__hexnan+0x88>
 8004d46:	4608      	mov	r0, r1
 8004d48:	9205      	str	r2, [sp, #20]
 8004d4a:	9104      	str	r1, [sp, #16]
 8004d4c:	f7ff fd69 	bl	8004822 <__hexdig_fun>
 8004d50:	2800      	cmp	r0, #0
 8004d52:	d14f      	bne.n	8004df4 <__hexnan+0xe4>
 8004d54:	9904      	ldr	r1, [sp, #16]
 8004d56:	9a05      	ldr	r2, [sp, #20]
 8004d58:	2920      	cmp	r1, #32
 8004d5a:	d818      	bhi.n	8004d8e <__hexnan+0x7e>
 8004d5c:	9b02      	ldr	r3, [sp, #8]
 8004d5e:	459b      	cmp	fp, r3
 8004d60:	dd13      	ble.n	8004d8a <__hexnan+0x7a>
 8004d62:	454c      	cmp	r4, r9
 8004d64:	d206      	bcs.n	8004d74 <__hexnan+0x64>
 8004d66:	2d07      	cmp	r5, #7
 8004d68:	dc04      	bgt.n	8004d74 <__hexnan+0x64>
 8004d6a:	462a      	mov	r2, r5
 8004d6c:	4649      	mov	r1, r9
 8004d6e:	4620      	mov	r0, r4
 8004d70:	f7ff ffa8 	bl	8004cc4 <L_shift>
 8004d74:	4544      	cmp	r4, r8
 8004d76:	d950      	bls.n	8004e1a <__hexnan+0x10a>
 8004d78:	2300      	movs	r3, #0
 8004d7a:	f1a4 0904 	sub.w	r9, r4, #4
 8004d7e:	f844 3c04 	str.w	r3, [r4, #-4]
 8004d82:	461d      	mov	r5, r3
 8004d84:	464c      	mov	r4, r9
 8004d86:	f8cd b008 	str.w	fp, [sp, #8]
 8004d8a:	9a03      	ldr	r2, [sp, #12]
 8004d8c:	e7d7      	b.n	8004d3e <__hexnan+0x2e>
 8004d8e:	2929      	cmp	r1, #41	; 0x29
 8004d90:	d156      	bne.n	8004e40 <__hexnan+0x130>
 8004d92:	3202      	adds	r2, #2
 8004d94:	f8ca 2000 	str.w	r2, [sl]
 8004d98:	f1bb 0f00 	cmp.w	fp, #0
 8004d9c:	d050      	beq.n	8004e40 <__hexnan+0x130>
 8004d9e:	454c      	cmp	r4, r9
 8004da0:	d206      	bcs.n	8004db0 <__hexnan+0xa0>
 8004da2:	2d07      	cmp	r5, #7
 8004da4:	dc04      	bgt.n	8004db0 <__hexnan+0xa0>
 8004da6:	462a      	mov	r2, r5
 8004da8:	4649      	mov	r1, r9
 8004daa:	4620      	mov	r0, r4
 8004dac:	f7ff ff8a 	bl	8004cc4 <L_shift>
 8004db0:	4544      	cmp	r4, r8
 8004db2:	d934      	bls.n	8004e1e <__hexnan+0x10e>
 8004db4:	4623      	mov	r3, r4
 8004db6:	f1a8 0204 	sub.w	r2, r8, #4
 8004dba:	f853 1b04 	ldr.w	r1, [r3], #4
 8004dbe:	429f      	cmp	r7, r3
 8004dc0:	f842 1f04 	str.w	r1, [r2, #4]!
 8004dc4:	d2f9      	bcs.n	8004dba <__hexnan+0xaa>
 8004dc6:	1b3b      	subs	r3, r7, r4
 8004dc8:	f023 0303 	bic.w	r3, r3, #3
 8004dcc:	3304      	adds	r3, #4
 8004dce:	3401      	adds	r4, #1
 8004dd0:	3e03      	subs	r6, #3
 8004dd2:	42b4      	cmp	r4, r6
 8004dd4:	bf88      	it	hi
 8004dd6:	2304      	movhi	r3, #4
 8004dd8:	2200      	movs	r2, #0
 8004dda:	4443      	add	r3, r8
 8004ddc:	f843 2b04 	str.w	r2, [r3], #4
 8004de0:	429f      	cmp	r7, r3
 8004de2:	d2fb      	bcs.n	8004ddc <__hexnan+0xcc>
 8004de4:	683b      	ldr	r3, [r7, #0]
 8004de6:	b91b      	cbnz	r3, 8004df0 <__hexnan+0xe0>
 8004de8:	4547      	cmp	r7, r8
 8004dea:	d127      	bne.n	8004e3c <__hexnan+0x12c>
 8004dec:	2301      	movs	r3, #1
 8004dee:	603b      	str	r3, [r7, #0]
 8004df0:	2005      	movs	r0, #5
 8004df2:	e026      	b.n	8004e42 <__hexnan+0x132>
 8004df4:	3501      	adds	r5, #1
 8004df6:	2d08      	cmp	r5, #8
 8004df8:	f10b 0b01 	add.w	fp, fp, #1
 8004dfc:	dd06      	ble.n	8004e0c <__hexnan+0xfc>
 8004dfe:	4544      	cmp	r4, r8
 8004e00:	d9c3      	bls.n	8004d8a <__hexnan+0x7a>
 8004e02:	2300      	movs	r3, #0
 8004e04:	2501      	movs	r5, #1
 8004e06:	f844 3c04 	str.w	r3, [r4, #-4]
 8004e0a:	3c04      	subs	r4, #4
 8004e0c:	6822      	ldr	r2, [r4, #0]
 8004e0e:	f000 000f 	and.w	r0, r0, #15
 8004e12:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 8004e16:	6022      	str	r2, [r4, #0]
 8004e18:	e7b7      	b.n	8004d8a <__hexnan+0x7a>
 8004e1a:	2508      	movs	r5, #8
 8004e1c:	e7b5      	b.n	8004d8a <__hexnan+0x7a>
 8004e1e:	9b01      	ldr	r3, [sp, #4]
 8004e20:	2b00      	cmp	r3, #0
 8004e22:	d0df      	beq.n	8004de4 <__hexnan+0xd4>
 8004e24:	f04f 32ff 	mov.w	r2, #4294967295
 8004e28:	f1c3 0320 	rsb	r3, r3, #32
 8004e2c:	fa22 f303 	lsr.w	r3, r2, r3
 8004e30:	f856 2c04 	ldr.w	r2, [r6, #-4]
 8004e34:	401a      	ands	r2, r3
 8004e36:	f846 2c04 	str.w	r2, [r6, #-4]
 8004e3a:	e7d3      	b.n	8004de4 <__hexnan+0xd4>
 8004e3c:	3f04      	subs	r7, #4
 8004e3e:	e7d1      	b.n	8004de4 <__hexnan+0xd4>
 8004e40:	2004      	movs	r0, #4
 8004e42:	b007      	add	sp, #28
 8004e44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004e48 <_localeconv_r>:
 8004e48:	4800      	ldr	r0, [pc, #0]	; (8004e4c <_localeconv_r+0x4>)
 8004e4a:	4770      	bx	lr
 8004e4c:	20000164 	.word	0x20000164

08004e50 <malloc>:
 8004e50:	4b02      	ldr	r3, [pc, #8]	; (8004e5c <malloc+0xc>)
 8004e52:	4601      	mov	r1, r0
 8004e54:	6818      	ldr	r0, [r3, #0]
 8004e56:	f000 bd65 	b.w	8005924 <_malloc_r>
 8004e5a:	bf00      	nop
 8004e5c:	2000000c 	.word	0x2000000c

08004e60 <__ascii_mbtowc>:
 8004e60:	b082      	sub	sp, #8
 8004e62:	b901      	cbnz	r1, 8004e66 <__ascii_mbtowc+0x6>
 8004e64:	a901      	add	r1, sp, #4
 8004e66:	b142      	cbz	r2, 8004e7a <__ascii_mbtowc+0x1a>
 8004e68:	b14b      	cbz	r3, 8004e7e <__ascii_mbtowc+0x1e>
 8004e6a:	7813      	ldrb	r3, [r2, #0]
 8004e6c:	600b      	str	r3, [r1, #0]
 8004e6e:	7812      	ldrb	r2, [r2, #0]
 8004e70:	1e10      	subs	r0, r2, #0
 8004e72:	bf18      	it	ne
 8004e74:	2001      	movne	r0, #1
 8004e76:	b002      	add	sp, #8
 8004e78:	4770      	bx	lr
 8004e7a:	4610      	mov	r0, r2
 8004e7c:	e7fb      	b.n	8004e76 <__ascii_mbtowc+0x16>
 8004e7e:	f06f 0001 	mvn.w	r0, #1
 8004e82:	e7f8      	b.n	8004e76 <__ascii_mbtowc+0x16>

08004e84 <memchr>:
 8004e84:	4603      	mov	r3, r0
 8004e86:	b510      	push	{r4, lr}
 8004e88:	b2c9      	uxtb	r1, r1
 8004e8a:	4402      	add	r2, r0
 8004e8c:	4293      	cmp	r3, r2
 8004e8e:	4618      	mov	r0, r3
 8004e90:	d101      	bne.n	8004e96 <memchr+0x12>
 8004e92:	2000      	movs	r0, #0
 8004e94:	e003      	b.n	8004e9e <memchr+0x1a>
 8004e96:	7804      	ldrb	r4, [r0, #0]
 8004e98:	3301      	adds	r3, #1
 8004e9a:	428c      	cmp	r4, r1
 8004e9c:	d1f6      	bne.n	8004e8c <memchr+0x8>
 8004e9e:	bd10      	pop	{r4, pc}

08004ea0 <memcpy>:
 8004ea0:	440a      	add	r2, r1
 8004ea2:	4291      	cmp	r1, r2
 8004ea4:	f100 33ff 	add.w	r3, r0, #4294967295
 8004ea8:	d100      	bne.n	8004eac <memcpy+0xc>
 8004eaa:	4770      	bx	lr
 8004eac:	b510      	push	{r4, lr}
 8004eae:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004eb2:	4291      	cmp	r1, r2
 8004eb4:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004eb8:	d1f9      	bne.n	8004eae <memcpy+0xe>
 8004eba:	bd10      	pop	{r4, pc}

08004ebc <_Balloc>:
 8004ebc:	b570      	push	{r4, r5, r6, lr}
 8004ebe:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8004ec0:	4604      	mov	r4, r0
 8004ec2:	460d      	mov	r5, r1
 8004ec4:	b976      	cbnz	r6, 8004ee4 <_Balloc+0x28>
 8004ec6:	2010      	movs	r0, #16
 8004ec8:	f7ff ffc2 	bl	8004e50 <malloc>
 8004ecc:	4602      	mov	r2, r0
 8004ece:	6260      	str	r0, [r4, #36]	; 0x24
 8004ed0:	b920      	cbnz	r0, 8004edc <_Balloc+0x20>
 8004ed2:	2166      	movs	r1, #102	; 0x66
 8004ed4:	4b17      	ldr	r3, [pc, #92]	; (8004f34 <_Balloc+0x78>)
 8004ed6:	4818      	ldr	r0, [pc, #96]	; (8004f38 <_Balloc+0x7c>)
 8004ed8:	f000 ff2c 	bl	8005d34 <__assert_func>
 8004edc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004ee0:	6006      	str	r6, [r0, #0]
 8004ee2:	60c6      	str	r6, [r0, #12]
 8004ee4:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8004ee6:	68f3      	ldr	r3, [r6, #12]
 8004ee8:	b183      	cbz	r3, 8004f0c <_Balloc+0x50>
 8004eea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004eec:	68db      	ldr	r3, [r3, #12]
 8004eee:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8004ef2:	b9b8      	cbnz	r0, 8004f24 <_Balloc+0x68>
 8004ef4:	2101      	movs	r1, #1
 8004ef6:	fa01 f605 	lsl.w	r6, r1, r5
 8004efa:	1d72      	adds	r2, r6, #5
 8004efc:	4620      	mov	r0, r4
 8004efe:	0092      	lsls	r2, r2, #2
 8004f00:	f000 fc94 	bl	800582c <_calloc_r>
 8004f04:	b160      	cbz	r0, 8004f20 <_Balloc+0x64>
 8004f06:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8004f0a:	e00e      	b.n	8004f2a <_Balloc+0x6e>
 8004f0c:	2221      	movs	r2, #33	; 0x21
 8004f0e:	2104      	movs	r1, #4
 8004f10:	4620      	mov	r0, r4
 8004f12:	f000 fc8b 	bl	800582c <_calloc_r>
 8004f16:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004f18:	60f0      	str	r0, [r6, #12]
 8004f1a:	68db      	ldr	r3, [r3, #12]
 8004f1c:	2b00      	cmp	r3, #0
 8004f1e:	d1e4      	bne.n	8004eea <_Balloc+0x2e>
 8004f20:	2000      	movs	r0, #0
 8004f22:	bd70      	pop	{r4, r5, r6, pc}
 8004f24:	6802      	ldr	r2, [r0, #0]
 8004f26:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8004f2a:	2300      	movs	r3, #0
 8004f2c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8004f30:	e7f7      	b.n	8004f22 <_Balloc+0x66>
 8004f32:	bf00      	nop
 8004f34:	08006a7e 	.word	0x08006a7e
 8004f38:	08006b7c 	.word	0x08006b7c

08004f3c <_Bfree>:
 8004f3c:	b570      	push	{r4, r5, r6, lr}
 8004f3e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8004f40:	4605      	mov	r5, r0
 8004f42:	460c      	mov	r4, r1
 8004f44:	b976      	cbnz	r6, 8004f64 <_Bfree+0x28>
 8004f46:	2010      	movs	r0, #16
 8004f48:	f7ff ff82 	bl	8004e50 <malloc>
 8004f4c:	4602      	mov	r2, r0
 8004f4e:	6268      	str	r0, [r5, #36]	; 0x24
 8004f50:	b920      	cbnz	r0, 8004f5c <_Bfree+0x20>
 8004f52:	218a      	movs	r1, #138	; 0x8a
 8004f54:	4b08      	ldr	r3, [pc, #32]	; (8004f78 <_Bfree+0x3c>)
 8004f56:	4809      	ldr	r0, [pc, #36]	; (8004f7c <_Bfree+0x40>)
 8004f58:	f000 feec 	bl	8005d34 <__assert_func>
 8004f5c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004f60:	6006      	str	r6, [r0, #0]
 8004f62:	60c6      	str	r6, [r0, #12]
 8004f64:	b13c      	cbz	r4, 8004f76 <_Bfree+0x3a>
 8004f66:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004f68:	6862      	ldr	r2, [r4, #4]
 8004f6a:	68db      	ldr	r3, [r3, #12]
 8004f6c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004f70:	6021      	str	r1, [r4, #0]
 8004f72:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8004f76:	bd70      	pop	{r4, r5, r6, pc}
 8004f78:	08006a7e 	.word	0x08006a7e
 8004f7c:	08006b7c 	.word	0x08006b7c

08004f80 <__multadd>:
 8004f80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004f84:	4607      	mov	r7, r0
 8004f86:	460c      	mov	r4, r1
 8004f88:	461e      	mov	r6, r3
 8004f8a:	2000      	movs	r0, #0
 8004f8c:	690d      	ldr	r5, [r1, #16]
 8004f8e:	f101 0c14 	add.w	ip, r1, #20
 8004f92:	f8dc 3000 	ldr.w	r3, [ip]
 8004f96:	3001      	adds	r0, #1
 8004f98:	b299      	uxth	r1, r3
 8004f9a:	fb02 6101 	mla	r1, r2, r1, r6
 8004f9e:	0c1e      	lsrs	r6, r3, #16
 8004fa0:	0c0b      	lsrs	r3, r1, #16
 8004fa2:	fb02 3306 	mla	r3, r2, r6, r3
 8004fa6:	b289      	uxth	r1, r1
 8004fa8:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8004fac:	4285      	cmp	r5, r0
 8004fae:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8004fb2:	f84c 1b04 	str.w	r1, [ip], #4
 8004fb6:	dcec      	bgt.n	8004f92 <__multadd+0x12>
 8004fb8:	b30e      	cbz	r6, 8004ffe <__multadd+0x7e>
 8004fba:	68a3      	ldr	r3, [r4, #8]
 8004fbc:	42ab      	cmp	r3, r5
 8004fbe:	dc19      	bgt.n	8004ff4 <__multadd+0x74>
 8004fc0:	6861      	ldr	r1, [r4, #4]
 8004fc2:	4638      	mov	r0, r7
 8004fc4:	3101      	adds	r1, #1
 8004fc6:	f7ff ff79 	bl	8004ebc <_Balloc>
 8004fca:	4680      	mov	r8, r0
 8004fcc:	b928      	cbnz	r0, 8004fda <__multadd+0x5a>
 8004fce:	4602      	mov	r2, r0
 8004fd0:	21b5      	movs	r1, #181	; 0xb5
 8004fd2:	4b0c      	ldr	r3, [pc, #48]	; (8005004 <__multadd+0x84>)
 8004fd4:	480c      	ldr	r0, [pc, #48]	; (8005008 <__multadd+0x88>)
 8004fd6:	f000 fead 	bl	8005d34 <__assert_func>
 8004fda:	6922      	ldr	r2, [r4, #16]
 8004fdc:	f104 010c 	add.w	r1, r4, #12
 8004fe0:	3202      	adds	r2, #2
 8004fe2:	0092      	lsls	r2, r2, #2
 8004fe4:	300c      	adds	r0, #12
 8004fe6:	f7ff ff5b 	bl	8004ea0 <memcpy>
 8004fea:	4621      	mov	r1, r4
 8004fec:	4638      	mov	r0, r7
 8004fee:	f7ff ffa5 	bl	8004f3c <_Bfree>
 8004ff2:	4644      	mov	r4, r8
 8004ff4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8004ff8:	3501      	adds	r5, #1
 8004ffa:	615e      	str	r6, [r3, #20]
 8004ffc:	6125      	str	r5, [r4, #16]
 8004ffe:	4620      	mov	r0, r4
 8005000:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005004:	08006af0 	.word	0x08006af0
 8005008:	08006b7c 	.word	0x08006b7c

0800500c <__s2b>:
 800500c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005010:	4615      	mov	r5, r2
 8005012:	2209      	movs	r2, #9
 8005014:	461f      	mov	r7, r3
 8005016:	3308      	adds	r3, #8
 8005018:	460c      	mov	r4, r1
 800501a:	fb93 f3f2 	sdiv	r3, r3, r2
 800501e:	4606      	mov	r6, r0
 8005020:	2201      	movs	r2, #1
 8005022:	2100      	movs	r1, #0
 8005024:	429a      	cmp	r2, r3
 8005026:	db09      	blt.n	800503c <__s2b+0x30>
 8005028:	4630      	mov	r0, r6
 800502a:	f7ff ff47 	bl	8004ebc <_Balloc>
 800502e:	b940      	cbnz	r0, 8005042 <__s2b+0x36>
 8005030:	4602      	mov	r2, r0
 8005032:	21ce      	movs	r1, #206	; 0xce
 8005034:	4b18      	ldr	r3, [pc, #96]	; (8005098 <__s2b+0x8c>)
 8005036:	4819      	ldr	r0, [pc, #100]	; (800509c <__s2b+0x90>)
 8005038:	f000 fe7c 	bl	8005d34 <__assert_func>
 800503c:	0052      	lsls	r2, r2, #1
 800503e:	3101      	adds	r1, #1
 8005040:	e7f0      	b.n	8005024 <__s2b+0x18>
 8005042:	9b08      	ldr	r3, [sp, #32]
 8005044:	2d09      	cmp	r5, #9
 8005046:	6143      	str	r3, [r0, #20]
 8005048:	f04f 0301 	mov.w	r3, #1
 800504c:	6103      	str	r3, [r0, #16]
 800504e:	dd16      	ble.n	800507e <__s2b+0x72>
 8005050:	f104 0909 	add.w	r9, r4, #9
 8005054:	46c8      	mov	r8, r9
 8005056:	442c      	add	r4, r5
 8005058:	f818 3b01 	ldrb.w	r3, [r8], #1
 800505c:	4601      	mov	r1, r0
 800505e:	220a      	movs	r2, #10
 8005060:	4630      	mov	r0, r6
 8005062:	3b30      	subs	r3, #48	; 0x30
 8005064:	f7ff ff8c 	bl	8004f80 <__multadd>
 8005068:	45a0      	cmp	r8, r4
 800506a:	d1f5      	bne.n	8005058 <__s2b+0x4c>
 800506c:	f1a5 0408 	sub.w	r4, r5, #8
 8005070:	444c      	add	r4, r9
 8005072:	1b2d      	subs	r5, r5, r4
 8005074:	1963      	adds	r3, r4, r5
 8005076:	42bb      	cmp	r3, r7
 8005078:	db04      	blt.n	8005084 <__s2b+0x78>
 800507a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800507e:	2509      	movs	r5, #9
 8005080:	340a      	adds	r4, #10
 8005082:	e7f6      	b.n	8005072 <__s2b+0x66>
 8005084:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005088:	4601      	mov	r1, r0
 800508a:	220a      	movs	r2, #10
 800508c:	4630      	mov	r0, r6
 800508e:	3b30      	subs	r3, #48	; 0x30
 8005090:	f7ff ff76 	bl	8004f80 <__multadd>
 8005094:	e7ee      	b.n	8005074 <__s2b+0x68>
 8005096:	bf00      	nop
 8005098:	08006af0 	.word	0x08006af0
 800509c:	08006b7c 	.word	0x08006b7c

080050a0 <__hi0bits>:
 80050a0:	0c02      	lsrs	r2, r0, #16
 80050a2:	0412      	lsls	r2, r2, #16
 80050a4:	4603      	mov	r3, r0
 80050a6:	b9ca      	cbnz	r2, 80050dc <__hi0bits+0x3c>
 80050a8:	0403      	lsls	r3, r0, #16
 80050aa:	2010      	movs	r0, #16
 80050ac:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80050b0:	bf04      	itt	eq
 80050b2:	021b      	lsleq	r3, r3, #8
 80050b4:	3008      	addeq	r0, #8
 80050b6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80050ba:	bf04      	itt	eq
 80050bc:	011b      	lsleq	r3, r3, #4
 80050be:	3004      	addeq	r0, #4
 80050c0:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80050c4:	bf04      	itt	eq
 80050c6:	009b      	lsleq	r3, r3, #2
 80050c8:	3002      	addeq	r0, #2
 80050ca:	2b00      	cmp	r3, #0
 80050cc:	db05      	blt.n	80050da <__hi0bits+0x3a>
 80050ce:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 80050d2:	f100 0001 	add.w	r0, r0, #1
 80050d6:	bf08      	it	eq
 80050d8:	2020      	moveq	r0, #32
 80050da:	4770      	bx	lr
 80050dc:	2000      	movs	r0, #0
 80050de:	e7e5      	b.n	80050ac <__hi0bits+0xc>

080050e0 <__lo0bits>:
 80050e0:	6803      	ldr	r3, [r0, #0]
 80050e2:	4602      	mov	r2, r0
 80050e4:	f013 0007 	ands.w	r0, r3, #7
 80050e8:	d00b      	beq.n	8005102 <__lo0bits+0x22>
 80050ea:	07d9      	lsls	r1, r3, #31
 80050ec:	d421      	bmi.n	8005132 <__lo0bits+0x52>
 80050ee:	0798      	lsls	r0, r3, #30
 80050f0:	bf49      	itett	mi
 80050f2:	085b      	lsrmi	r3, r3, #1
 80050f4:	089b      	lsrpl	r3, r3, #2
 80050f6:	2001      	movmi	r0, #1
 80050f8:	6013      	strmi	r3, [r2, #0]
 80050fa:	bf5c      	itt	pl
 80050fc:	2002      	movpl	r0, #2
 80050fe:	6013      	strpl	r3, [r2, #0]
 8005100:	4770      	bx	lr
 8005102:	b299      	uxth	r1, r3
 8005104:	b909      	cbnz	r1, 800510a <__lo0bits+0x2a>
 8005106:	2010      	movs	r0, #16
 8005108:	0c1b      	lsrs	r3, r3, #16
 800510a:	b2d9      	uxtb	r1, r3
 800510c:	b909      	cbnz	r1, 8005112 <__lo0bits+0x32>
 800510e:	3008      	adds	r0, #8
 8005110:	0a1b      	lsrs	r3, r3, #8
 8005112:	0719      	lsls	r1, r3, #28
 8005114:	bf04      	itt	eq
 8005116:	091b      	lsreq	r3, r3, #4
 8005118:	3004      	addeq	r0, #4
 800511a:	0799      	lsls	r1, r3, #30
 800511c:	bf04      	itt	eq
 800511e:	089b      	lsreq	r3, r3, #2
 8005120:	3002      	addeq	r0, #2
 8005122:	07d9      	lsls	r1, r3, #31
 8005124:	d403      	bmi.n	800512e <__lo0bits+0x4e>
 8005126:	085b      	lsrs	r3, r3, #1
 8005128:	f100 0001 	add.w	r0, r0, #1
 800512c:	d003      	beq.n	8005136 <__lo0bits+0x56>
 800512e:	6013      	str	r3, [r2, #0]
 8005130:	4770      	bx	lr
 8005132:	2000      	movs	r0, #0
 8005134:	4770      	bx	lr
 8005136:	2020      	movs	r0, #32
 8005138:	4770      	bx	lr
	...

0800513c <__i2b>:
 800513c:	b510      	push	{r4, lr}
 800513e:	460c      	mov	r4, r1
 8005140:	2101      	movs	r1, #1
 8005142:	f7ff febb 	bl	8004ebc <_Balloc>
 8005146:	4602      	mov	r2, r0
 8005148:	b928      	cbnz	r0, 8005156 <__i2b+0x1a>
 800514a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800514e:	4b04      	ldr	r3, [pc, #16]	; (8005160 <__i2b+0x24>)
 8005150:	4804      	ldr	r0, [pc, #16]	; (8005164 <__i2b+0x28>)
 8005152:	f000 fdef 	bl	8005d34 <__assert_func>
 8005156:	2301      	movs	r3, #1
 8005158:	6144      	str	r4, [r0, #20]
 800515a:	6103      	str	r3, [r0, #16]
 800515c:	bd10      	pop	{r4, pc}
 800515e:	bf00      	nop
 8005160:	08006af0 	.word	0x08006af0
 8005164:	08006b7c 	.word	0x08006b7c

08005168 <__multiply>:
 8005168:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800516c:	4691      	mov	r9, r2
 800516e:	690a      	ldr	r2, [r1, #16]
 8005170:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8005174:	460c      	mov	r4, r1
 8005176:	429a      	cmp	r2, r3
 8005178:	bfbe      	ittt	lt
 800517a:	460b      	movlt	r3, r1
 800517c:	464c      	movlt	r4, r9
 800517e:	4699      	movlt	r9, r3
 8005180:	6927      	ldr	r7, [r4, #16]
 8005182:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8005186:	68a3      	ldr	r3, [r4, #8]
 8005188:	6861      	ldr	r1, [r4, #4]
 800518a:	eb07 060a 	add.w	r6, r7, sl
 800518e:	42b3      	cmp	r3, r6
 8005190:	b085      	sub	sp, #20
 8005192:	bfb8      	it	lt
 8005194:	3101      	addlt	r1, #1
 8005196:	f7ff fe91 	bl	8004ebc <_Balloc>
 800519a:	b930      	cbnz	r0, 80051aa <__multiply+0x42>
 800519c:	4602      	mov	r2, r0
 800519e:	f240 115d 	movw	r1, #349	; 0x15d
 80051a2:	4b43      	ldr	r3, [pc, #268]	; (80052b0 <__multiply+0x148>)
 80051a4:	4843      	ldr	r0, [pc, #268]	; (80052b4 <__multiply+0x14c>)
 80051a6:	f000 fdc5 	bl	8005d34 <__assert_func>
 80051aa:	f100 0514 	add.w	r5, r0, #20
 80051ae:	462b      	mov	r3, r5
 80051b0:	2200      	movs	r2, #0
 80051b2:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80051b6:	4543      	cmp	r3, r8
 80051b8:	d321      	bcc.n	80051fe <__multiply+0x96>
 80051ba:	f104 0314 	add.w	r3, r4, #20
 80051be:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80051c2:	f109 0314 	add.w	r3, r9, #20
 80051c6:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 80051ca:	9202      	str	r2, [sp, #8]
 80051cc:	1b3a      	subs	r2, r7, r4
 80051ce:	3a15      	subs	r2, #21
 80051d0:	f022 0203 	bic.w	r2, r2, #3
 80051d4:	3204      	adds	r2, #4
 80051d6:	f104 0115 	add.w	r1, r4, #21
 80051da:	428f      	cmp	r7, r1
 80051dc:	bf38      	it	cc
 80051de:	2204      	movcc	r2, #4
 80051e0:	9201      	str	r2, [sp, #4]
 80051e2:	9a02      	ldr	r2, [sp, #8]
 80051e4:	9303      	str	r3, [sp, #12]
 80051e6:	429a      	cmp	r2, r3
 80051e8:	d80c      	bhi.n	8005204 <__multiply+0x9c>
 80051ea:	2e00      	cmp	r6, #0
 80051ec:	dd03      	ble.n	80051f6 <__multiply+0x8e>
 80051ee:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80051f2:	2b00      	cmp	r3, #0
 80051f4:	d059      	beq.n	80052aa <__multiply+0x142>
 80051f6:	6106      	str	r6, [r0, #16]
 80051f8:	b005      	add	sp, #20
 80051fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80051fe:	f843 2b04 	str.w	r2, [r3], #4
 8005202:	e7d8      	b.n	80051b6 <__multiply+0x4e>
 8005204:	f8b3 a000 	ldrh.w	sl, [r3]
 8005208:	f1ba 0f00 	cmp.w	sl, #0
 800520c:	d023      	beq.n	8005256 <__multiply+0xee>
 800520e:	46a9      	mov	r9, r5
 8005210:	f04f 0c00 	mov.w	ip, #0
 8005214:	f104 0e14 	add.w	lr, r4, #20
 8005218:	f85e 2b04 	ldr.w	r2, [lr], #4
 800521c:	f8d9 1000 	ldr.w	r1, [r9]
 8005220:	fa1f fb82 	uxth.w	fp, r2
 8005224:	b289      	uxth	r1, r1
 8005226:	fb0a 110b 	mla	r1, sl, fp, r1
 800522a:	4461      	add	r1, ip
 800522c:	f8d9 c000 	ldr.w	ip, [r9]
 8005230:	0c12      	lsrs	r2, r2, #16
 8005232:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8005236:	fb0a c202 	mla	r2, sl, r2, ip
 800523a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800523e:	b289      	uxth	r1, r1
 8005240:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005244:	4577      	cmp	r7, lr
 8005246:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800524a:	f849 1b04 	str.w	r1, [r9], #4
 800524e:	d8e3      	bhi.n	8005218 <__multiply+0xb0>
 8005250:	9a01      	ldr	r2, [sp, #4]
 8005252:	f845 c002 	str.w	ip, [r5, r2]
 8005256:	9a03      	ldr	r2, [sp, #12]
 8005258:	3304      	adds	r3, #4
 800525a:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800525e:	f1b9 0f00 	cmp.w	r9, #0
 8005262:	d020      	beq.n	80052a6 <__multiply+0x13e>
 8005264:	46ae      	mov	lr, r5
 8005266:	f04f 0a00 	mov.w	sl, #0
 800526a:	6829      	ldr	r1, [r5, #0]
 800526c:	f104 0c14 	add.w	ip, r4, #20
 8005270:	f8bc b000 	ldrh.w	fp, [ip]
 8005274:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8005278:	b289      	uxth	r1, r1
 800527a:	fb09 220b 	mla	r2, r9, fp, r2
 800527e:	4492      	add	sl, r2
 8005280:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8005284:	f84e 1b04 	str.w	r1, [lr], #4
 8005288:	f85c 2b04 	ldr.w	r2, [ip], #4
 800528c:	f8be 1000 	ldrh.w	r1, [lr]
 8005290:	0c12      	lsrs	r2, r2, #16
 8005292:	fb09 1102 	mla	r1, r9, r2, r1
 8005296:	4567      	cmp	r7, ip
 8005298:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800529c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80052a0:	d8e6      	bhi.n	8005270 <__multiply+0x108>
 80052a2:	9a01      	ldr	r2, [sp, #4]
 80052a4:	50a9      	str	r1, [r5, r2]
 80052a6:	3504      	adds	r5, #4
 80052a8:	e79b      	b.n	80051e2 <__multiply+0x7a>
 80052aa:	3e01      	subs	r6, #1
 80052ac:	e79d      	b.n	80051ea <__multiply+0x82>
 80052ae:	bf00      	nop
 80052b0:	08006af0 	.word	0x08006af0
 80052b4:	08006b7c 	.word	0x08006b7c

080052b8 <__pow5mult>:
 80052b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80052bc:	4615      	mov	r5, r2
 80052be:	f012 0203 	ands.w	r2, r2, #3
 80052c2:	4606      	mov	r6, r0
 80052c4:	460f      	mov	r7, r1
 80052c6:	d007      	beq.n	80052d8 <__pow5mult+0x20>
 80052c8:	4c25      	ldr	r4, [pc, #148]	; (8005360 <__pow5mult+0xa8>)
 80052ca:	3a01      	subs	r2, #1
 80052cc:	2300      	movs	r3, #0
 80052ce:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80052d2:	f7ff fe55 	bl	8004f80 <__multadd>
 80052d6:	4607      	mov	r7, r0
 80052d8:	10ad      	asrs	r5, r5, #2
 80052da:	d03d      	beq.n	8005358 <__pow5mult+0xa0>
 80052dc:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80052de:	b97c      	cbnz	r4, 8005300 <__pow5mult+0x48>
 80052e0:	2010      	movs	r0, #16
 80052e2:	f7ff fdb5 	bl	8004e50 <malloc>
 80052e6:	4602      	mov	r2, r0
 80052e8:	6270      	str	r0, [r6, #36]	; 0x24
 80052ea:	b928      	cbnz	r0, 80052f8 <__pow5mult+0x40>
 80052ec:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 80052f0:	4b1c      	ldr	r3, [pc, #112]	; (8005364 <__pow5mult+0xac>)
 80052f2:	481d      	ldr	r0, [pc, #116]	; (8005368 <__pow5mult+0xb0>)
 80052f4:	f000 fd1e 	bl	8005d34 <__assert_func>
 80052f8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80052fc:	6004      	str	r4, [r0, #0]
 80052fe:	60c4      	str	r4, [r0, #12]
 8005300:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8005304:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8005308:	b94c      	cbnz	r4, 800531e <__pow5mult+0x66>
 800530a:	f240 2171 	movw	r1, #625	; 0x271
 800530e:	4630      	mov	r0, r6
 8005310:	f7ff ff14 	bl	800513c <__i2b>
 8005314:	2300      	movs	r3, #0
 8005316:	4604      	mov	r4, r0
 8005318:	f8c8 0008 	str.w	r0, [r8, #8]
 800531c:	6003      	str	r3, [r0, #0]
 800531e:	f04f 0900 	mov.w	r9, #0
 8005322:	07eb      	lsls	r3, r5, #31
 8005324:	d50a      	bpl.n	800533c <__pow5mult+0x84>
 8005326:	4639      	mov	r1, r7
 8005328:	4622      	mov	r2, r4
 800532a:	4630      	mov	r0, r6
 800532c:	f7ff ff1c 	bl	8005168 <__multiply>
 8005330:	4680      	mov	r8, r0
 8005332:	4639      	mov	r1, r7
 8005334:	4630      	mov	r0, r6
 8005336:	f7ff fe01 	bl	8004f3c <_Bfree>
 800533a:	4647      	mov	r7, r8
 800533c:	106d      	asrs	r5, r5, #1
 800533e:	d00b      	beq.n	8005358 <__pow5mult+0xa0>
 8005340:	6820      	ldr	r0, [r4, #0]
 8005342:	b938      	cbnz	r0, 8005354 <__pow5mult+0x9c>
 8005344:	4622      	mov	r2, r4
 8005346:	4621      	mov	r1, r4
 8005348:	4630      	mov	r0, r6
 800534a:	f7ff ff0d 	bl	8005168 <__multiply>
 800534e:	6020      	str	r0, [r4, #0]
 8005350:	f8c0 9000 	str.w	r9, [r0]
 8005354:	4604      	mov	r4, r0
 8005356:	e7e4      	b.n	8005322 <__pow5mult+0x6a>
 8005358:	4638      	mov	r0, r7
 800535a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800535e:	bf00      	nop
 8005360:	08006cc8 	.word	0x08006cc8
 8005364:	08006a7e 	.word	0x08006a7e
 8005368:	08006b7c 	.word	0x08006b7c

0800536c <__lshift>:
 800536c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005370:	460c      	mov	r4, r1
 8005372:	4607      	mov	r7, r0
 8005374:	4691      	mov	r9, r2
 8005376:	6923      	ldr	r3, [r4, #16]
 8005378:	6849      	ldr	r1, [r1, #4]
 800537a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800537e:	68a3      	ldr	r3, [r4, #8]
 8005380:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8005384:	f108 0601 	add.w	r6, r8, #1
 8005388:	42b3      	cmp	r3, r6
 800538a:	db0b      	blt.n	80053a4 <__lshift+0x38>
 800538c:	4638      	mov	r0, r7
 800538e:	f7ff fd95 	bl	8004ebc <_Balloc>
 8005392:	4605      	mov	r5, r0
 8005394:	b948      	cbnz	r0, 80053aa <__lshift+0x3e>
 8005396:	4602      	mov	r2, r0
 8005398:	f240 11d9 	movw	r1, #473	; 0x1d9
 800539c:	4b29      	ldr	r3, [pc, #164]	; (8005444 <__lshift+0xd8>)
 800539e:	482a      	ldr	r0, [pc, #168]	; (8005448 <__lshift+0xdc>)
 80053a0:	f000 fcc8 	bl	8005d34 <__assert_func>
 80053a4:	3101      	adds	r1, #1
 80053a6:	005b      	lsls	r3, r3, #1
 80053a8:	e7ee      	b.n	8005388 <__lshift+0x1c>
 80053aa:	2300      	movs	r3, #0
 80053ac:	f100 0114 	add.w	r1, r0, #20
 80053b0:	f100 0210 	add.w	r2, r0, #16
 80053b4:	4618      	mov	r0, r3
 80053b6:	4553      	cmp	r3, sl
 80053b8:	db37      	blt.n	800542a <__lshift+0xbe>
 80053ba:	6920      	ldr	r0, [r4, #16]
 80053bc:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80053c0:	f104 0314 	add.w	r3, r4, #20
 80053c4:	f019 091f 	ands.w	r9, r9, #31
 80053c8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80053cc:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 80053d0:	d02f      	beq.n	8005432 <__lshift+0xc6>
 80053d2:	468a      	mov	sl, r1
 80053d4:	f04f 0c00 	mov.w	ip, #0
 80053d8:	f1c9 0e20 	rsb	lr, r9, #32
 80053dc:	681a      	ldr	r2, [r3, #0]
 80053de:	fa02 f209 	lsl.w	r2, r2, r9
 80053e2:	ea42 020c 	orr.w	r2, r2, ip
 80053e6:	f84a 2b04 	str.w	r2, [sl], #4
 80053ea:	f853 2b04 	ldr.w	r2, [r3], #4
 80053ee:	4298      	cmp	r0, r3
 80053f0:	fa22 fc0e 	lsr.w	ip, r2, lr
 80053f4:	d8f2      	bhi.n	80053dc <__lshift+0x70>
 80053f6:	1b03      	subs	r3, r0, r4
 80053f8:	3b15      	subs	r3, #21
 80053fa:	f023 0303 	bic.w	r3, r3, #3
 80053fe:	3304      	adds	r3, #4
 8005400:	f104 0215 	add.w	r2, r4, #21
 8005404:	4290      	cmp	r0, r2
 8005406:	bf38      	it	cc
 8005408:	2304      	movcc	r3, #4
 800540a:	f841 c003 	str.w	ip, [r1, r3]
 800540e:	f1bc 0f00 	cmp.w	ip, #0
 8005412:	d001      	beq.n	8005418 <__lshift+0xac>
 8005414:	f108 0602 	add.w	r6, r8, #2
 8005418:	3e01      	subs	r6, #1
 800541a:	4638      	mov	r0, r7
 800541c:	4621      	mov	r1, r4
 800541e:	612e      	str	r6, [r5, #16]
 8005420:	f7ff fd8c 	bl	8004f3c <_Bfree>
 8005424:	4628      	mov	r0, r5
 8005426:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800542a:	f842 0f04 	str.w	r0, [r2, #4]!
 800542e:	3301      	adds	r3, #1
 8005430:	e7c1      	b.n	80053b6 <__lshift+0x4a>
 8005432:	3904      	subs	r1, #4
 8005434:	f853 2b04 	ldr.w	r2, [r3], #4
 8005438:	4298      	cmp	r0, r3
 800543a:	f841 2f04 	str.w	r2, [r1, #4]!
 800543e:	d8f9      	bhi.n	8005434 <__lshift+0xc8>
 8005440:	e7ea      	b.n	8005418 <__lshift+0xac>
 8005442:	bf00      	nop
 8005444:	08006af0 	.word	0x08006af0
 8005448:	08006b7c 	.word	0x08006b7c

0800544c <__mcmp>:
 800544c:	4603      	mov	r3, r0
 800544e:	690a      	ldr	r2, [r1, #16]
 8005450:	6900      	ldr	r0, [r0, #16]
 8005452:	b530      	push	{r4, r5, lr}
 8005454:	1a80      	subs	r0, r0, r2
 8005456:	d10d      	bne.n	8005474 <__mcmp+0x28>
 8005458:	3314      	adds	r3, #20
 800545a:	3114      	adds	r1, #20
 800545c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8005460:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8005464:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8005468:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800546c:	4295      	cmp	r5, r2
 800546e:	d002      	beq.n	8005476 <__mcmp+0x2a>
 8005470:	d304      	bcc.n	800547c <__mcmp+0x30>
 8005472:	2001      	movs	r0, #1
 8005474:	bd30      	pop	{r4, r5, pc}
 8005476:	42a3      	cmp	r3, r4
 8005478:	d3f4      	bcc.n	8005464 <__mcmp+0x18>
 800547a:	e7fb      	b.n	8005474 <__mcmp+0x28>
 800547c:	f04f 30ff 	mov.w	r0, #4294967295
 8005480:	e7f8      	b.n	8005474 <__mcmp+0x28>
	...

08005484 <__mdiff>:
 8005484:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005488:	460d      	mov	r5, r1
 800548a:	4607      	mov	r7, r0
 800548c:	4611      	mov	r1, r2
 800548e:	4628      	mov	r0, r5
 8005490:	4614      	mov	r4, r2
 8005492:	f7ff ffdb 	bl	800544c <__mcmp>
 8005496:	1e06      	subs	r6, r0, #0
 8005498:	d111      	bne.n	80054be <__mdiff+0x3a>
 800549a:	4631      	mov	r1, r6
 800549c:	4638      	mov	r0, r7
 800549e:	f7ff fd0d 	bl	8004ebc <_Balloc>
 80054a2:	4602      	mov	r2, r0
 80054a4:	b928      	cbnz	r0, 80054b2 <__mdiff+0x2e>
 80054a6:	f240 2132 	movw	r1, #562	; 0x232
 80054aa:	4b3a      	ldr	r3, [pc, #232]	; (8005594 <__mdiff+0x110>)
 80054ac:	483a      	ldr	r0, [pc, #232]	; (8005598 <__mdiff+0x114>)
 80054ae:	f000 fc41 	bl	8005d34 <__assert_func>
 80054b2:	2301      	movs	r3, #1
 80054b4:	e9c0 3604 	strd	r3, r6, [r0, #16]
 80054b8:	4610      	mov	r0, r2
 80054ba:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80054be:	bfa4      	itt	ge
 80054c0:	4623      	movge	r3, r4
 80054c2:	462c      	movge	r4, r5
 80054c4:	4638      	mov	r0, r7
 80054c6:	6861      	ldr	r1, [r4, #4]
 80054c8:	bfa6      	itte	ge
 80054ca:	461d      	movge	r5, r3
 80054cc:	2600      	movge	r6, #0
 80054ce:	2601      	movlt	r6, #1
 80054d0:	f7ff fcf4 	bl	8004ebc <_Balloc>
 80054d4:	4602      	mov	r2, r0
 80054d6:	b918      	cbnz	r0, 80054e0 <__mdiff+0x5c>
 80054d8:	f44f 7110 	mov.w	r1, #576	; 0x240
 80054dc:	4b2d      	ldr	r3, [pc, #180]	; (8005594 <__mdiff+0x110>)
 80054de:	e7e5      	b.n	80054ac <__mdiff+0x28>
 80054e0:	f102 0814 	add.w	r8, r2, #20
 80054e4:	46c2      	mov	sl, r8
 80054e6:	f04f 0c00 	mov.w	ip, #0
 80054ea:	6927      	ldr	r7, [r4, #16]
 80054ec:	60c6      	str	r6, [r0, #12]
 80054ee:	692e      	ldr	r6, [r5, #16]
 80054f0:	f104 0014 	add.w	r0, r4, #20
 80054f4:	f105 0914 	add.w	r9, r5, #20
 80054f8:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 80054fc:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8005500:	3410      	adds	r4, #16
 8005502:	f854 bf04 	ldr.w	fp, [r4, #4]!
 8005506:	f859 3b04 	ldr.w	r3, [r9], #4
 800550a:	fa1f f18b 	uxth.w	r1, fp
 800550e:	448c      	add	ip, r1
 8005510:	b299      	uxth	r1, r3
 8005512:	0c1b      	lsrs	r3, r3, #16
 8005514:	ebac 0101 	sub.w	r1, ip, r1
 8005518:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800551c:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8005520:	b289      	uxth	r1, r1
 8005522:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8005526:	454e      	cmp	r6, r9
 8005528:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800552c:	f84a 3b04 	str.w	r3, [sl], #4
 8005530:	d8e7      	bhi.n	8005502 <__mdiff+0x7e>
 8005532:	1b73      	subs	r3, r6, r5
 8005534:	3b15      	subs	r3, #21
 8005536:	f023 0303 	bic.w	r3, r3, #3
 800553a:	3515      	adds	r5, #21
 800553c:	3304      	adds	r3, #4
 800553e:	42ae      	cmp	r6, r5
 8005540:	bf38      	it	cc
 8005542:	2304      	movcc	r3, #4
 8005544:	4418      	add	r0, r3
 8005546:	4443      	add	r3, r8
 8005548:	461e      	mov	r6, r3
 800554a:	4605      	mov	r5, r0
 800554c:	4575      	cmp	r5, lr
 800554e:	d30e      	bcc.n	800556e <__mdiff+0xea>
 8005550:	f10e 0103 	add.w	r1, lr, #3
 8005554:	1a09      	subs	r1, r1, r0
 8005556:	f021 0103 	bic.w	r1, r1, #3
 800555a:	3803      	subs	r0, #3
 800555c:	4586      	cmp	lr, r0
 800555e:	bf38      	it	cc
 8005560:	2100      	movcc	r1, #0
 8005562:	4419      	add	r1, r3
 8005564:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8005568:	b18b      	cbz	r3, 800558e <__mdiff+0x10a>
 800556a:	6117      	str	r7, [r2, #16]
 800556c:	e7a4      	b.n	80054b8 <__mdiff+0x34>
 800556e:	f855 8b04 	ldr.w	r8, [r5], #4
 8005572:	fa1f f188 	uxth.w	r1, r8
 8005576:	4461      	add	r1, ip
 8005578:	140c      	asrs	r4, r1, #16
 800557a:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800557e:	b289      	uxth	r1, r1
 8005580:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8005584:	ea4f 4c24 	mov.w	ip, r4, asr #16
 8005588:	f846 1b04 	str.w	r1, [r6], #4
 800558c:	e7de      	b.n	800554c <__mdiff+0xc8>
 800558e:	3f01      	subs	r7, #1
 8005590:	e7e8      	b.n	8005564 <__mdiff+0xe0>
 8005592:	bf00      	nop
 8005594:	08006af0 	.word	0x08006af0
 8005598:	08006b7c 	.word	0x08006b7c

0800559c <__ulp>:
 800559c:	4b11      	ldr	r3, [pc, #68]	; (80055e4 <__ulp+0x48>)
 800559e:	400b      	ands	r3, r1
 80055a0:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 80055a4:	2b00      	cmp	r3, #0
 80055a6:	dd02      	ble.n	80055ae <__ulp+0x12>
 80055a8:	2000      	movs	r0, #0
 80055aa:	4619      	mov	r1, r3
 80055ac:	4770      	bx	lr
 80055ae:	425b      	negs	r3, r3
 80055b0:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 80055b4:	f04f 0000 	mov.w	r0, #0
 80055b8:	f04f 0100 	mov.w	r1, #0
 80055bc:	ea4f 5223 	mov.w	r2, r3, asr #20
 80055c0:	da04      	bge.n	80055cc <__ulp+0x30>
 80055c2:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 80055c6:	fa43 f102 	asr.w	r1, r3, r2
 80055ca:	4770      	bx	lr
 80055cc:	f1a2 0314 	sub.w	r3, r2, #20
 80055d0:	2b1e      	cmp	r3, #30
 80055d2:	bfd6      	itet	le
 80055d4:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 80055d8:	2301      	movgt	r3, #1
 80055da:	fa22 f303 	lsrle.w	r3, r2, r3
 80055de:	4618      	mov	r0, r3
 80055e0:	4770      	bx	lr
 80055e2:	bf00      	nop
 80055e4:	7ff00000 	.word	0x7ff00000

080055e8 <__b2d>:
 80055e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80055ec:	6907      	ldr	r7, [r0, #16]
 80055ee:	f100 0914 	add.w	r9, r0, #20
 80055f2:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 80055f6:	f857 6c04 	ldr.w	r6, [r7, #-4]
 80055fa:	f1a7 0804 	sub.w	r8, r7, #4
 80055fe:	4630      	mov	r0, r6
 8005600:	f7ff fd4e 	bl	80050a0 <__hi0bits>
 8005604:	f1c0 0320 	rsb	r3, r0, #32
 8005608:	280a      	cmp	r0, #10
 800560a:	600b      	str	r3, [r1, #0]
 800560c:	491f      	ldr	r1, [pc, #124]	; (800568c <__b2d+0xa4>)
 800560e:	dc17      	bgt.n	8005640 <__b2d+0x58>
 8005610:	45c1      	cmp	r9, r8
 8005612:	bf28      	it	cs
 8005614:	2200      	movcs	r2, #0
 8005616:	f1c0 0c0b 	rsb	ip, r0, #11
 800561a:	fa26 f30c 	lsr.w	r3, r6, ip
 800561e:	bf38      	it	cc
 8005620:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8005624:	ea43 0501 	orr.w	r5, r3, r1
 8005628:	f100 0315 	add.w	r3, r0, #21
 800562c:	fa06 f303 	lsl.w	r3, r6, r3
 8005630:	fa22 f20c 	lsr.w	r2, r2, ip
 8005634:	ea43 0402 	orr.w	r4, r3, r2
 8005638:	4620      	mov	r0, r4
 800563a:	4629      	mov	r1, r5
 800563c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005640:	45c1      	cmp	r9, r8
 8005642:	bf2e      	itee	cs
 8005644:	2200      	movcs	r2, #0
 8005646:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 800564a:	f1a7 0808 	subcc.w	r8, r7, #8
 800564e:	f1b0 030b 	subs.w	r3, r0, #11
 8005652:	d016      	beq.n	8005682 <__b2d+0x9a>
 8005654:	f1c3 0720 	rsb	r7, r3, #32
 8005658:	fa22 f107 	lsr.w	r1, r2, r7
 800565c:	45c8      	cmp	r8, r9
 800565e:	fa06 f603 	lsl.w	r6, r6, r3
 8005662:	ea46 0601 	orr.w	r6, r6, r1
 8005666:	bf94      	ite	ls
 8005668:	2100      	movls	r1, #0
 800566a:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 800566e:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
 8005672:	fa02 f003 	lsl.w	r0, r2, r3
 8005676:	40f9      	lsrs	r1, r7
 8005678:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 800567c:	ea40 0401 	orr.w	r4, r0, r1
 8005680:	e7da      	b.n	8005638 <__b2d+0x50>
 8005682:	4614      	mov	r4, r2
 8005684:	ea46 0501 	orr.w	r5, r6, r1
 8005688:	e7d6      	b.n	8005638 <__b2d+0x50>
 800568a:	bf00      	nop
 800568c:	3ff00000 	.word	0x3ff00000

08005690 <__d2b>:
 8005690:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005694:	2101      	movs	r1, #1
 8005696:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 800569a:	4690      	mov	r8, r2
 800569c:	461d      	mov	r5, r3
 800569e:	f7ff fc0d 	bl	8004ebc <_Balloc>
 80056a2:	4604      	mov	r4, r0
 80056a4:	b930      	cbnz	r0, 80056b4 <__d2b+0x24>
 80056a6:	4602      	mov	r2, r0
 80056a8:	f240 310a 	movw	r1, #778	; 0x30a
 80056ac:	4b24      	ldr	r3, [pc, #144]	; (8005740 <__d2b+0xb0>)
 80056ae:	4825      	ldr	r0, [pc, #148]	; (8005744 <__d2b+0xb4>)
 80056b0:	f000 fb40 	bl	8005d34 <__assert_func>
 80056b4:	f3c5 0313 	ubfx	r3, r5, #0, #20
 80056b8:	f3c5 550a 	ubfx	r5, r5, #20, #11
 80056bc:	bb2d      	cbnz	r5, 800570a <__d2b+0x7a>
 80056be:	9301      	str	r3, [sp, #4]
 80056c0:	f1b8 0300 	subs.w	r3, r8, #0
 80056c4:	d026      	beq.n	8005714 <__d2b+0x84>
 80056c6:	4668      	mov	r0, sp
 80056c8:	9300      	str	r3, [sp, #0]
 80056ca:	f7ff fd09 	bl	80050e0 <__lo0bits>
 80056ce:	9900      	ldr	r1, [sp, #0]
 80056d0:	b1f0      	cbz	r0, 8005710 <__d2b+0x80>
 80056d2:	9a01      	ldr	r2, [sp, #4]
 80056d4:	f1c0 0320 	rsb	r3, r0, #32
 80056d8:	fa02 f303 	lsl.w	r3, r2, r3
 80056dc:	430b      	orrs	r3, r1
 80056de:	40c2      	lsrs	r2, r0
 80056e0:	6163      	str	r3, [r4, #20]
 80056e2:	9201      	str	r2, [sp, #4]
 80056e4:	9b01      	ldr	r3, [sp, #4]
 80056e6:	2b00      	cmp	r3, #0
 80056e8:	bf14      	ite	ne
 80056ea:	2102      	movne	r1, #2
 80056ec:	2101      	moveq	r1, #1
 80056ee:	61a3      	str	r3, [r4, #24]
 80056f0:	6121      	str	r1, [r4, #16]
 80056f2:	b1c5      	cbz	r5, 8005726 <__d2b+0x96>
 80056f4:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80056f8:	4405      	add	r5, r0
 80056fa:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80056fe:	603d      	str	r5, [r7, #0]
 8005700:	6030      	str	r0, [r6, #0]
 8005702:	4620      	mov	r0, r4
 8005704:	b002      	add	sp, #8
 8005706:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800570a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800570e:	e7d6      	b.n	80056be <__d2b+0x2e>
 8005710:	6161      	str	r1, [r4, #20]
 8005712:	e7e7      	b.n	80056e4 <__d2b+0x54>
 8005714:	a801      	add	r0, sp, #4
 8005716:	f7ff fce3 	bl	80050e0 <__lo0bits>
 800571a:	2101      	movs	r1, #1
 800571c:	9b01      	ldr	r3, [sp, #4]
 800571e:	6121      	str	r1, [r4, #16]
 8005720:	6163      	str	r3, [r4, #20]
 8005722:	3020      	adds	r0, #32
 8005724:	e7e5      	b.n	80056f2 <__d2b+0x62>
 8005726:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800572a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800572e:	6038      	str	r0, [r7, #0]
 8005730:	6918      	ldr	r0, [r3, #16]
 8005732:	f7ff fcb5 	bl	80050a0 <__hi0bits>
 8005736:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 800573a:	6031      	str	r1, [r6, #0]
 800573c:	e7e1      	b.n	8005702 <__d2b+0x72>
 800573e:	bf00      	nop
 8005740:	08006af0 	.word	0x08006af0
 8005744:	08006b7c 	.word	0x08006b7c

08005748 <__ratio>:
 8005748:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800574c:	4688      	mov	r8, r1
 800574e:	4669      	mov	r1, sp
 8005750:	4681      	mov	r9, r0
 8005752:	f7ff ff49 	bl	80055e8 <__b2d>
 8005756:	460f      	mov	r7, r1
 8005758:	4604      	mov	r4, r0
 800575a:	460d      	mov	r5, r1
 800575c:	4640      	mov	r0, r8
 800575e:	a901      	add	r1, sp, #4
 8005760:	f7ff ff42 	bl	80055e8 <__b2d>
 8005764:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8005768:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800576c:	468b      	mov	fp, r1
 800576e:	eba3 0c02 	sub.w	ip, r3, r2
 8005772:	e9dd 3200 	ldrd	r3, r2, [sp]
 8005776:	1a9b      	subs	r3, r3, r2
 8005778:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800577c:	2b00      	cmp	r3, #0
 800577e:	bfd5      	itete	le
 8005780:	460a      	movle	r2, r1
 8005782:	462a      	movgt	r2, r5
 8005784:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8005788:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800578c:	bfd8      	it	le
 800578e:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 8005792:	465b      	mov	r3, fp
 8005794:	4602      	mov	r2, r0
 8005796:	4639      	mov	r1, r7
 8005798:	4620      	mov	r0, r4
 800579a:	f7fb f833 	bl	8000804 <__aeabi_ddiv>
 800579e:	b003      	add	sp, #12
 80057a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080057a4 <__copybits>:
 80057a4:	3901      	subs	r1, #1
 80057a6:	b570      	push	{r4, r5, r6, lr}
 80057a8:	1149      	asrs	r1, r1, #5
 80057aa:	6914      	ldr	r4, [r2, #16]
 80057ac:	3101      	adds	r1, #1
 80057ae:	f102 0314 	add.w	r3, r2, #20
 80057b2:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80057b6:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80057ba:	1f05      	subs	r5, r0, #4
 80057bc:	42a3      	cmp	r3, r4
 80057be:	d30c      	bcc.n	80057da <__copybits+0x36>
 80057c0:	1aa3      	subs	r3, r4, r2
 80057c2:	3b11      	subs	r3, #17
 80057c4:	f023 0303 	bic.w	r3, r3, #3
 80057c8:	3211      	adds	r2, #17
 80057ca:	42a2      	cmp	r2, r4
 80057cc:	bf88      	it	hi
 80057ce:	2300      	movhi	r3, #0
 80057d0:	4418      	add	r0, r3
 80057d2:	2300      	movs	r3, #0
 80057d4:	4288      	cmp	r0, r1
 80057d6:	d305      	bcc.n	80057e4 <__copybits+0x40>
 80057d8:	bd70      	pop	{r4, r5, r6, pc}
 80057da:	f853 6b04 	ldr.w	r6, [r3], #4
 80057de:	f845 6f04 	str.w	r6, [r5, #4]!
 80057e2:	e7eb      	b.n	80057bc <__copybits+0x18>
 80057e4:	f840 3b04 	str.w	r3, [r0], #4
 80057e8:	e7f4      	b.n	80057d4 <__copybits+0x30>

080057ea <__any_on>:
 80057ea:	f100 0214 	add.w	r2, r0, #20
 80057ee:	6900      	ldr	r0, [r0, #16]
 80057f0:	114b      	asrs	r3, r1, #5
 80057f2:	4298      	cmp	r0, r3
 80057f4:	b510      	push	{r4, lr}
 80057f6:	db11      	blt.n	800581c <__any_on+0x32>
 80057f8:	dd0a      	ble.n	8005810 <__any_on+0x26>
 80057fa:	f011 011f 	ands.w	r1, r1, #31
 80057fe:	d007      	beq.n	8005810 <__any_on+0x26>
 8005800:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8005804:	fa24 f001 	lsr.w	r0, r4, r1
 8005808:	fa00 f101 	lsl.w	r1, r0, r1
 800580c:	428c      	cmp	r4, r1
 800580e:	d10b      	bne.n	8005828 <__any_on+0x3e>
 8005810:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8005814:	4293      	cmp	r3, r2
 8005816:	d803      	bhi.n	8005820 <__any_on+0x36>
 8005818:	2000      	movs	r0, #0
 800581a:	bd10      	pop	{r4, pc}
 800581c:	4603      	mov	r3, r0
 800581e:	e7f7      	b.n	8005810 <__any_on+0x26>
 8005820:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8005824:	2900      	cmp	r1, #0
 8005826:	d0f5      	beq.n	8005814 <__any_on+0x2a>
 8005828:	2001      	movs	r0, #1
 800582a:	e7f6      	b.n	800581a <__any_on+0x30>

0800582c <_calloc_r>:
 800582c:	b570      	push	{r4, r5, r6, lr}
 800582e:	fba1 5402 	umull	r5, r4, r1, r2
 8005832:	b934      	cbnz	r4, 8005842 <_calloc_r+0x16>
 8005834:	4629      	mov	r1, r5
 8005836:	f000 f875 	bl	8005924 <_malloc_r>
 800583a:	4606      	mov	r6, r0
 800583c:	b928      	cbnz	r0, 800584a <_calloc_r+0x1e>
 800583e:	4630      	mov	r0, r6
 8005840:	bd70      	pop	{r4, r5, r6, pc}
 8005842:	220c      	movs	r2, #12
 8005844:	2600      	movs	r6, #0
 8005846:	6002      	str	r2, [r0, #0]
 8005848:	e7f9      	b.n	800583e <_calloc_r+0x12>
 800584a:	462a      	mov	r2, r5
 800584c:	4621      	mov	r1, r4
 800584e:	f7fc fbf1 	bl	8002034 <memset>
 8005852:	e7f4      	b.n	800583e <_calloc_r+0x12>

08005854 <_free_r>:
 8005854:	b538      	push	{r3, r4, r5, lr}
 8005856:	4605      	mov	r5, r0
 8005858:	2900      	cmp	r1, #0
 800585a:	d040      	beq.n	80058de <_free_r+0x8a>
 800585c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005860:	1f0c      	subs	r4, r1, #4
 8005862:	2b00      	cmp	r3, #0
 8005864:	bfb8      	it	lt
 8005866:	18e4      	addlt	r4, r4, r3
 8005868:	f000 faae 	bl	8005dc8 <__malloc_lock>
 800586c:	4a1c      	ldr	r2, [pc, #112]	; (80058e0 <_free_r+0x8c>)
 800586e:	6813      	ldr	r3, [r2, #0]
 8005870:	b933      	cbnz	r3, 8005880 <_free_r+0x2c>
 8005872:	6063      	str	r3, [r4, #4]
 8005874:	6014      	str	r4, [r2, #0]
 8005876:	4628      	mov	r0, r5
 8005878:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800587c:	f000 baaa 	b.w	8005dd4 <__malloc_unlock>
 8005880:	42a3      	cmp	r3, r4
 8005882:	d908      	bls.n	8005896 <_free_r+0x42>
 8005884:	6820      	ldr	r0, [r4, #0]
 8005886:	1821      	adds	r1, r4, r0
 8005888:	428b      	cmp	r3, r1
 800588a:	bf01      	itttt	eq
 800588c:	6819      	ldreq	r1, [r3, #0]
 800588e:	685b      	ldreq	r3, [r3, #4]
 8005890:	1809      	addeq	r1, r1, r0
 8005892:	6021      	streq	r1, [r4, #0]
 8005894:	e7ed      	b.n	8005872 <_free_r+0x1e>
 8005896:	461a      	mov	r2, r3
 8005898:	685b      	ldr	r3, [r3, #4]
 800589a:	b10b      	cbz	r3, 80058a0 <_free_r+0x4c>
 800589c:	42a3      	cmp	r3, r4
 800589e:	d9fa      	bls.n	8005896 <_free_r+0x42>
 80058a0:	6811      	ldr	r1, [r2, #0]
 80058a2:	1850      	adds	r0, r2, r1
 80058a4:	42a0      	cmp	r0, r4
 80058a6:	d10b      	bne.n	80058c0 <_free_r+0x6c>
 80058a8:	6820      	ldr	r0, [r4, #0]
 80058aa:	4401      	add	r1, r0
 80058ac:	1850      	adds	r0, r2, r1
 80058ae:	4283      	cmp	r3, r0
 80058b0:	6011      	str	r1, [r2, #0]
 80058b2:	d1e0      	bne.n	8005876 <_free_r+0x22>
 80058b4:	6818      	ldr	r0, [r3, #0]
 80058b6:	685b      	ldr	r3, [r3, #4]
 80058b8:	4401      	add	r1, r0
 80058ba:	6011      	str	r1, [r2, #0]
 80058bc:	6053      	str	r3, [r2, #4]
 80058be:	e7da      	b.n	8005876 <_free_r+0x22>
 80058c0:	d902      	bls.n	80058c8 <_free_r+0x74>
 80058c2:	230c      	movs	r3, #12
 80058c4:	602b      	str	r3, [r5, #0]
 80058c6:	e7d6      	b.n	8005876 <_free_r+0x22>
 80058c8:	6820      	ldr	r0, [r4, #0]
 80058ca:	1821      	adds	r1, r4, r0
 80058cc:	428b      	cmp	r3, r1
 80058ce:	bf01      	itttt	eq
 80058d0:	6819      	ldreq	r1, [r3, #0]
 80058d2:	685b      	ldreq	r3, [r3, #4]
 80058d4:	1809      	addeq	r1, r1, r0
 80058d6:	6021      	streq	r1, [r4, #0]
 80058d8:	6063      	str	r3, [r4, #4]
 80058da:	6054      	str	r4, [r2, #4]
 80058dc:	e7cb      	b.n	8005876 <_free_r+0x22>
 80058de:	bd38      	pop	{r3, r4, r5, pc}
 80058e0:	20000204 	.word	0x20000204

080058e4 <sbrk_aligned>:
 80058e4:	b570      	push	{r4, r5, r6, lr}
 80058e6:	4e0e      	ldr	r6, [pc, #56]	; (8005920 <sbrk_aligned+0x3c>)
 80058e8:	460c      	mov	r4, r1
 80058ea:	6831      	ldr	r1, [r6, #0]
 80058ec:	4605      	mov	r5, r0
 80058ee:	b911      	cbnz	r1, 80058f6 <sbrk_aligned+0x12>
 80058f0:	f000 f9ee 	bl	8005cd0 <_sbrk_r>
 80058f4:	6030      	str	r0, [r6, #0]
 80058f6:	4621      	mov	r1, r4
 80058f8:	4628      	mov	r0, r5
 80058fa:	f000 f9e9 	bl	8005cd0 <_sbrk_r>
 80058fe:	1c43      	adds	r3, r0, #1
 8005900:	d00a      	beq.n	8005918 <sbrk_aligned+0x34>
 8005902:	1cc4      	adds	r4, r0, #3
 8005904:	f024 0403 	bic.w	r4, r4, #3
 8005908:	42a0      	cmp	r0, r4
 800590a:	d007      	beq.n	800591c <sbrk_aligned+0x38>
 800590c:	1a21      	subs	r1, r4, r0
 800590e:	4628      	mov	r0, r5
 8005910:	f000 f9de 	bl	8005cd0 <_sbrk_r>
 8005914:	3001      	adds	r0, #1
 8005916:	d101      	bne.n	800591c <sbrk_aligned+0x38>
 8005918:	f04f 34ff 	mov.w	r4, #4294967295
 800591c:	4620      	mov	r0, r4
 800591e:	bd70      	pop	{r4, r5, r6, pc}
 8005920:	20000208 	.word	0x20000208

08005924 <_malloc_r>:
 8005924:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005928:	1ccd      	adds	r5, r1, #3
 800592a:	f025 0503 	bic.w	r5, r5, #3
 800592e:	3508      	adds	r5, #8
 8005930:	2d0c      	cmp	r5, #12
 8005932:	bf38      	it	cc
 8005934:	250c      	movcc	r5, #12
 8005936:	2d00      	cmp	r5, #0
 8005938:	4607      	mov	r7, r0
 800593a:	db01      	blt.n	8005940 <_malloc_r+0x1c>
 800593c:	42a9      	cmp	r1, r5
 800593e:	d905      	bls.n	800594c <_malloc_r+0x28>
 8005940:	230c      	movs	r3, #12
 8005942:	2600      	movs	r6, #0
 8005944:	603b      	str	r3, [r7, #0]
 8005946:	4630      	mov	r0, r6
 8005948:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800594c:	4e2e      	ldr	r6, [pc, #184]	; (8005a08 <_malloc_r+0xe4>)
 800594e:	f000 fa3b 	bl	8005dc8 <__malloc_lock>
 8005952:	6833      	ldr	r3, [r6, #0]
 8005954:	461c      	mov	r4, r3
 8005956:	bb34      	cbnz	r4, 80059a6 <_malloc_r+0x82>
 8005958:	4629      	mov	r1, r5
 800595a:	4638      	mov	r0, r7
 800595c:	f7ff ffc2 	bl	80058e4 <sbrk_aligned>
 8005960:	1c43      	adds	r3, r0, #1
 8005962:	4604      	mov	r4, r0
 8005964:	d14d      	bne.n	8005a02 <_malloc_r+0xde>
 8005966:	6834      	ldr	r4, [r6, #0]
 8005968:	4626      	mov	r6, r4
 800596a:	2e00      	cmp	r6, #0
 800596c:	d140      	bne.n	80059f0 <_malloc_r+0xcc>
 800596e:	6823      	ldr	r3, [r4, #0]
 8005970:	4631      	mov	r1, r6
 8005972:	4638      	mov	r0, r7
 8005974:	eb04 0803 	add.w	r8, r4, r3
 8005978:	f000 f9aa 	bl	8005cd0 <_sbrk_r>
 800597c:	4580      	cmp	r8, r0
 800597e:	d13a      	bne.n	80059f6 <_malloc_r+0xd2>
 8005980:	6821      	ldr	r1, [r4, #0]
 8005982:	3503      	adds	r5, #3
 8005984:	1a6d      	subs	r5, r5, r1
 8005986:	f025 0503 	bic.w	r5, r5, #3
 800598a:	3508      	adds	r5, #8
 800598c:	2d0c      	cmp	r5, #12
 800598e:	bf38      	it	cc
 8005990:	250c      	movcc	r5, #12
 8005992:	4638      	mov	r0, r7
 8005994:	4629      	mov	r1, r5
 8005996:	f7ff ffa5 	bl	80058e4 <sbrk_aligned>
 800599a:	3001      	adds	r0, #1
 800599c:	d02b      	beq.n	80059f6 <_malloc_r+0xd2>
 800599e:	6823      	ldr	r3, [r4, #0]
 80059a0:	442b      	add	r3, r5
 80059a2:	6023      	str	r3, [r4, #0]
 80059a4:	e00e      	b.n	80059c4 <_malloc_r+0xa0>
 80059a6:	6822      	ldr	r2, [r4, #0]
 80059a8:	1b52      	subs	r2, r2, r5
 80059aa:	d41e      	bmi.n	80059ea <_malloc_r+0xc6>
 80059ac:	2a0b      	cmp	r2, #11
 80059ae:	d916      	bls.n	80059de <_malloc_r+0xba>
 80059b0:	1961      	adds	r1, r4, r5
 80059b2:	42a3      	cmp	r3, r4
 80059b4:	6025      	str	r5, [r4, #0]
 80059b6:	bf18      	it	ne
 80059b8:	6059      	strne	r1, [r3, #4]
 80059ba:	6863      	ldr	r3, [r4, #4]
 80059bc:	bf08      	it	eq
 80059be:	6031      	streq	r1, [r6, #0]
 80059c0:	5162      	str	r2, [r4, r5]
 80059c2:	604b      	str	r3, [r1, #4]
 80059c4:	4638      	mov	r0, r7
 80059c6:	f104 060b 	add.w	r6, r4, #11
 80059ca:	f000 fa03 	bl	8005dd4 <__malloc_unlock>
 80059ce:	f026 0607 	bic.w	r6, r6, #7
 80059d2:	1d23      	adds	r3, r4, #4
 80059d4:	1af2      	subs	r2, r6, r3
 80059d6:	d0b6      	beq.n	8005946 <_malloc_r+0x22>
 80059d8:	1b9b      	subs	r3, r3, r6
 80059da:	50a3      	str	r3, [r4, r2]
 80059dc:	e7b3      	b.n	8005946 <_malloc_r+0x22>
 80059de:	6862      	ldr	r2, [r4, #4]
 80059e0:	42a3      	cmp	r3, r4
 80059e2:	bf0c      	ite	eq
 80059e4:	6032      	streq	r2, [r6, #0]
 80059e6:	605a      	strne	r2, [r3, #4]
 80059e8:	e7ec      	b.n	80059c4 <_malloc_r+0xa0>
 80059ea:	4623      	mov	r3, r4
 80059ec:	6864      	ldr	r4, [r4, #4]
 80059ee:	e7b2      	b.n	8005956 <_malloc_r+0x32>
 80059f0:	4634      	mov	r4, r6
 80059f2:	6876      	ldr	r6, [r6, #4]
 80059f4:	e7b9      	b.n	800596a <_malloc_r+0x46>
 80059f6:	230c      	movs	r3, #12
 80059f8:	4638      	mov	r0, r7
 80059fa:	603b      	str	r3, [r7, #0]
 80059fc:	f000 f9ea 	bl	8005dd4 <__malloc_unlock>
 8005a00:	e7a1      	b.n	8005946 <_malloc_r+0x22>
 8005a02:	6025      	str	r5, [r4, #0]
 8005a04:	e7de      	b.n	80059c4 <_malloc_r+0xa0>
 8005a06:	bf00      	nop
 8005a08:	20000204 	.word	0x20000204

08005a0c <__ssputs_r>:
 8005a0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005a10:	688e      	ldr	r6, [r1, #8]
 8005a12:	4682      	mov	sl, r0
 8005a14:	429e      	cmp	r6, r3
 8005a16:	460c      	mov	r4, r1
 8005a18:	4690      	mov	r8, r2
 8005a1a:	461f      	mov	r7, r3
 8005a1c:	d838      	bhi.n	8005a90 <__ssputs_r+0x84>
 8005a1e:	898a      	ldrh	r2, [r1, #12]
 8005a20:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8005a24:	d032      	beq.n	8005a8c <__ssputs_r+0x80>
 8005a26:	6825      	ldr	r5, [r4, #0]
 8005a28:	6909      	ldr	r1, [r1, #16]
 8005a2a:	3301      	adds	r3, #1
 8005a2c:	eba5 0901 	sub.w	r9, r5, r1
 8005a30:	6965      	ldr	r5, [r4, #20]
 8005a32:	444b      	add	r3, r9
 8005a34:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005a38:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005a3c:	106d      	asrs	r5, r5, #1
 8005a3e:	429d      	cmp	r5, r3
 8005a40:	bf38      	it	cc
 8005a42:	461d      	movcc	r5, r3
 8005a44:	0553      	lsls	r3, r2, #21
 8005a46:	d531      	bpl.n	8005aac <__ssputs_r+0xa0>
 8005a48:	4629      	mov	r1, r5
 8005a4a:	f7ff ff6b 	bl	8005924 <_malloc_r>
 8005a4e:	4606      	mov	r6, r0
 8005a50:	b950      	cbnz	r0, 8005a68 <__ssputs_r+0x5c>
 8005a52:	230c      	movs	r3, #12
 8005a54:	f04f 30ff 	mov.w	r0, #4294967295
 8005a58:	f8ca 3000 	str.w	r3, [sl]
 8005a5c:	89a3      	ldrh	r3, [r4, #12]
 8005a5e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005a62:	81a3      	strh	r3, [r4, #12]
 8005a64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005a68:	464a      	mov	r2, r9
 8005a6a:	6921      	ldr	r1, [r4, #16]
 8005a6c:	f7ff fa18 	bl	8004ea0 <memcpy>
 8005a70:	89a3      	ldrh	r3, [r4, #12]
 8005a72:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8005a76:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005a7a:	81a3      	strh	r3, [r4, #12]
 8005a7c:	6126      	str	r6, [r4, #16]
 8005a7e:	444e      	add	r6, r9
 8005a80:	6026      	str	r6, [r4, #0]
 8005a82:	463e      	mov	r6, r7
 8005a84:	6165      	str	r5, [r4, #20]
 8005a86:	eba5 0509 	sub.w	r5, r5, r9
 8005a8a:	60a5      	str	r5, [r4, #8]
 8005a8c:	42be      	cmp	r6, r7
 8005a8e:	d900      	bls.n	8005a92 <__ssputs_r+0x86>
 8005a90:	463e      	mov	r6, r7
 8005a92:	4632      	mov	r2, r6
 8005a94:	4641      	mov	r1, r8
 8005a96:	6820      	ldr	r0, [r4, #0]
 8005a98:	f000 f97c 	bl	8005d94 <memmove>
 8005a9c:	68a3      	ldr	r3, [r4, #8]
 8005a9e:	2000      	movs	r0, #0
 8005aa0:	1b9b      	subs	r3, r3, r6
 8005aa2:	60a3      	str	r3, [r4, #8]
 8005aa4:	6823      	ldr	r3, [r4, #0]
 8005aa6:	4433      	add	r3, r6
 8005aa8:	6023      	str	r3, [r4, #0]
 8005aaa:	e7db      	b.n	8005a64 <__ssputs_r+0x58>
 8005aac:	462a      	mov	r2, r5
 8005aae:	f000 f997 	bl	8005de0 <_realloc_r>
 8005ab2:	4606      	mov	r6, r0
 8005ab4:	2800      	cmp	r0, #0
 8005ab6:	d1e1      	bne.n	8005a7c <__ssputs_r+0x70>
 8005ab8:	4650      	mov	r0, sl
 8005aba:	6921      	ldr	r1, [r4, #16]
 8005abc:	f7ff feca 	bl	8005854 <_free_r>
 8005ac0:	e7c7      	b.n	8005a52 <__ssputs_r+0x46>
	...

08005ac4 <_svfiprintf_r>:
 8005ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ac8:	4698      	mov	r8, r3
 8005aca:	898b      	ldrh	r3, [r1, #12]
 8005acc:	4607      	mov	r7, r0
 8005ace:	061b      	lsls	r3, r3, #24
 8005ad0:	460d      	mov	r5, r1
 8005ad2:	4614      	mov	r4, r2
 8005ad4:	b09d      	sub	sp, #116	; 0x74
 8005ad6:	d50e      	bpl.n	8005af6 <_svfiprintf_r+0x32>
 8005ad8:	690b      	ldr	r3, [r1, #16]
 8005ada:	b963      	cbnz	r3, 8005af6 <_svfiprintf_r+0x32>
 8005adc:	2140      	movs	r1, #64	; 0x40
 8005ade:	f7ff ff21 	bl	8005924 <_malloc_r>
 8005ae2:	6028      	str	r0, [r5, #0]
 8005ae4:	6128      	str	r0, [r5, #16]
 8005ae6:	b920      	cbnz	r0, 8005af2 <_svfiprintf_r+0x2e>
 8005ae8:	230c      	movs	r3, #12
 8005aea:	603b      	str	r3, [r7, #0]
 8005aec:	f04f 30ff 	mov.w	r0, #4294967295
 8005af0:	e0d1      	b.n	8005c96 <_svfiprintf_r+0x1d2>
 8005af2:	2340      	movs	r3, #64	; 0x40
 8005af4:	616b      	str	r3, [r5, #20]
 8005af6:	2300      	movs	r3, #0
 8005af8:	9309      	str	r3, [sp, #36]	; 0x24
 8005afa:	2320      	movs	r3, #32
 8005afc:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005b00:	2330      	movs	r3, #48	; 0x30
 8005b02:	f04f 0901 	mov.w	r9, #1
 8005b06:	f8cd 800c 	str.w	r8, [sp, #12]
 8005b0a:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8005cb0 <_svfiprintf_r+0x1ec>
 8005b0e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005b12:	4623      	mov	r3, r4
 8005b14:	469a      	mov	sl, r3
 8005b16:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005b1a:	b10a      	cbz	r2, 8005b20 <_svfiprintf_r+0x5c>
 8005b1c:	2a25      	cmp	r2, #37	; 0x25
 8005b1e:	d1f9      	bne.n	8005b14 <_svfiprintf_r+0x50>
 8005b20:	ebba 0b04 	subs.w	fp, sl, r4
 8005b24:	d00b      	beq.n	8005b3e <_svfiprintf_r+0x7a>
 8005b26:	465b      	mov	r3, fp
 8005b28:	4622      	mov	r2, r4
 8005b2a:	4629      	mov	r1, r5
 8005b2c:	4638      	mov	r0, r7
 8005b2e:	f7ff ff6d 	bl	8005a0c <__ssputs_r>
 8005b32:	3001      	adds	r0, #1
 8005b34:	f000 80aa 	beq.w	8005c8c <_svfiprintf_r+0x1c8>
 8005b38:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005b3a:	445a      	add	r2, fp
 8005b3c:	9209      	str	r2, [sp, #36]	; 0x24
 8005b3e:	f89a 3000 	ldrb.w	r3, [sl]
 8005b42:	2b00      	cmp	r3, #0
 8005b44:	f000 80a2 	beq.w	8005c8c <_svfiprintf_r+0x1c8>
 8005b48:	2300      	movs	r3, #0
 8005b4a:	f04f 32ff 	mov.w	r2, #4294967295
 8005b4e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005b52:	f10a 0a01 	add.w	sl, sl, #1
 8005b56:	9304      	str	r3, [sp, #16]
 8005b58:	9307      	str	r3, [sp, #28]
 8005b5a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005b5e:	931a      	str	r3, [sp, #104]	; 0x68
 8005b60:	4654      	mov	r4, sl
 8005b62:	2205      	movs	r2, #5
 8005b64:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005b68:	4851      	ldr	r0, [pc, #324]	; (8005cb0 <_svfiprintf_r+0x1ec>)
 8005b6a:	f7ff f98b 	bl	8004e84 <memchr>
 8005b6e:	9a04      	ldr	r2, [sp, #16]
 8005b70:	b9d8      	cbnz	r0, 8005baa <_svfiprintf_r+0xe6>
 8005b72:	06d0      	lsls	r0, r2, #27
 8005b74:	bf44      	itt	mi
 8005b76:	2320      	movmi	r3, #32
 8005b78:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005b7c:	0711      	lsls	r1, r2, #28
 8005b7e:	bf44      	itt	mi
 8005b80:	232b      	movmi	r3, #43	; 0x2b
 8005b82:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005b86:	f89a 3000 	ldrb.w	r3, [sl]
 8005b8a:	2b2a      	cmp	r3, #42	; 0x2a
 8005b8c:	d015      	beq.n	8005bba <_svfiprintf_r+0xf6>
 8005b8e:	4654      	mov	r4, sl
 8005b90:	2000      	movs	r0, #0
 8005b92:	f04f 0c0a 	mov.w	ip, #10
 8005b96:	9a07      	ldr	r2, [sp, #28]
 8005b98:	4621      	mov	r1, r4
 8005b9a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005b9e:	3b30      	subs	r3, #48	; 0x30
 8005ba0:	2b09      	cmp	r3, #9
 8005ba2:	d94e      	bls.n	8005c42 <_svfiprintf_r+0x17e>
 8005ba4:	b1b0      	cbz	r0, 8005bd4 <_svfiprintf_r+0x110>
 8005ba6:	9207      	str	r2, [sp, #28]
 8005ba8:	e014      	b.n	8005bd4 <_svfiprintf_r+0x110>
 8005baa:	eba0 0308 	sub.w	r3, r0, r8
 8005bae:	fa09 f303 	lsl.w	r3, r9, r3
 8005bb2:	4313      	orrs	r3, r2
 8005bb4:	46a2      	mov	sl, r4
 8005bb6:	9304      	str	r3, [sp, #16]
 8005bb8:	e7d2      	b.n	8005b60 <_svfiprintf_r+0x9c>
 8005bba:	9b03      	ldr	r3, [sp, #12]
 8005bbc:	1d19      	adds	r1, r3, #4
 8005bbe:	681b      	ldr	r3, [r3, #0]
 8005bc0:	9103      	str	r1, [sp, #12]
 8005bc2:	2b00      	cmp	r3, #0
 8005bc4:	bfbb      	ittet	lt
 8005bc6:	425b      	neglt	r3, r3
 8005bc8:	f042 0202 	orrlt.w	r2, r2, #2
 8005bcc:	9307      	strge	r3, [sp, #28]
 8005bce:	9307      	strlt	r3, [sp, #28]
 8005bd0:	bfb8      	it	lt
 8005bd2:	9204      	strlt	r2, [sp, #16]
 8005bd4:	7823      	ldrb	r3, [r4, #0]
 8005bd6:	2b2e      	cmp	r3, #46	; 0x2e
 8005bd8:	d10c      	bne.n	8005bf4 <_svfiprintf_r+0x130>
 8005bda:	7863      	ldrb	r3, [r4, #1]
 8005bdc:	2b2a      	cmp	r3, #42	; 0x2a
 8005bde:	d135      	bne.n	8005c4c <_svfiprintf_r+0x188>
 8005be0:	9b03      	ldr	r3, [sp, #12]
 8005be2:	3402      	adds	r4, #2
 8005be4:	1d1a      	adds	r2, r3, #4
 8005be6:	681b      	ldr	r3, [r3, #0]
 8005be8:	9203      	str	r2, [sp, #12]
 8005bea:	2b00      	cmp	r3, #0
 8005bec:	bfb8      	it	lt
 8005bee:	f04f 33ff 	movlt.w	r3, #4294967295
 8005bf2:	9305      	str	r3, [sp, #20]
 8005bf4:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 8005cb4 <_svfiprintf_r+0x1f0>
 8005bf8:	2203      	movs	r2, #3
 8005bfa:	4650      	mov	r0, sl
 8005bfc:	7821      	ldrb	r1, [r4, #0]
 8005bfe:	f7ff f941 	bl	8004e84 <memchr>
 8005c02:	b140      	cbz	r0, 8005c16 <_svfiprintf_r+0x152>
 8005c04:	2340      	movs	r3, #64	; 0x40
 8005c06:	eba0 000a 	sub.w	r0, r0, sl
 8005c0a:	fa03 f000 	lsl.w	r0, r3, r0
 8005c0e:	9b04      	ldr	r3, [sp, #16]
 8005c10:	3401      	adds	r4, #1
 8005c12:	4303      	orrs	r3, r0
 8005c14:	9304      	str	r3, [sp, #16]
 8005c16:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005c1a:	2206      	movs	r2, #6
 8005c1c:	4826      	ldr	r0, [pc, #152]	; (8005cb8 <_svfiprintf_r+0x1f4>)
 8005c1e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005c22:	f7ff f92f 	bl	8004e84 <memchr>
 8005c26:	2800      	cmp	r0, #0
 8005c28:	d038      	beq.n	8005c9c <_svfiprintf_r+0x1d8>
 8005c2a:	4b24      	ldr	r3, [pc, #144]	; (8005cbc <_svfiprintf_r+0x1f8>)
 8005c2c:	bb1b      	cbnz	r3, 8005c76 <_svfiprintf_r+0x1b2>
 8005c2e:	9b03      	ldr	r3, [sp, #12]
 8005c30:	3307      	adds	r3, #7
 8005c32:	f023 0307 	bic.w	r3, r3, #7
 8005c36:	3308      	adds	r3, #8
 8005c38:	9303      	str	r3, [sp, #12]
 8005c3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005c3c:	4433      	add	r3, r6
 8005c3e:	9309      	str	r3, [sp, #36]	; 0x24
 8005c40:	e767      	b.n	8005b12 <_svfiprintf_r+0x4e>
 8005c42:	460c      	mov	r4, r1
 8005c44:	2001      	movs	r0, #1
 8005c46:	fb0c 3202 	mla	r2, ip, r2, r3
 8005c4a:	e7a5      	b.n	8005b98 <_svfiprintf_r+0xd4>
 8005c4c:	2300      	movs	r3, #0
 8005c4e:	f04f 0c0a 	mov.w	ip, #10
 8005c52:	4619      	mov	r1, r3
 8005c54:	3401      	adds	r4, #1
 8005c56:	9305      	str	r3, [sp, #20]
 8005c58:	4620      	mov	r0, r4
 8005c5a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005c5e:	3a30      	subs	r2, #48	; 0x30
 8005c60:	2a09      	cmp	r2, #9
 8005c62:	d903      	bls.n	8005c6c <_svfiprintf_r+0x1a8>
 8005c64:	2b00      	cmp	r3, #0
 8005c66:	d0c5      	beq.n	8005bf4 <_svfiprintf_r+0x130>
 8005c68:	9105      	str	r1, [sp, #20]
 8005c6a:	e7c3      	b.n	8005bf4 <_svfiprintf_r+0x130>
 8005c6c:	4604      	mov	r4, r0
 8005c6e:	2301      	movs	r3, #1
 8005c70:	fb0c 2101 	mla	r1, ip, r1, r2
 8005c74:	e7f0      	b.n	8005c58 <_svfiprintf_r+0x194>
 8005c76:	ab03      	add	r3, sp, #12
 8005c78:	9300      	str	r3, [sp, #0]
 8005c7a:	462a      	mov	r2, r5
 8005c7c:	4638      	mov	r0, r7
 8005c7e:	4b10      	ldr	r3, [pc, #64]	; (8005cc0 <_svfiprintf_r+0x1fc>)
 8005c80:	a904      	add	r1, sp, #16
 8005c82:	f7fc fa7d 	bl	8002180 <_printf_float>
 8005c86:	1c42      	adds	r2, r0, #1
 8005c88:	4606      	mov	r6, r0
 8005c8a:	d1d6      	bne.n	8005c3a <_svfiprintf_r+0x176>
 8005c8c:	89ab      	ldrh	r3, [r5, #12]
 8005c8e:	065b      	lsls	r3, r3, #25
 8005c90:	f53f af2c 	bmi.w	8005aec <_svfiprintf_r+0x28>
 8005c94:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005c96:	b01d      	add	sp, #116	; 0x74
 8005c98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c9c:	ab03      	add	r3, sp, #12
 8005c9e:	9300      	str	r3, [sp, #0]
 8005ca0:	462a      	mov	r2, r5
 8005ca2:	4638      	mov	r0, r7
 8005ca4:	4b06      	ldr	r3, [pc, #24]	; (8005cc0 <_svfiprintf_r+0x1fc>)
 8005ca6:	a904      	add	r1, sp, #16
 8005ca8:	f7fc fd06 	bl	80026b8 <_printf_i>
 8005cac:	e7eb      	b.n	8005c86 <_svfiprintf_r+0x1c2>
 8005cae:	bf00      	nop
 8005cb0:	08006cd4 	.word	0x08006cd4
 8005cb4:	08006cda 	.word	0x08006cda
 8005cb8:	08006cde 	.word	0x08006cde
 8005cbc:	08002181 	.word	0x08002181
 8005cc0:	08005a0d 	.word	0x08005a0d

08005cc4 <nan>:
 8005cc4:	2000      	movs	r0, #0
 8005cc6:	4901      	ldr	r1, [pc, #4]	; (8005ccc <nan+0x8>)
 8005cc8:	4770      	bx	lr
 8005cca:	bf00      	nop
 8005ccc:	7ff80000 	.word	0x7ff80000

08005cd0 <_sbrk_r>:
 8005cd0:	b538      	push	{r3, r4, r5, lr}
 8005cd2:	2300      	movs	r3, #0
 8005cd4:	4d05      	ldr	r5, [pc, #20]	; (8005cec <_sbrk_r+0x1c>)
 8005cd6:	4604      	mov	r4, r0
 8005cd8:	4608      	mov	r0, r1
 8005cda:	602b      	str	r3, [r5, #0]
 8005cdc:	f7fb f9aa 	bl	8001034 <_sbrk>
 8005ce0:	1c43      	adds	r3, r0, #1
 8005ce2:	d102      	bne.n	8005cea <_sbrk_r+0x1a>
 8005ce4:	682b      	ldr	r3, [r5, #0]
 8005ce6:	b103      	cbz	r3, 8005cea <_sbrk_r+0x1a>
 8005ce8:	6023      	str	r3, [r4, #0]
 8005cea:	bd38      	pop	{r3, r4, r5, pc}
 8005cec:	2000020c 	.word	0x2000020c

08005cf0 <strncmp>:
 8005cf0:	4603      	mov	r3, r0
 8005cf2:	b510      	push	{r4, lr}
 8005cf4:	b172      	cbz	r2, 8005d14 <strncmp+0x24>
 8005cf6:	3901      	subs	r1, #1
 8005cf8:	1884      	adds	r4, r0, r2
 8005cfa:	f813 0b01 	ldrb.w	r0, [r3], #1
 8005cfe:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8005d02:	4290      	cmp	r0, r2
 8005d04:	d101      	bne.n	8005d0a <strncmp+0x1a>
 8005d06:	42a3      	cmp	r3, r4
 8005d08:	d101      	bne.n	8005d0e <strncmp+0x1e>
 8005d0a:	1a80      	subs	r0, r0, r2
 8005d0c:	bd10      	pop	{r4, pc}
 8005d0e:	2800      	cmp	r0, #0
 8005d10:	d1f3      	bne.n	8005cfa <strncmp+0xa>
 8005d12:	e7fa      	b.n	8005d0a <strncmp+0x1a>
 8005d14:	4610      	mov	r0, r2
 8005d16:	e7f9      	b.n	8005d0c <strncmp+0x1c>

08005d18 <__ascii_wctomb>:
 8005d18:	4603      	mov	r3, r0
 8005d1a:	4608      	mov	r0, r1
 8005d1c:	b141      	cbz	r1, 8005d30 <__ascii_wctomb+0x18>
 8005d1e:	2aff      	cmp	r2, #255	; 0xff
 8005d20:	d904      	bls.n	8005d2c <__ascii_wctomb+0x14>
 8005d22:	228a      	movs	r2, #138	; 0x8a
 8005d24:	f04f 30ff 	mov.w	r0, #4294967295
 8005d28:	601a      	str	r2, [r3, #0]
 8005d2a:	4770      	bx	lr
 8005d2c:	2001      	movs	r0, #1
 8005d2e:	700a      	strb	r2, [r1, #0]
 8005d30:	4770      	bx	lr
	...

08005d34 <__assert_func>:
 8005d34:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005d36:	4614      	mov	r4, r2
 8005d38:	461a      	mov	r2, r3
 8005d3a:	4b09      	ldr	r3, [pc, #36]	; (8005d60 <__assert_func+0x2c>)
 8005d3c:	4605      	mov	r5, r0
 8005d3e:	681b      	ldr	r3, [r3, #0]
 8005d40:	68d8      	ldr	r0, [r3, #12]
 8005d42:	b14c      	cbz	r4, 8005d58 <__assert_func+0x24>
 8005d44:	4b07      	ldr	r3, [pc, #28]	; (8005d64 <__assert_func+0x30>)
 8005d46:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005d4a:	9100      	str	r1, [sp, #0]
 8005d4c:	462b      	mov	r3, r5
 8005d4e:	4906      	ldr	r1, [pc, #24]	; (8005d68 <__assert_func+0x34>)
 8005d50:	f000 f80e 	bl	8005d70 <fiprintf>
 8005d54:	f000 fa8a 	bl	800626c <abort>
 8005d58:	4b04      	ldr	r3, [pc, #16]	; (8005d6c <__assert_func+0x38>)
 8005d5a:	461c      	mov	r4, r3
 8005d5c:	e7f3      	b.n	8005d46 <__assert_func+0x12>
 8005d5e:	bf00      	nop
 8005d60:	2000000c 	.word	0x2000000c
 8005d64:	08006ce5 	.word	0x08006ce5
 8005d68:	08006cf2 	.word	0x08006cf2
 8005d6c:	08006d20 	.word	0x08006d20

08005d70 <fiprintf>:
 8005d70:	b40e      	push	{r1, r2, r3}
 8005d72:	b503      	push	{r0, r1, lr}
 8005d74:	4601      	mov	r1, r0
 8005d76:	ab03      	add	r3, sp, #12
 8005d78:	4805      	ldr	r0, [pc, #20]	; (8005d90 <fiprintf+0x20>)
 8005d7a:	f853 2b04 	ldr.w	r2, [r3], #4
 8005d7e:	6800      	ldr	r0, [r0, #0]
 8005d80:	9301      	str	r3, [sp, #4]
 8005d82:	f000 f883 	bl	8005e8c <_vfiprintf_r>
 8005d86:	b002      	add	sp, #8
 8005d88:	f85d eb04 	ldr.w	lr, [sp], #4
 8005d8c:	b003      	add	sp, #12
 8005d8e:	4770      	bx	lr
 8005d90:	2000000c 	.word	0x2000000c

08005d94 <memmove>:
 8005d94:	4288      	cmp	r0, r1
 8005d96:	b510      	push	{r4, lr}
 8005d98:	eb01 0402 	add.w	r4, r1, r2
 8005d9c:	d902      	bls.n	8005da4 <memmove+0x10>
 8005d9e:	4284      	cmp	r4, r0
 8005da0:	4623      	mov	r3, r4
 8005da2:	d807      	bhi.n	8005db4 <memmove+0x20>
 8005da4:	1e43      	subs	r3, r0, #1
 8005da6:	42a1      	cmp	r1, r4
 8005da8:	d008      	beq.n	8005dbc <memmove+0x28>
 8005daa:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005dae:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005db2:	e7f8      	b.n	8005da6 <memmove+0x12>
 8005db4:	4601      	mov	r1, r0
 8005db6:	4402      	add	r2, r0
 8005db8:	428a      	cmp	r2, r1
 8005dba:	d100      	bne.n	8005dbe <memmove+0x2a>
 8005dbc:	bd10      	pop	{r4, pc}
 8005dbe:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005dc2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005dc6:	e7f7      	b.n	8005db8 <memmove+0x24>

08005dc8 <__malloc_lock>:
 8005dc8:	4801      	ldr	r0, [pc, #4]	; (8005dd0 <__malloc_lock+0x8>)
 8005dca:	f000 bc0b 	b.w	80065e4 <__retarget_lock_acquire_recursive>
 8005dce:	bf00      	nop
 8005dd0:	20000210 	.word	0x20000210

08005dd4 <__malloc_unlock>:
 8005dd4:	4801      	ldr	r0, [pc, #4]	; (8005ddc <__malloc_unlock+0x8>)
 8005dd6:	f000 bc06 	b.w	80065e6 <__retarget_lock_release_recursive>
 8005dda:	bf00      	nop
 8005ddc:	20000210 	.word	0x20000210

08005de0 <_realloc_r>:
 8005de0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005de4:	4680      	mov	r8, r0
 8005de6:	4614      	mov	r4, r2
 8005de8:	460e      	mov	r6, r1
 8005dea:	b921      	cbnz	r1, 8005df6 <_realloc_r+0x16>
 8005dec:	4611      	mov	r1, r2
 8005dee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005df2:	f7ff bd97 	b.w	8005924 <_malloc_r>
 8005df6:	b92a      	cbnz	r2, 8005e04 <_realloc_r+0x24>
 8005df8:	f7ff fd2c 	bl	8005854 <_free_r>
 8005dfc:	4625      	mov	r5, r4
 8005dfe:	4628      	mov	r0, r5
 8005e00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005e04:	f000 fc56 	bl	80066b4 <_malloc_usable_size_r>
 8005e08:	4284      	cmp	r4, r0
 8005e0a:	4607      	mov	r7, r0
 8005e0c:	d802      	bhi.n	8005e14 <_realloc_r+0x34>
 8005e0e:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8005e12:	d812      	bhi.n	8005e3a <_realloc_r+0x5a>
 8005e14:	4621      	mov	r1, r4
 8005e16:	4640      	mov	r0, r8
 8005e18:	f7ff fd84 	bl	8005924 <_malloc_r>
 8005e1c:	4605      	mov	r5, r0
 8005e1e:	2800      	cmp	r0, #0
 8005e20:	d0ed      	beq.n	8005dfe <_realloc_r+0x1e>
 8005e22:	42bc      	cmp	r4, r7
 8005e24:	4622      	mov	r2, r4
 8005e26:	4631      	mov	r1, r6
 8005e28:	bf28      	it	cs
 8005e2a:	463a      	movcs	r2, r7
 8005e2c:	f7ff f838 	bl	8004ea0 <memcpy>
 8005e30:	4631      	mov	r1, r6
 8005e32:	4640      	mov	r0, r8
 8005e34:	f7ff fd0e 	bl	8005854 <_free_r>
 8005e38:	e7e1      	b.n	8005dfe <_realloc_r+0x1e>
 8005e3a:	4635      	mov	r5, r6
 8005e3c:	e7df      	b.n	8005dfe <_realloc_r+0x1e>

08005e3e <__sfputc_r>:
 8005e3e:	6893      	ldr	r3, [r2, #8]
 8005e40:	b410      	push	{r4}
 8005e42:	3b01      	subs	r3, #1
 8005e44:	2b00      	cmp	r3, #0
 8005e46:	6093      	str	r3, [r2, #8]
 8005e48:	da07      	bge.n	8005e5a <__sfputc_r+0x1c>
 8005e4a:	6994      	ldr	r4, [r2, #24]
 8005e4c:	42a3      	cmp	r3, r4
 8005e4e:	db01      	blt.n	8005e54 <__sfputc_r+0x16>
 8005e50:	290a      	cmp	r1, #10
 8005e52:	d102      	bne.n	8005e5a <__sfputc_r+0x1c>
 8005e54:	bc10      	pop	{r4}
 8005e56:	f000 b949 	b.w	80060ec <__swbuf_r>
 8005e5a:	6813      	ldr	r3, [r2, #0]
 8005e5c:	1c58      	adds	r0, r3, #1
 8005e5e:	6010      	str	r0, [r2, #0]
 8005e60:	7019      	strb	r1, [r3, #0]
 8005e62:	4608      	mov	r0, r1
 8005e64:	bc10      	pop	{r4}
 8005e66:	4770      	bx	lr

08005e68 <__sfputs_r>:
 8005e68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005e6a:	4606      	mov	r6, r0
 8005e6c:	460f      	mov	r7, r1
 8005e6e:	4614      	mov	r4, r2
 8005e70:	18d5      	adds	r5, r2, r3
 8005e72:	42ac      	cmp	r4, r5
 8005e74:	d101      	bne.n	8005e7a <__sfputs_r+0x12>
 8005e76:	2000      	movs	r0, #0
 8005e78:	e007      	b.n	8005e8a <__sfputs_r+0x22>
 8005e7a:	463a      	mov	r2, r7
 8005e7c:	4630      	mov	r0, r6
 8005e7e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005e82:	f7ff ffdc 	bl	8005e3e <__sfputc_r>
 8005e86:	1c43      	adds	r3, r0, #1
 8005e88:	d1f3      	bne.n	8005e72 <__sfputs_r+0xa>
 8005e8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08005e8c <_vfiprintf_r>:
 8005e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005e90:	460d      	mov	r5, r1
 8005e92:	4614      	mov	r4, r2
 8005e94:	4698      	mov	r8, r3
 8005e96:	4606      	mov	r6, r0
 8005e98:	b09d      	sub	sp, #116	; 0x74
 8005e9a:	b118      	cbz	r0, 8005ea4 <_vfiprintf_r+0x18>
 8005e9c:	6983      	ldr	r3, [r0, #24]
 8005e9e:	b90b      	cbnz	r3, 8005ea4 <_vfiprintf_r+0x18>
 8005ea0:	f000 fb02 	bl	80064a8 <__sinit>
 8005ea4:	4b89      	ldr	r3, [pc, #548]	; (80060cc <_vfiprintf_r+0x240>)
 8005ea6:	429d      	cmp	r5, r3
 8005ea8:	d11b      	bne.n	8005ee2 <_vfiprintf_r+0x56>
 8005eaa:	6875      	ldr	r5, [r6, #4]
 8005eac:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005eae:	07d9      	lsls	r1, r3, #31
 8005eb0:	d405      	bmi.n	8005ebe <_vfiprintf_r+0x32>
 8005eb2:	89ab      	ldrh	r3, [r5, #12]
 8005eb4:	059a      	lsls	r2, r3, #22
 8005eb6:	d402      	bmi.n	8005ebe <_vfiprintf_r+0x32>
 8005eb8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005eba:	f000 fb93 	bl	80065e4 <__retarget_lock_acquire_recursive>
 8005ebe:	89ab      	ldrh	r3, [r5, #12]
 8005ec0:	071b      	lsls	r3, r3, #28
 8005ec2:	d501      	bpl.n	8005ec8 <_vfiprintf_r+0x3c>
 8005ec4:	692b      	ldr	r3, [r5, #16]
 8005ec6:	b9eb      	cbnz	r3, 8005f04 <_vfiprintf_r+0x78>
 8005ec8:	4629      	mov	r1, r5
 8005eca:	4630      	mov	r0, r6
 8005ecc:	f000 f960 	bl	8006190 <__swsetup_r>
 8005ed0:	b1c0      	cbz	r0, 8005f04 <_vfiprintf_r+0x78>
 8005ed2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005ed4:	07dc      	lsls	r4, r3, #31
 8005ed6:	d50e      	bpl.n	8005ef6 <_vfiprintf_r+0x6a>
 8005ed8:	f04f 30ff 	mov.w	r0, #4294967295
 8005edc:	b01d      	add	sp, #116	; 0x74
 8005ede:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005ee2:	4b7b      	ldr	r3, [pc, #492]	; (80060d0 <_vfiprintf_r+0x244>)
 8005ee4:	429d      	cmp	r5, r3
 8005ee6:	d101      	bne.n	8005eec <_vfiprintf_r+0x60>
 8005ee8:	68b5      	ldr	r5, [r6, #8]
 8005eea:	e7df      	b.n	8005eac <_vfiprintf_r+0x20>
 8005eec:	4b79      	ldr	r3, [pc, #484]	; (80060d4 <_vfiprintf_r+0x248>)
 8005eee:	429d      	cmp	r5, r3
 8005ef0:	bf08      	it	eq
 8005ef2:	68f5      	ldreq	r5, [r6, #12]
 8005ef4:	e7da      	b.n	8005eac <_vfiprintf_r+0x20>
 8005ef6:	89ab      	ldrh	r3, [r5, #12]
 8005ef8:	0598      	lsls	r0, r3, #22
 8005efa:	d4ed      	bmi.n	8005ed8 <_vfiprintf_r+0x4c>
 8005efc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005efe:	f000 fb72 	bl	80065e6 <__retarget_lock_release_recursive>
 8005f02:	e7e9      	b.n	8005ed8 <_vfiprintf_r+0x4c>
 8005f04:	2300      	movs	r3, #0
 8005f06:	9309      	str	r3, [sp, #36]	; 0x24
 8005f08:	2320      	movs	r3, #32
 8005f0a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005f0e:	2330      	movs	r3, #48	; 0x30
 8005f10:	f04f 0901 	mov.w	r9, #1
 8005f14:	f8cd 800c 	str.w	r8, [sp, #12]
 8005f18:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 80060d8 <_vfiprintf_r+0x24c>
 8005f1c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005f20:	4623      	mov	r3, r4
 8005f22:	469a      	mov	sl, r3
 8005f24:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005f28:	b10a      	cbz	r2, 8005f2e <_vfiprintf_r+0xa2>
 8005f2a:	2a25      	cmp	r2, #37	; 0x25
 8005f2c:	d1f9      	bne.n	8005f22 <_vfiprintf_r+0x96>
 8005f2e:	ebba 0b04 	subs.w	fp, sl, r4
 8005f32:	d00b      	beq.n	8005f4c <_vfiprintf_r+0xc0>
 8005f34:	465b      	mov	r3, fp
 8005f36:	4622      	mov	r2, r4
 8005f38:	4629      	mov	r1, r5
 8005f3a:	4630      	mov	r0, r6
 8005f3c:	f7ff ff94 	bl	8005e68 <__sfputs_r>
 8005f40:	3001      	adds	r0, #1
 8005f42:	f000 80aa 	beq.w	800609a <_vfiprintf_r+0x20e>
 8005f46:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005f48:	445a      	add	r2, fp
 8005f4a:	9209      	str	r2, [sp, #36]	; 0x24
 8005f4c:	f89a 3000 	ldrb.w	r3, [sl]
 8005f50:	2b00      	cmp	r3, #0
 8005f52:	f000 80a2 	beq.w	800609a <_vfiprintf_r+0x20e>
 8005f56:	2300      	movs	r3, #0
 8005f58:	f04f 32ff 	mov.w	r2, #4294967295
 8005f5c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005f60:	f10a 0a01 	add.w	sl, sl, #1
 8005f64:	9304      	str	r3, [sp, #16]
 8005f66:	9307      	str	r3, [sp, #28]
 8005f68:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005f6c:	931a      	str	r3, [sp, #104]	; 0x68
 8005f6e:	4654      	mov	r4, sl
 8005f70:	2205      	movs	r2, #5
 8005f72:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005f76:	4858      	ldr	r0, [pc, #352]	; (80060d8 <_vfiprintf_r+0x24c>)
 8005f78:	f7fe ff84 	bl	8004e84 <memchr>
 8005f7c:	9a04      	ldr	r2, [sp, #16]
 8005f7e:	b9d8      	cbnz	r0, 8005fb8 <_vfiprintf_r+0x12c>
 8005f80:	06d1      	lsls	r1, r2, #27
 8005f82:	bf44      	itt	mi
 8005f84:	2320      	movmi	r3, #32
 8005f86:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005f8a:	0713      	lsls	r3, r2, #28
 8005f8c:	bf44      	itt	mi
 8005f8e:	232b      	movmi	r3, #43	; 0x2b
 8005f90:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005f94:	f89a 3000 	ldrb.w	r3, [sl]
 8005f98:	2b2a      	cmp	r3, #42	; 0x2a
 8005f9a:	d015      	beq.n	8005fc8 <_vfiprintf_r+0x13c>
 8005f9c:	4654      	mov	r4, sl
 8005f9e:	2000      	movs	r0, #0
 8005fa0:	f04f 0c0a 	mov.w	ip, #10
 8005fa4:	9a07      	ldr	r2, [sp, #28]
 8005fa6:	4621      	mov	r1, r4
 8005fa8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005fac:	3b30      	subs	r3, #48	; 0x30
 8005fae:	2b09      	cmp	r3, #9
 8005fb0:	d94e      	bls.n	8006050 <_vfiprintf_r+0x1c4>
 8005fb2:	b1b0      	cbz	r0, 8005fe2 <_vfiprintf_r+0x156>
 8005fb4:	9207      	str	r2, [sp, #28]
 8005fb6:	e014      	b.n	8005fe2 <_vfiprintf_r+0x156>
 8005fb8:	eba0 0308 	sub.w	r3, r0, r8
 8005fbc:	fa09 f303 	lsl.w	r3, r9, r3
 8005fc0:	4313      	orrs	r3, r2
 8005fc2:	46a2      	mov	sl, r4
 8005fc4:	9304      	str	r3, [sp, #16]
 8005fc6:	e7d2      	b.n	8005f6e <_vfiprintf_r+0xe2>
 8005fc8:	9b03      	ldr	r3, [sp, #12]
 8005fca:	1d19      	adds	r1, r3, #4
 8005fcc:	681b      	ldr	r3, [r3, #0]
 8005fce:	9103      	str	r1, [sp, #12]
 8005fd0:	2b00      	cmp	r3, #0
 8005fd2:	bfbb      	ittet	lt
 8005fd4:	425b      	neglt	r3, r3
 8005fd6:	f042 0202 	orrlt.w	r2, r2, #2
 8005fda:	9307      	strge	r3, [sp, #28]
 8005fdc:	9307      	strlt	r3, [sp, #28]
 8005fde:	bfb8      	it	lt
 8005fe0:	9204      	strlt	r2, [sp, #16]
 8005fe2:	7823      	ldrb	r3, [r4, #0]
 8005fe4:	2b2e      	cmp	r3, #46	; 0x2e
 8005fe6:	d10c      	bne.n	8006002 <_vfiprintf_r+0x176>
 8005fe8:	7863      	ldrb	r3, [r4, #1]
 8005fea:	2b2a      	cmp	r3, #42	; 0x2a
 8005fec:	d135      	bne.n	800605a <_vfiprintf_r+0x1ce>
 8005fee:	9b03      	ldr	r3, [sp, #12]
 8005ff0:	3402      	adds	r4, #2
 8005ff2:	1d1a      	adds	r2, r3, #4
 8005ff4:	681b      	ldr	r3, [r3, #0]
 8005ff6:	9203      	str	r2, [sp, #12]
 8005ff8:	2b00      	cmp	r3, #0
 8005ffa:	bfb8      	it	lt
 8005ffc:	f04f 33ff 	movlt.w	r3, #4294967295
 8006000:	9305      	str	r3, [sp, #20]
 8006002:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 80060dc <_vfiprintf_r+0x250>
 8006006:	2203      	movs	r2, #3
 8006008:	4650      	mov	r0, sl
 800600a:	7821      	ldrb	r1, [r4, #0]
 800600c:	f7fe ff3a 	bl	8004e84 <memchr>
 8006010:	b140      	cbz	r0, 8006024 <_vfiprintf_r+0x198>
 8006012:	2340      	movs	r3, #64	; 0x40
 8006014:	eba0 000a 	sub.w	r0, r0, sl
 8006018:	fa03 f000 	lsl.w	r0, r3, r0
 800601c:	9b04      	ldr	r3, [sp, #16]
 800601e:	3401      	adds	r4, #1
 8006020:	4303      	orrs	r3, r0
 8006022:	9304      	str	r3, [sp, #16]
 8006024:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006028:	2206      	movs	r2, #6
 800602a:	482d      	ldr	r0, [pc, #180]	; (80060e0 <_vfiprintf_r+0x254>)
 800602c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006030:	f7fe ff28 	bl	8004e84 <memchr>
 8006034:	2800      	cmp	r0, #0
 8006036:	d03f      	beq.n	80060b8 <_vfiprintf_r+0x22c>
 8006038:	4b2a      	ldr	r3, [pc, #168]	; (80060e4 <_vfiprintf_r+0x258>)
 800603a:	bb1b      	cbnz	r3, 8006084 <_vfiprintf_r+0x1f8>
 800603c:	9b03      	ldr	r3, [sp, #12]
 800603e:	3307      	adds	r3, #7
 8006040:	f023 0307 	bic.w	r3, r3, #7
 8006044:	3308      	adds	r3, #8
 8006046:	9303      	str	r3, [sp, #12]
 8006048:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800604a:	443b      	add	r3, r7
 800604c:	9309      	str	r3, [sp, #36]	; 0x24
 800604e:	e767      	b.n	8005f20 <_vfiprintf_r+0x94>
 8006050:	460c      	mov	r4, r1
 8006052:	2001      	movs	r0, #1
 8006054:	fb0c 3202 	mla	r2, ip, r2, r3
 8006058:	e7a5      	b.n	8005fa6 <_vfiprintf_r+0x11a>
 800605a:	2300      	movs	r3, #0
 800605c:	f04f 0c0a 	mov.w	ip, #10
 8006060:	4619      	mov	r1, r3
 8006062:	3401      	adds	r4, #1
 8006064:	9305      	str	r3, [sp, #20]
 8006066:	4620      	mov	r0, r4
 8006068:	f810 2b01 	ldrb.w	r2, [r0], #1
 800606c:	3a30      	subs	r2, #48	; 0x30
 800606e:	2a09      	cmp	r2, #9
 8006070:	d903      	bls.n	800607a <_vfiprintf_r+0x1ee>
 8006072:	2b00      	cmp	r3, #0
 8006074:	d0c5      	beq.n	8006002 <_vfiprintf_r+0x176>
 8006076:	9105      	str	r1, [sp, #20]
 8006078:	e7c3      	b.n	8006002 <_vfiprintf_r+0x176>
 800607a:	4604      	mov	r4, r0
 800607c:	2301      	movs	r3, #1
 800607e:	fb0c 2101 	mla	r1, ip, r1, r2
 8006082:	e7f0      	b.n	8006066 <_vfiprintf_r+0x1da>
 8006084:	ab03      	add	r3, sp, #12
 8006086:	9300      	str	r3, [sp, #0]
 8006088:	462a      	mov	r2, r5
 800608a:	4630      	mov	r0, r6
 800608c:	4b16      	ldr	r3, [pc, #88]	; (80060e8 <_vfiprintf_r+0x25c>)
 800608e:	a904      	add	r1, sp, #16
 8006090:	f7fc f876 	bl	8002180 <_printf_float>
 8006094:	4607      	mov	r7, r0
 8006096:	1c78      	adds	r0, r7, #1
 8006098:	d1d6      	bne.n	8006048 <_vfiprintf_r+0x1bc>
 800609a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800609c:	07d9      	lsls	r1, r3, #31
 800609e:	d405      	bmi.n	80060ac <_vfiprintf_r+0x220>
 80060a0:	89ab      	ldrh	r3, [r5, #12]
 80060a2:	059a      	lsls	r2, r3, #22
 80060a4:	d402      	bmi.n	80060ac <_vfiprintf_r+0x220>
 80060a6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80060a8:	f000 fa9d 	bl	80065e6 <__retarget_lock_release_recursive>
 80060ac:	89ab      	ldrh	r3, [r5, #12]
 80060ae:	065b      	lsls	r3, r3, #25
 80060b0:	f53f af12 	bmi.w	8005ed8 <_vfiprintf_r+0x4c>
 80060b4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80060b6:	e711      	b.n	8005edc <_vfiprintf_r+0x50>
 80060b8:	ab03      	add	r3, sp, #12
 80060ba:	9300      	str	r3, [sp, #0]
 80060bc:	462a      	mov	r2, r5
 80060be:	4630      	mov	r0, r6
 80060c0:	4b09      	ldr	r3, [pc, #36]	; (80060e8 <_vfiprintf_r+0x25c>)
 80060c2:	a904      	add	r1, sp, #16
 80060c4:	f7fc faf8 	bl	80026b8 <_printf_i>
 80060c8:	e7e4      	b.n	8006094 <_vfiprintf_r+0x208>
 80060ca:	bf00      	nop
 80060cc:	08006d44 	.word	0x08006d44
 80060d0:	08006d64 	.word	0x08006d64
 80060d4:	08006d24 	.word	0x08006d24
 80060d8:	08006cd4 	.word	0x08006cd4
 80060dc:	08006cda 	.word	0x08006cda
 80060e0:	08006cde 	.word	0x08006cde
 80060e4:	08002181 	.word	0x08002181
 80060e8:	08005e69 	.word	0x08005e69

080060ec <__swbuf_r>:
 80060ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80060ee:	460e      	mov	r6, r1
 80060f0:	4614      	mov	r4, r2
 80060f2:	4605      	mov	r5, r0
 80060f4:	b118      	cbz	r0, 80060fe <__swbuf_r+0x12>
 80060f6:	6983      	ldr	r3, [r0, #24]
 80060f8:	b90b      	cbnz	r3, 80060fe <__swbuf_r+0x12>
 80060fa:	f000 f9d5 	bl	80064a8 <__sinit>
 80060fe:	4b21      	ldr	r3, [pc, #132]	; (8006184 <__swbuf_r+0x98>)
 8006100:	429c      	cmp	r4, r3
 8006102:	d12b      	bne.n	800615c <__swbuf_r+0x70>
 8006104:	686c      	ldr	r4, [r5, #4]
 8006106:	69a3      	ldr	r3, [r4, #24]
 8006108:	60a3      	str	r3, [r4, #8]
 800610a:	89a3      	ldrh	r3, [r4, #12]
 800610c:	071a      	lsls	r2, r3, #28
 800610e:	d52f      	bpl.n	8006170 <__swbuf_r+0x84>
 8006110:	6923      	ldr	r3, [r4, #16]
 8006112:	b36b      	cbz	r3, 8006170 <__swbuf_r+0x84>
 8006114:	6923      	ldr	r3, [r4, #16]
 8006116:	6820      	ldr	r0, [r4, #0]
 8006118:	b2f6      	uxtb	r6, r6
 800611a:	1ac0      	subs	r0, r0, r3
 800611c:	6963      	ldr	r3, [r4, #20]
 800611e:	4637      	mov	r7, r6
 8006120:	4283      	cmp	r3, r0
 8006122:	dc04      	bgt.n	800612e <__swbuf_r+0x42>
 8006124:	4621      	mov	r1, r4
 8006126:	4628      	mov	r0, r5
 8006128:	f000 f92a 	bl	8006380 <_fflush_r>
 800612c:	bb30      	cbnz	r0, 800617c <__swbuf_r+0x90>
 800612e:	68a3      	ldr	r3, [r4, #8]
 8006130:	3001      	adds	r0, #1
 8006132:	3b01      	subs	r3, #1
 8006134:	60a3      	str	r3, [r4, #8]
 8006136:	6823      	ldr	r3, [r4, #0]
 8006138:	1c5a      	adds	r2, r3, #1
 800613a:	6022      	str	r2, [r4, #0]
 800613c:	701e      	strb	r6, [r3, #0]
 800613e:	6963      	ldr	r3, [r4, #20]
 8006140:	4283      	cmp	r3, r0
 8006142:	d004      	beq.n	800614e <__swbuf_r+0x62>
 8006144:	89a3      	ldrh	r3, [r4, #12]
 8006146:	07db      	lsls	r3, r3, #31
 8006148:	d506      	bpl.n	8006158 <__swbuf_r+0x6c>
 800614a:	2e0a      	cmp	r6, #10
 800614c:	d104      	bne.n	8006158 <__swbuf_r+0x6c>
 800614e:	4621      	mov	r1, r4
 8006150:	4628      	mov	r0, r5
 8006152:	f000 f915 	bl	8006380 <_fflush_r>
 8006156:	b988      	cbnz	r0, 800617c <__swbuf_r+0x90>
 8006158:	4638      	mov	r0, r7
 800615a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800615c:	4b0a      	ldr	r3, [pc, #40]	; (8006188 <__swbuf_r+0x9c>)
 800615e:	429c      	cmp	r4, r3
 8006160:	d101      	bne.n	8006166 <__swbuf_r+0x7a>
 8006162:	68ac      	ldr	r4, [r5, #8]
 8006164:	e7cf      	b.n	8006106 <__swbuf_r+0x1a>
 8006166:	4b09      	ldr	r3, [pc, #36]	; (800618c <__swbuf_r+0xa0>)
 8006168:	429c      	cmp	r4, r3
 800616a:	bf08      	it	eq
 800616c:	68ec      	ldreq	r4, [r5, #12]
 800616e:	e7ca      	b.n	8006106 <__swbuf_r+0x1a>
 8006170:	4621      	mov	r1, r4
 8006172:	4628      	mov	r0, r5
 8006174:	f000 f80c 	bl	8006190 <__swsetup_r>
 8006178:	2800      	cmp	r0, #0
 800617a:	d0cb      	beq.n	8006114 <__swbuf_r+0x28>
 800617c:	f04f 37ff 	mov.w	r7, #4294967295
 8006180:	e7ea      	b.n	8006158 <__swbuf_r+0x6c>
 8006182:	bf00      	nop
 8006184:	08006d44 	.word	0x08006d44
 8006188:	08006d64 	.word	0x08006d64
 800618c:	08006d24 	.word	0x08006d24

08006190 <__swsetup_r>:
 8006190:	4b32      	ldr	r3, [pc, #200]	; (800625c <__swsetup_r+0xcc>)
 8006192:	b570      	push	{r4, r5, r6, lr}
 8006194:	681d      	ldr	r5, [r3, #0]
 8006196:	4606      	mov	r6, r0
 8006198:	460c      	mov	r4, r1
 800619a:	b125      	cbz	r5, 80061a6 <__swsetup_r+0x16>
 800619c:	69ab      	ldr	r3, [r5, #24]
 800619e:	b913      	cbnz	r3, 80061a6 <__swsetup_r+0x16>
 80061a0:	4628      	mov	r0, r5
 80061a2:	f000 f981 	bl	80064a8 <__sinit>
 80061a6:	4b2e      	ldr	r3, [pc, #184]	; (8006260 <__swsetup_r+0xd0>)
 80061a8:	429c      	cmp	r4, r3
 80061aa:	d10f      	bne.n	80061cc <__swsetup_r+0x3c>
 80061ac:	686c      	ldr	r4, [r5, #4]
 80061ae:	89a3      	ldrh	r3, [r4, #12]
 80061b0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80061b4:	0719      	lsls	r1, r3, #28
 80061b6:	d42c      	bmi.n	8006212 <__swsetup_r+0x82>
 80061b8:	06dd      	lsls	r5, r3, #27
 80061ba:	d411      	bmi.n	80061e0 <__swsetup_r+0x50>
 80061bc:	2309      	movs	r3, #9
 80061be:	6033      	str	r3, [r6, #0]
 80061c0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80061c4:	f04f 30ff 	mov.w	r0, #4294967295
 80061c8:	81a3      	strh	r3, [r4, #12]
 80061ca:	e03e      	b.n	800624a <__swsetup_r+0xba>
 80061cc:	4b25      	ldr	r3, [pc, #148]	; (8006264 <__swsetup_r+0xd4>)
 80061ce:	429c      	cmp	r4, r3
 80061d0:	d101      	bne.n	80061d6 <__swsetup_r+0x46>
 80061d2:	68ac      	ldr	r4, [r5, #8]
 80061d4:	e7eb      	b.n	80061ae <__swsetup_r+0x1e>
 80061d6:	4b24      	ldr	r3, [pc, #144]	; (8006268 <__swsetup_r+0xd8>)
 80061d8:	429c      	cmp	r4, r3
 80061da:	bf08      	it	eq
 80061dc:	68ec      	ldreq	r4, [r5, #12]
 80061de:	e7e6      	b.n	80061ae <__swsetup_r+0x1e>
 80061e0:	0758      	lsls	r0, r3, #29
 80061e2:	d512      	bpl.n	800620a <__swsetup_r+0x7a>
 80061e4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80061e6:	b141      	cbz	r1, 80061fa <__swsetup_r+0x6a>
 80061e8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80061ec:	4299      	cmp	r1, r3
 80061ee:	d002      	beq.n	80061f6 <__swsetup_r+0x66>
 80061f0:	4630      	mov	r0, r6
 80061f2:	f7ff fb2f 	bl	8005854 <_free_r>
 80061f6:	2300      	movs	r3, #0
 80061f8:	6363      	str	r3, [r4, #52]	; 0x34
 80061fa:	89a3      	ldrh	r3, [r4, #12]
 80061fc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8006200:	81a3      	strh	r3, [r4, #12]
 8006202:	2300      	movs	r3, #0
 8006204:	6063      	str	r3, [r4, #4]
 8006206:	6923      	ldr	r3, [r4, #16]
 8006208:	6023      	str	r3, [r4, #0]
 800620a:	89a3      	ldrh	r3, [r4, #12]
 800620c:	f043 0308 	orr.w	r3, r3, #8
 8006210:	81a3      	strh	r3, [r4, #12]
 8006212:	6923      	ldr	r3, [r4, #16]
 8006214:	b94b      	cbnz	r3, 800622a <__swsetup_r+0x9a>
 8006216:	89a3      	ldrh	r3, [r4, #12]
 8006218:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800621c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8006220:	d003      	beq.n	800622a <__swsetup_r+0x9a>
 8006222:	4621      	mov	r1, r4
 8006224:	4630      	mov	r0, r6
 8006226:	f000 fa05 	bl	8006634 <__smakebuf_r>
 800622a:	89a0      	ldrh	r0, [r4, #12]
 800622c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8006230:	f010 0301 	ands.w	r3, r0, #1
 8006234:	d00a      	beq.n	800624c <__swsetup_r+0xbc>
 8006236:	2300      	movs	r3, #0
 8006238:	60a3      	str	r3, [r4, #8]
 800623a:	6963      	ldr	r3, [r4, #20]
 800623c:	425b      	negs	r3, r3
 800623e:	61a3      	str	r3, [r4, #24]
 8006240:	6923      	ldr	r3, [r4, #16]
 8006242:	b943      	cbnz	r3, 8006256 <__swsetup_r+0xc6>
 8006244:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8006248:	d1ba      	bne.n	80061c0 <__swsetup_r+0x30>
 800624a:	bd70      	pop	{r4, r5, r6, pc}
 800624c:	0781      	lsls	r1, r0, #30
 800624e:	bf58      	it	pl
 8006250:	6963      	ldrpl	r3, [r4, #20]
 8006252:	60a3      	str	r3, [r4, #8]
 8006254:	e7f4      	b.n	8006240 <__swsetup_r+0xb0>
 8006256:	2000      	movs	r0, #0
 8006258:	e7f7      	b.n	800624a <__swsetup_r+0xba>
 800625a:	bf00      	nop
 800625c:	2000000c 	.word	0x2000000c
 8006260:	08006d44 	.word	0x08006d44
 8006264:	08006d64 	.word	0x08006d64
 8006268:	08006d24 	.word	0x08006d24

0800626c <abort>:
 800626c:	2006      	movs	r0, #6
 800626e:	b508      	push	{r3, lr}
 8006270:	f000 fa50 	bl	8006714 <raise>
 8006274:	2001      	movs	r0, #1
 8006276:	f7fa fe69 	bl	8000f4c <_exit>
	...

0800627c <__sflush_r>:
 800627c:	898a      	ldrh	r2, [r1, #12]
 800627e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006280:	4605      	mov	r5, r0
 8006282:	0710      	lsls	r0, r2, #28
 8006284:	460c      	mov	r4, r1
 8006286:	d457      	bmi.n	8006338 <__sflush_r+0xbc>
 8006288:	684b      	ldr	r3, [r1, #4]
 800628a:	2b00      	cmp	r3, #0
 800628c:	dc04      	bgt.n	8006298 <__sflush_r+0x1c>
 800628e:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8006290:	2b00      	cmp	r3, #0
 8006292:	dc01      	bgt.n	8006298 <__sflush_r+0x1c>
 8006294:	2000      	movs	r0, #0
 8006296:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006298:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800629a:	2e00      	cmp	r6, #0
 800629c:	d0fa      	beq.n	8006294 <__sflush_r+0x18>
 800629e:	2300      	movs	r3, #0
 80062a0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80062a4:	682f      	ldr	r7, [r5, #0]
 80062a6:	602b      	str	r3, [r5, #0]
 80062a8:	d032      	beq.n	8006310 <__sflush_r+0x94>
 80062aa:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80062ac:	89a3      	ldrh	r3, [r4, #12]
 80062ae:	075a      	lsls	r2, r3, #29
 80062b0:	d505      	bpl.n	80062be <__sflush_r+0x42>
 80062b2:	6863      	ldr	r3, [r4, #4]
 80062b4:	1ac0      	subs	r0, r0, r3
 80062b6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80062b8:	b10b      	cbz	r3, 80062be <__sflush_r+0x42>
 80062ba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80062bc:	1ac0      	subs	r0, r0, r3
 80062be:	2300      	movs	r3, #0
 80062c0:	4602      	mov	r2, r0
 80062c2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80062c4:	4628      	mov	r0, r5
 80062c6:	6a21      	ldr	r1, [r4, #32]
 80062c8:	47b0      	blx	r6
 80062ca:	1c43      	adds	r3, r0, #1
 80062cc:	89a3      	ldrh	r3, [r4, #12]
 80062ce:	d106      	bne.n	80062de <__sflush_r+0x62>
 80062d0:	6829      	ldr	r1, [r5, #0]
 80062d2:	291d      	cmp	r1, #29
 80062d4:	d82c      	bhi.n	8006330 <__sflush_r+0xb4>
 80062d6:	4a29      	ldr	r2, [pc, #164]	; (800637c <__sflush_r+0x100>)
 80062d8:	40ca      	lsrs	r2, r1
 80062da:	07d6      	lsls	r6, r2, #31
 80062dc:	d528      	bpl.n	8006330 <__sflush_r+0xb4>
 80062de:	2200      	movs	r2, #0
 80062e0:	6062      	str	r2, [r4, #4]
 80062e2:	6922      	ldr	r2, [r4, #16]
 80062e4:	04d9      	lsls	r1, r3, #19
 80062e6:	6022      	str	r2, [r4, #0]
 80062e8:	d504      	bpl.n	80062f4 <__sflush_r+0x78>
 80062ea:	1c42      	adds	r2, r0, #1
 80062ec:	d101      	bne.n	80062f2 <__sflush_r+0x76>
 80062ee:	682b      	ldr	r3, [r5, #0]
 80062f0:	b903      	cbnz	r3, 80062f4 <__sflush_r+0x78>
 80062f2:	6560      	str	r0, [r4, #84]	; 0x54
 80062f4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80062f6:	602f      	str	r7, [r5, #0]
 80062f8:	2900      	cmp	r1, #0
 80062fa:	d0cb      	beq.n	8006294 <__sflush_r+0x18>
 80062fc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006300:	4299      	cmp	r1, r3
 8006302:	d002      	beq.n	800630a <__sflush_r+0x8e>
 8006304:	4628      	mov	r0, r5
 8006306:	f7ff faa5 	bl	8005854 <_free_r>
 800630a:	2000      	movs	r0, #0
 800630c:	6360      	str	r0, [r4, #52]	; 0x34
 800630e:	e7c2      	b.n	8006296 <__sflush_r+0x1a>
 8006310:	6a21      	ldr	r1, [r4, #32]
 8006312:	2301      	movs	r3, #1
 8006314:	4628      	mov	r0, r5
 8006316:	47b0      	blx	r6
 8006318:	1c41      	adds	r1, r0, #1
 800631a:	d1c7      	bne.n	80062ac <__sflush_r+0x30>
 800631c:	682b      	ldr	r3, [r5, #0]
 800631e:	2b00      	cmp	r3, #0
 8006320:	d0c4      	beq.n	80062ac <__sflush_r+0x30>
 8006322:	2b1d      	cmp	r3, #29
 8006324:	d001      	beq.n	800632a <__sflush_r+0xae>
 8006326:	2b16      	cmp	r3, #22
 8006328:	d101      	bne.n	800632e <__sflush_r+0xb2>
 800632a:	602f      	str	r7, [r5, #0]
 800632c:	e7b2      	b.n	8006294 <__sflush_r+0x18>
 800632e:	89a3      	ldrh	r3, [r4, #12]
 8006330:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006334:	81a3      	strh	r3, [r4, #12]
 8006336:	e7ae      	b.n	8006296 <__sflush_r+0x1a>
 8006338:	690f      	ldr	r7, [r1, #16]
 800633a:	2f00      	cmp	r7, #0
 800633c:	d0aa      	beq.n	8006294 <__sflush_r+0x18>
 800633e:	0793      	lsls	r3, r2, #30
 8006340:	bf18      	it	ne
 8006342:	2300      	movne	r3, #0
 8006344:	680e      	ldr	r6, [r1, #0]
 8006346:	bf08      	it	eq
 8006348:	694b      	ldreq	r3, [r1, #20]
 800634a:	1bf6      	subs	r6, r6, r7
 800634c:	600f      	str	r7, [r1, #0]
 800634e:	608b      	str	r3, [r1, #8]
 8006350:	2e00      	cmp	r6, #0
 8006352:	dd9f      	ble.n	8006294 <__sflush_r+0x18>
 8006354:	4633      	mov	r3, r6
 8006356:	463a      	mov	r2, r7
 8006358:	4628      	mov	r0, r5
 800635a:	6a21      	ldr	r1, [r4, #32]
 800635c:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8006360:	47e0      	blx	ip
 8006362:	2800      	cmp	r0, #0
 8006364:	dc06      	bgt.n	8006374 <__sflush_r+0xf8>
 8006366:	89a3      	ldrh	r3, [r4, #12]
 8006368:	f04f 30ff 	mov.w	r0, #4294967295
 800636c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006370:	81a3      	strh	r3, [r4, #12]
 8006372:	e790      	b.n	8006296 <__sflush_r+0x1a>
 8006374:	4407      	add	r7, r0
 8006376:	1a36      	subs	r6, r6, r0
 8006378:	e7ea      	b.n	8006350 <__sflush_r+0xd4>
 800637a:	bf00      	nop
 800637c:	20400001 	.word	0x20400001

08006380 <_fflush_r>:
 8006380:	b538      	push	{r3, r4, r5, lr}
 8006382:	690b      	ldr	r3, [r1, #16]
 8006384:	4605      	mov	r5, r0
 8006386:	460c      	mov	r4, r1
 8006388:	b913      	cbnz	r3, 8006390 <_fflush_r+0x10>
 800638a:	2500      	movs	r5, #0
 800638c:	4628      	mov	r0, r5
 800638e:	bd38      	pop	{r3, r4, r5, pc}
 8006390:	b118      	cbz	r0, 800639a <_fflush_r+0x1a>
 8006392:	6983      	ldr	r3, [r0, #24]
 8006394:	b90b      	cbnz	r3, 800639a <_fflush_r+0x1a>
 8006396:	f000 f887 	bl	80064a8 <__sinit>
 800639a:	4b14      	ldr	r3, [pc, #80]	; (80063ec <_fflush_r+0x6c>)
 800639c:	429c      	cmp	r4, r3
 800639e:	d11b      	bne.n	80063d8 <_fflush_r+0x58>
 80063a0:	686c      	ldr	r4, [r5, #4]
 80063a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80063a6:	2b00      	cmp	r3, #0
 80063a8:	d0ef      	beq.n	800638a <_fflush_r+0xa>
 80063aa:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80063ac:	07d0      	lsls	r0, r2, #31
 80063ae:	d404      	bmi.n	80063ba <_fflush_r+0x3a>
 80063b0:	0599      	lsls	r1, r3, #22
 80063b2:	d402      	bmi.n	80063ba <_fflush_r+0x3a>
 80063b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80063b6:	f000 f915 	bl	80065e4 <__retarget_lock_acquire_recursive>
 80063ba:	4628      	mov	r0, r5
 80063bc:	4621      	mov	r1, r4
 80063be:	f7ff ff5d 	bl	800627c <__sflush_r>
 80063c2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80063c4:	4605      	mov	r5, r0
 80063c6:	07da      	lsls	r2, r3, #31
 80063c8:	d4e0      	bmi.n	800638c <_fflush_r+0xc>
 80063ca:	89a3      	ldrh	r3, [r4, #12]
 80063cc:	059b      	lsls	r3, r3, #22
 80063ce:	d4dd      	bmi.n	800638c <_fflush_r+0xc>
 80063d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80063d2:	f000 f908 	bl	80065e6 <__retarget_lock_release_recursive>
 80063d6:	e7d9      	b.n	800638c <_fflush_r+0xc>
 80063d8:	4b05      	ldr	r3, [pc, #20]	; (80063f0 <_fflush_r+0x70>)
 80063da:	429c      	cmp	r4, r3
 80063dc:	d101      	bne.n	80063e2 <_fflush_r+0x62>
 80063de:	68ac      	ldr	r4, [r5, #8]
 80063e0:	e7df      	b.n	80063a2 <_fflush_r+0x22>
 80063e2:	4b04      	ldr	r3, [pc, #16]	; (80063f4 <_fflush_r+0x74>)
 80063e4:	429c      	cmp	r4, r3
 80063e6:	bf08      	it	eq
 80063e8:	68ec      	ldreq	r4, [r5, #12]
 80063ea:	e7da      	b.n	80063a2 <_fflush_r+0x22>
 80063ec:	08006d44 	.word	0x08006d44
 80063f0:	08006d64 	.word	0x08006d64
 80063f4:	08006d24 	.word	0x08006d24

080063f8 <std>:
 80063f8:	2300      	movs	r3, #0
 80063fa:	b510      	push	{r4, lr}
 80063fc:	4604      	mov	r4, r0
 80063fe:	e9c0 3300 	strd	r3, r3, [r0]
 8006402:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006406:	6083      	str	r3, [r0, #8]
 8006408:	8181      	strh	r1, [r0, #12]
 800640a:	6643      	str	r3, [r0, #100]	; 0x64
 800640c:	81c2      	strh	r2, [r0, #14]
 800640e:	6183      	str	r3, [r0, #24]
 8006410:	4619      	mov	r1, r3
 8006412:	2208      	movs	r2, #8
 8006414:	305c      	adds	r0, #92	; 0x5c
 8006416:	f7fb fe0d 	bl	8002034 <memset>
 800641a:	4b05      	ldr	r3, [pc, #20]	; (8006430 <std+0x38>)
 800641c:	6224      	str	r4, [r4, #32]
 800641e:	6263      	str	r3, [r4, #36]	; 0x24
 8006420:	4b04      	ldr	r3, [pc, #16]	; (8006434 <std+0x3c>)
 8006422:	62a3      	str	r3, [r4, #40]	; 0x28
 8006424:	4b04      	ldr	r3, [pc, #16]	; (8006438 <std+0x40>)
 8006426:	62e3      	str	r3, [r4, #44]	; 0x2c
 8006428:	4b04      	ldr	r3, [pc, #16]	; (800643c <std+0x44>)
 800642a:	6323      	str	r3, [r4, #48]	; 0x30
 800642c:	bd10      	pop	{r4, pc}
 800642e:	bf00      	nop
 8006430:	0800674d 	.word	0x0800674d
 8006434:	0800676f 	.word	0x0800676f
 8006438:	080067a7 	.word	0x080067a7
 800643c:	080067cb 	.word	0x080067cb

08006440 <_cleanup_r>:
 8006440:	4901      	ldr	r1, [pc, #4]	; (8006448 <_cleanup_r+0x8>)
 8006442:	f000 b8af 	b.w	80065a4 <_fwalk_reent>
 8006446:	bf00      	nop
 8006448:	08006381 	.word	0x08006381

0800644c <__sfmoreglue>:
 800644c:	2268      	movs	r2, #104	; 0x68
 800644e:	b570      	push	{r4, r5, r6, lr}
 8006450:	1e4d      	subs	r5, r1, #1
 8006452:	4355      	muls	r5, r2
 8006454:	460e      	mov	r6, r1
 8006456:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800645a:	f7ff fa63 	bl	8005924 <_malloc_r>
 800645e:	4604      	mov	r4, r0
 8006460:	b140      	cbz	r0, 8006474 <__sfmoreglue+0x28>
 8006462:	2100      	movs	r1, #0
 8006464:	e9c0 1600 	strd	r1, r6, [r0]
 8006468:	300c      	adds	r0, #12
 800646a:	60a0      	str	r0, [r4, #8]
 800646c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8006470:	f7fb fde0 	bl	8002034 <memset>
 8006474:	4620      	mov	r0, r4
 8006476:	bd70      	pop	{r4, r5, r6, pc}

08006478 <__sfp_lock_acquire>:
 8006478:	4801      	ldr	r0, [pc, #4]	; (8006480 <__sfp_lock_acquire+0x8>)
 800647a:	f000 b8b3 	b.w	80065e4 <__retarget_lock_acquire_recursive>
 800647e:	bf00      	nop
 8006480:	20000211 	.word	0x20000211

08006484 <__sfp_lock_release>:
 8006484:	4801      	ldr	r0, [pc, #4]	; (800648c <__sfp_lock_release+0x8>)
 8006486:	f000 b8ae 	b.w	80065e6 <__retarget_lock_release_recursive>
 800648a:	bf00      	nop
 800648c:	20000211 	.word	0x20000211

08006490 <__sinit_lock_acquire>:
 8006490:	4801      	ldr	r0, [pc, #4]	; (8006498 <__sinit_lock_acquire+0x8>)
 8006492:	f000 b8a7 	b.w	80065e4 <__retarget_lock_acquire_recursive>
 8006496:	bf00      	nop
 8006498:	20000212 	.word	0x20000212

0800649c <__sinit_lock_release>:
 800649c:	4801      	ldr	r0, [pc, #4]	; (80064a4 <__sinit_lock_release+0x8>)
 800649e:	f000 b8a2 	b.w	80065e6 <__retarget_lock_release_recursive>
 80064a2:	bf00      	nop
 80064a4:	20000212 	.word	0x20000212

080064a8 <__sinit>:
 80064a8:	b510      	push	{r4, lr}
 80064aa:	4604      	mov	r4, r0
 80064ac:	f7ff fff0 	bl	8006490 <__sinit_lock_acquire>
 80064b0:	69a3      	ldr	r3, [r4, #24]
 80064b2:	b11b      	cbz	r3, 80064bc <__sinit+0x14>
 80064b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80064b8:	f7ff bff0 	b.w	800649c <__sinit_lock_release>
 80064bc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80064c0:	6523      	str	r3, [r4, #80]	; 0x50
 80064c2:	4b13      	ldr	r3, [pc, #76]	; (8006510 <__sinit+0x68>)
 80064c4:	4a13      	ldr	r2, [pc, #76]	; (8006514 <__sinit+0x6c>)
 80064c6:	681b      	ldr	r3, [r3, #0]
 80064c8:	62a2      	str	r2, [r4, #40]	; 0x28
 80064ca:	42a3      	cmp	r3, r4
 80064cc:	bf08      	it	eq
 80064ce:	2301      	moveq	r3, #1
 80064d0:	4620      	mov	r0, r4
 80064d2:	bf08      	it	eq
 80064d4:	61a3      	streq	r3, [r4, #24]
 80064d6:	f000 f81f 	bl	8006518 <__sfp>
 80064da:	6060      	str	r0, [r4, #4]
 80064dc:	4620      	mov	r0, r4
 80064de:	f000 f81b 	bl	8006518 <__sfp>
 80064e2:	60a0      	str	r0, [r4, #8]
 80064e4:	4620      	mov	r0, r4
 80064e6:	f000 f817 	bl	8006518 <__sfp>
 80064ea:	2200      	movs	r2, #0
 80064ec:	2104      	movs	r1, #4
 80064ee:	60e0      	str	r0, [r4, #12]
 80064f0:	6860      	ldr	r0, [r4, #4]
 80064f2:	f7ff ff81 	bl	80063f8 <std>
 80064f6:	2201      	movs	r2, #1
 80064f8:	2109      	movs	r1, #9
 80064fa:	68a0      	ldr	r0, [r4, #8]
 80064fc:	f7ff ff7c 	bl	80063f8 <std>
 8006500:	2202      	movs	r2, #2
 8006502:	2112      	movs	r1, #18
 8006504:	68e0      	ldr	r0, [r4, #12]
 8006506:	f7ff ff77 	bl	80063f8 <std>
 800650a:	2301      	movs	r3, #1
 800650c:	61a3      	str	r3, [r4, #24]
 800650e:	e7d1      	b.n	80064b4 <__sinit+0xc>
 8006510:	080068e0 	.word	0x080068e0
 8006514:	08006441 	.word	0x08006441

08006518 <__sfp>:
 8006518:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800651a:	4607      	mov	r7, r0
 800651c:	f7ff ffac 	bl	8006478 <__sfp_lock_acquire>
 8006520:	4b1e      	ldr	r3, [pc, #120]	; (800659c <__sfp+0x84>)
 8006522:	681e      	ldr	r6, [r3, #0]
 8006524:	69b3      	ldr	r3, [r6, #24]
 8006526:	b913      	cbnz	r3, 800652e <__sfp+0x16>
 8006528:	4630      	mov	r0, r6
 800652a:	f7ff ffbd 	bl	80064a8 <__sinit>
 800652e:	3648      	adds	r6, #72	; 0x48
 8006530:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8006534:	3b01      	subs	r3, #1
 8006536:	d503      	bpl.n	8006540 <__sfp+0x28>
 8006538:	6833      	ldr	r3, [r6, #0]
 800653a:	b30b      	cbz	r3, 8006580 <__sfp+0x68>
 800653c:	6836      	ldr	r6, [r6, #0]
 800653e:	e7f7      	b.n	8006530 <__sfp+0x18>
 8006540:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8006544:	b9d5      	cbnz	r5, 800657c <__sfp+0x64>
 8006546:	4b16      	ldr	r3, [pc, #88]	; (80065a0 <__sfp+0x88>)
 8006548:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800654c:	60e3      	str	r3, [r4, #12]
 800654e:	6665      	str	r5, [r4, #100]	; 0x64
 8006550:	f000 f847 	bl	80065e2 <__retarget_lock_init_recursive>
 8006554:	f7ff ff96 	bl	8006484 <__sfp_lock_release>
 8006558:	2208      	movs	r2, #8
 800655a:	4629      	mov	r1, r5
 800655c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8006560:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8006564:	6025      	str	r5, [r4, #0]
 8006566:	61a5      	str	r5, [r4, #24]
 8006568:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800656c:	f7fb fd62 	bl	8002034 <memset>
 8006570:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8006574:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8006578:	4620      	mov	r0, r4
 800657a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800657c:	3468      	adds	r4, #104	; 0x68
 800657e:	e7d9      	b.n	8006534 <__sfp+0x1c>
 8006580:	2104      	movs	r1, #4
 8006582:	4638      	mov	r0, r7
 8006584:	f7ff ff62 	bl	800644c <__sfmoreglue>
 8006588:	4604      	mov	r4, r0
 800658a:	6030      	str	r0, [r6, #0]
 800658c:	2800      	cmp	r0, #0
 800658e:	d1d5      	bne.n	800653c <__sfp+0x24>
 8006590:	f7ff ff78 	bl	8006484 <__sfp_lock_release>
 8006594:	230c      	movs	r3, #12
 8006596:	603b      	str	r3, [r7, #0]
 8006598:	e7ee      	b.n	8006578 <__sfp+0x60>
 800659a:	bf00      	nop
 800659c:	080068e0 	.word	0x080068e0
 80065a0:	ffff0001 	.word	0xffff0001

080065a4 <_fwalk_reent>:
 80065a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80065a8:	4606      	mov	r6, r0
 80065aa:	4688      	mov	r8, r1
 80065ac:	2700      	movs	r7, #0
 80065ae:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80065b2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80065b6:	f1b9 0901 	subs.w	r9, r9, #1
 80065ba:	d505      	bpl.n	80065c8 <_fwalk_reent+0x24>
 80065bc:	6824      	ldr	r4, [r4, #0]
 80065be:	2c00      	cmp	r4, #0
 80065c0:	d1f7      	bne.n	80065b2 <_fwalk_reent+0xe>
 80065c2:	4638      	mov	r0, r7
 80065c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80065c8:	89ab      	ldrh	r3, [r5, #12]
 80065ca:	2b01      	cmp	r3, #1
 80065cc:	d907      	bls.n	80065de <_fwalk_reent+0x3a>
 80065ce:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80065d2:	3301      	adds	r3, #1
 80065d4:	d003      	beq.n	80065de <_fwalk_reent+0x3a>
 80065d6:	4629      	mov	r1, r5
 80065d8:	4630      	mov	r0, r6
 80065da:	47c0      	blx	r8
 80065dc:	4307      	orrs	r7, r0
 80065de:	3568      	adds	r5, #104	; 0x68
 80065e0:	e7e9      	b.n	80065b6 <_fwalk_reent+0x12>

080065e2 <__retarget_lock_init_recursive>:
 80065e2:	4770      	bx	lr

080065e4 <__retarget_lock_acquire_recursive>:
 80065e4:	4770      	bx	lr

080065e6 <__retarget_lock_release_recursive>:
 80065e6:	4770      	bx	lr

080065e8 <__swhatbuf_r>:
 80065e8:	b570      	push	{r4, r5, r6, lr}
 80065ea:	460e      	mov	r6, r1
 80065ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80065f0:	4614      	mov	r4, r2
 80065f2:	2900      	cmp	r1, #0
 80065f4:	461d      	mov	r5, r3
 80065f6:	b096      	sub	sp, #88	; 0x58
 80065f8:	da08      	bge.n	800660c <__swhatbuf_r+0x24>
 80065fa:	2200      	movs	r2, #0
 80065fc:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8006600:	602a      	str	r2, [r5, #0]
 8006602:	061a      	lsls	r2, r3, #24
 8006604:	d410      	bmi.n	8006628 <__swhatbuf_r+0x40>
 8006606:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800660a:	e00e      	b.n	800662a <__swhatbuf_r+0x42>
 800660c:	466a      	mov	r2, sp
 800660e:	f000 f903 	bl	8006818 <_fstat_r>
 8006612:	2800      	cmp	r0, #0
 8006614:	dbf1      	blt.n	80065fa <__swhatbuf_r+0x12>
 8006616:	9a01      	ldr	r2, [sp, #4]
 8006618:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800661c:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8006620:	425a      	negs	r2, r3
 8006622:	415a      	adcs	r2, r3
 8006624:	602a      	str	r2, [r5, #0]
 8006626:	e7ee      	b.n	8006606 <__swhatbuf_r+0x1e>
 8006628:	2340      	movs	r3, #64	; 0x40
 800662a:	2000      	movs	r0, #0
 800662c:	6023      	str	r3, [r4, #0]
 800662e:	b016      	add	sp, #88	; 0x58
 8006630:	bd70      	pop	{r4, r5, r6, pc}
	...

08006634 <__smakebuf_r>:
 8006634:	898b      	ldrh	r3, [r1, #12]
 8006636:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006638:	079d      	lsls	r5, r3, #30
 800663a:	4606      	mov	r6, r0
 800663c:	460c      	mov	r4, r1
 800663e:	d507      	bpl.n	8006650 <__smakebuf_r+0x1c>
 8006640:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8006644:	6023      	str	r3, [r4, #0]
 8006646:	6123      	str	r3, [r4, #16]
 8006648:	2301      	movs	r3, #1
 800664a:	6163      	str	r3, [r4, #20]
 800664c:	b002      	add	sp, #8
 800664e:	bd70      	pop	{r4, r5, r6, pc}
 8006650:	466a      	mov	r2, sp
 8006652:	ab01      	add	r3, sp, #4
 8006654:	f7ff ffc8 	bl	80065e8 <__swhatbuf_r>
 8006658:	9900      	ldr	r1, [sp, #0]
 800665a:	4605      	mov	r5, r0
 800665c:	4630      	mov	r0, r6
 800665e:	f7ff f961 	bl	8005924 <_malloc_r>
 8006662:	b948      	cbnz	r0, 8006678 <__smakebuf_r+0x44>
 8006664:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006668:	059a      	lsls	r2, r3, #22
 800666a:	d4ef      	bmi.n	800664c <__smakebuf_r+0x18>
 800666c:	f023 0303 	bic.w	r3, r3, #3
 8006670:	f043 0302 	orr.w	r3, r3, #2
 8006674:	81a3      	strh	r3, [r4, #12]
 8006676:	e7e3      	b.n	8006640 <__smakebuf_r+0xc>
 8006678:	4b0d      	ldr	r3, [pc, #52]	; (80066b0 <__smakebuf_r+0x7c>)
 800667a:	62b3      	str	r3, [r6, #40]	; 0x28
 800667c:	89a3      	ldrh	r3, [r4, #12]
 800667e:	6020      	str	r0, [r4, #0]
 8006680:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006684:	81a3      	strh	r3, [r4, #12]
 8006686:	9b00      	ldr	r3, [sp, #0]
 8006688:	6120      	str	r0, [r4, #16]
 800668a:	6163      	str	r3, [r4, #20]
 800668c:	9b01      	ldr	r3, [sp, #4]
 800668e:	b15b      	cbz	r3, 80066a8 <__smakebuf_r+0x74>
 8006690:	4630      	mov	r0, r6
 8006692:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006696:	f000 f8d1 	bl	800683c <_isatty_r>
 800669a:	b128      	cbz	r0, 80066a8 <__smakebuf_r+0x74>
 800669c:	89a3      	ldrh	r3, [r4, #12]
 800669e:	f023 0303 	bic.w	r3, r3, #3
 80066a2:	f043 0301 	orr.w	r3, r3, #1
 80066a6:	81a3      	strh	r3, [r4, #12]
 80066a8:	89a0      	ldrh	r0, [r4, #12]
 80066aa:	4305      	orrs	r5, r0
 80066ac:	81a5      	strh	r5, [r4, #12]
 80066ae:	e7cd      	b.n	800664c <__smakebuf_r+0x18>
 80066b0:	08006441 	.word	0x08006441

080066b4 <_malloc_usable_size_r>:
 80066b4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80066b8:	1f18      	subs	r0, r3, #4
 80066ba:	2b00      	cmp	r3, #0
 80066bc:	bfbc      	itt	lt
 80066be:	580b      	ldrlt	r3, [r1, r0]
 80066c0:	18c0      	addlt	r0, r0, r3
 80066c2:	4770      	bx	lr

080066c4 <_raise_r>:
 80066c4:	291f      	cmp	r1, #31
 80066c6:	b538      	push	{r3, r4, r5, lr}
 80066c8:	4604      	mov	r4, r0
 80066ca:	460d      	mov	r5, r1
 80066cc:	d904      	bls.n	80066d8 <_raise_r+0x14>
 80066ce:	2316      	movs	r3, #22
 80066d0:	6003      	str	r3, [r0, #0]
 80066d2:	f04f 30ff 	mov.w	r0, #4294967295
 80066d6:	bd38      	pop	{r3, r4, r5, pc}
 80066d8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80066da:	b112      	cbz	r2, 80066e2 <_raise_r+0x1e>
 80066dc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80066e0:	b94b      	cbnz	r3, 80066f6 <_raise_r+0x32>
 80066e2:	4620      	mov	r0, r4
 80066e4:	f000 f830 	bl	8006748 <_getpid_r>
 80066e8:	462a      	mov	r2, r5
 80066ea:	4601      	mov	r1, r0
 80066ec:	4620      	mov	r0, r4
 80066ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80066f2:	f000 b817 	b.w	8006724 <_kill_r>
 80066f6:	2b01      	cmp	r3, #1
 80066f8:	d00a      	beq.n	8006710 <_raise_r+0x4c>
 80066fa:	1c59      	adds	r1, r3, #1
 80066fc:	d103      	bne.n	8006706 <_raise_r+0x42>
 80066fe:	2316      	movs	r3, #22
 8006700:	6003      	str	r3, [r0, #0]
 8006702:	2001      	movs	r0, #1
 8006704:	e7e7      	b.n	80066d6 <_raise_r+0x12>
 8006706:	2400      	movs	r4, #0
 8006708:	4628      	mov	r0, r5
 800670a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800670e:	4798      	blx	r3
 8006710:	2000      	movs	r0, #0
 8006712:	e7e0      	b.n	80066d6 <_raise_r+0x12>

08006714 <raise>:
 8006714:	4b02      	ldr	r3, [pc, #8]	; (8006720 <raise+0xc>)
 8006716:	4601      	mov	r1, r0
 8006718:	6818      	ldr	r0, [r3, #0]
 800671a:	f7ff bfd3 	b.w	80066c4 <_raise_r>
 800671e:	bf00      	nop
 8006720:	2000000c 	.word	0x2000000c

08006724 <_kill_r>:
 8006724:	b538      	push	{r3, r4, r5, lr}
 8006726:	2300      	movs	r3, #0
 8006728:	4d06      	ldr	r5, [pc, #24]	; (8006744 <_kill_r+0x20>)
 800672a:	4604      	mov	r4, r0
 800672c:	4608      	mov	r0, r1
 800672e:	4611      	mov	r1, r2
 8006730:	602b      	str	r3, [r5, #0]
 8006732:	f7fa fbfb 	bl	8000f2c <_kill>
 8006736:	1c43      	adds	r3, r0, #1
 8006738:	d102      	bne.n	8006740 <_kill_r+0x1c>
 800673a:	682b      	ldr	r3, [r5, #0]
 800673c:	b103      	cbz	r3, 8006740 <_kill_r+0x1c>
 800673e:	6023      	str	r3, [r4, #0]
 8006740:	bd38      	pop	{r3, r4, r5, pc}
 8006742:	bf00      	nop
 8006744:	2000020c 	.word	0x2000020c

08006748 <_getpid_r>:
 8006748:	f7fa bbe9 	b.w	8000f1e <_getpid>

0800674c <__sread>:
 800674c:	b510      	push	{r4, lr}
 800674e:	460c      	mov	r4, r1
 8006750:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006754:	f000 f894 	bl	8006880 <_read_r>
 8006758:	2800      	cmp	r0, #0
 800675a:	bfab      	itete	ge
 800675c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800675e:	89a3      	ldrhlt	r3, [r4, #12]
 8006760:	181b      	addge	r3, r3, r0
 8006762:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8006766:	bfac      	ite	ge
 8006768:	6563      	strge	r3, [r4, #84]	; 0x54
 800676a:	81a3      	strhlt	r3, [r4, #12]
 800676c:	bd10      	pop	{r4, pc}

0800676e <__swrite>:
 800676e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006772:	461f      	mov	r7, r3
 8006774:	898b      	ldrh	r3, [r1, #12]
 8006776:	4605      	mov	r5, r0
 8006778:	05db      	lsls	r3, r3, #23
 800677a:	460c      	mov	r4, r1
 800677c:	4616      	mov	r6, r2
 800677e:	d505      	bpl.n	800678c <__swrite+0x1e>
 8006780:	2302      	movs	r3, #2
 8006782:	2200      	movs	r2, #0
 8006784:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006788:	f000 f868 	bl	800685c <_lseek_r>
 800678c:	89a3      	ldrh	r3, [r4, #12]
 800678e:	4632      	mov	r2, r6
 8006790:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006794:	81a3      	strh	r3, [r4, #12]
 8006796:	4628      	mov	r0, r5
 8006798:	463b      	mov	r3, r7
 800679a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800679e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80067a2:	f000 b817 	b.w	80067d4 <_write_r>

080067a6 <__sseek>:
 80067a6:	b510      	push	{r4, lr}
 80067a8:	460c      	mov	r4, r1
 80067aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80067ae:	f000 f855 	bl	800685c <_lseek_r>
 80067b2:	1c43      	adds	r3, r0, #1
 80067b4:	89a3      	ldrh	r3, [r4, #12]
 80067b6:	bf15      	itete	ne
 80067b8:	6560      	strne	r0, [r4, #84]	; 0x54
 80067ba:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80067be:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80067c2:	81a3      	strheq	r3, [r4, #12]
 80067c4:	bf18      	it	ne
 80067c6:	81a3      	strhne	r3, [r4, #12]
 80067c8:	bd10      	pop	{r4, pc}

080067ca <__sclose>:
 80067ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80067ce:	f000 b813 	b.w	80067f8 <_close_r>
	...

080067d4 <_write_r>:
 80067d4:	b538      	push	{r3, r4, r5, lr}
 80067d6:	4604      	mov	r4, r0
 80067d8:	4608      	mov	r0, r1
 80067da:	4611      	mov	r1, r2
 80067dc:	2200      	movs	r2, #0
 80067de:	4d05      	ldr	r5, [pc, #20]	; (80067f4 <_write_r+0x20>)
 80067e0:	602a      	str	r2, [r5, #0]
 80067e2:	461a      	mov	r2, r3
 80067e4:	f7fa fbd9 	bl	8000f9a <_write>
 80067e8:	1c43      	adds	r3, r0, #1
 80067ea:	d102      	bne.n	80067f2 <_write_r+0x1e>
 80067ec:	682b      	ldr	r3, [r5, #0]
 80067ee:	b103      	cbz	r3, 80067f2 <_write_r+0x1e>
 80067f0:	6023      	str	r3, [r4, #0]
 80067f2:	bd38      	pop	{r3, r4, r5, pc}
 80067f4:	2000020c 	.word	0x2000020c

080067f8 <_close_r>:
 80067f8:	b538      	push	{r3, r4, r5, lr}
 80067fa:	2300      	movs	r3, #0
 80067fc:	4d05      	ldr	r5, [pc, #20]	; (8006814 <_close_r+0x1c>)
 80067fe:	4604      	mov	r4, r0
 8006800:	4608      	mov	r0, r1
 8006802:	602b      	str	r3, [r5, #0]
 8006804:	f7fa fbe5 	bl	8000fd2 <_close>
 8006808:	1c43      	adds	r3, r0, #1
 800680a:	d102      	bne.n	8006812 <_close_r+0x1a>
 800680c:	682b      	ldr	r3, [r5, #0]
 800680e:	b103      	cbz	r3, 8006812 <_close_r+0x1a>
 8006810:	6023      	str	r3, [r4, #0]
 8006812:	bd38      	pop	{r3, r4, r5, pc}
 8006814:	2000020c 	.word	0x2000020c

08006818 <_fstat_r>:
 8006818:	b538      	push	{r3, r4, r5, lr}
 800681a:	2300      	movs	r3, #0
 800681c:	4d06      	ldr	r5, [pc, #24]	; (8006838 <_fstat_r+0x20>)
 800681e:	4604      	mov	r4, r0
 8006820:	4608      	mov	r0, r1
 8006822:	4611      	mov	r1, r2
 8006824:	602b      	str	r3, [r5, #0]
 8006826:	f7fa fbdf 	bl	8000fe8 <_fstat>
 800682a:	1c43      	adds	r3, r0, #1
 800682c:	d102      	bne.n	8006834 <_fstat_r+0x1c>
 800682e:	682b      	ldr	r3, [r5, #0]
 8006830:	b103      	cbz	r3, 8006834 <_fstat_r+0x1c>
 8006832:	6023      	str	r3, [r4, #0]
 8006834:	bd38      	pop	{r3, r4, r5, pc}
 8006836:	bf00      	nop
 8006838:	2000020c 	.word	0x2000020c

0800683c <_isatty_r>:
 800683c:	b538      	push	{r3, r4, r5, lr}
 800683e:	2300      	movs	r3, #0
 8006840:	4d05      	ldr	r5, [pc, #20]	; (8006858 <_isatty_r+0x1c>)
 8006842:	4604      	mov	r4, r0
 8006844:	4608      	mov	r0, r1
 8006846:	602b      	str	r3, [r5, #0]
 8006848:	f7fa fbdd 	bl	8001006 <_isatty>
 800684c:	1c43      	adds	r3, r0, #1
 800684e:	d102      	bne.n	8006856 <_isatty_r+0x1a>
 8006850:	682b      	ldr	r3, [r5, #0]
 8006852:	b103      	cbz	r3, 8006856 <_isatty_r+0x1a>
 8006854:	6023      	str	r3, [r4, #0]
 8006856:	bd38      	pop	{r3, r4, r5, pc}
 8006858:	2000020c 	.word	0x2000020c

0800685c <_lseek_r>:
 800685c:	b538      	push	{r3, r4, r5, lr}
 800685e:	4604      	mov	r4, r0
 8006860:	4608      	mov	r0, r1
 8006862:	4611      	mov	r1, r2
 8006864:	2200      	movs	r2, #0
 8006866:	4d05      	ldr	r5, [pc, #20]	; (800687c <_lseek_r+0x20>)
 8006868:	602a      	str	r2, [r5, #0]
 800686a:	461a      	mov	r2, r3
 800686c:	f7fa fbd5 	bl	800101a <_lseek>
 8006870:	1c43      	adds	r3, r0, #1
 8006872:	d102      	bne.n	800687a <_lseek_r+0x1e>
 8006874:	682b      	ldr	r3, [r5, #0]
 8006876:	b103      	cbz	r3, 800687a <_lseek_r+0x1e>
 8006878:	6023      	str	r3, [r4, #0]
 800687a:	bd38      	pop	{r3, r4, r5, pc}
 800687c:	2000020c 	.word	0x2000020c

08006880 <_read_r>:
 8006880:	b538      	push	{r3, r4, r5, lr}
 8006882:	4604      	mov	r4, r0
 8006884:	4608      	mov	r0, r1
 8006886:	4611      	mov	r1, r2
 8006888:	2200      	movs	r2, #0
 800688a:	4d05      	ldr	r5, [pc, #20]	; (80068a0 <_read_r+0x20>)
 800688c:	602a      	str	r2, [r5, #0]
 800688e:	461a      	mov	r2, r3
 8006890:	f7fa fb66 	bl	8000f60 <_read>
 8006894:	1c43      	adds	r3, r0, #1
 8006896:	d102      	bne.n	800689e <_read_r+0x1e>
 8006898:	682b      	ldr	r3, [r5, #0]
 800689a:	b103      	cbz	r3, 800689e <_read_r+0x1e>
 800689c:	6023      	str	r3, [r4, #0]
 800689e:	bd38      	pop	{r3, r4, r5, pc}
 80068a0:	2000020c 	.word	0x2000020c

080068a4 <_init>:
 80068a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80068a6:	bf00      	nop
 80068a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80068aa:	bc08      	pop	{r3}
 80068ac:	469e      	mov	lr, r3
 80068ae:	4770      	bx	lr

080068b0 <_fini>:
 80068b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80068b2:	bf00      	nop
 80068b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80068b6:	bc08      	pop	{r3}
 80068b8:	469e      	mov	lr, r3
 80068ba:	4770      	bx	lr
